{"version":3,"sources":["webpack://Query/webpack/bootstrap","webpack://Query/./src/prepare/parser.js","webpack://Query/./src/util.js","webpack://Query/./src/evaluate/evaluate.js","webpack://Query/./src/evaluate/resolve.js","webpack://Query/./src/types.js","webpack://Query/./src/evaluate/evaluate-query.js","webpack://Query/./src/evaluate/const.js","webpack://Query/./src/finalise/filter.js","webpack://Query/./src/query.js","webpack://Query/./src/prepare/joins.js","webpack://Query/./src/evaluate/evaluate-compound.js","webpack://Query/./src/persist.js","webpack://Query/./src/evaluate/process.js","webpack://Query/./node_modules/moment/moment.js","webpack://Query/./src/explain.js","webpack://Query/./src/evaluate/compound.js","webpack://Query/./src/prepare/tokenizer.js","webpack://Query/./src/providers/information.js","webpack://Query/(webpack)/buildin/module.js","webpack://Query/./node_modules/moment-duration-format/lib/moment-duration-format.js","webpack://Query/./src/evaluate/aggregates.js","webpack://Query/./src/finalise/sort.js","webpack://Query/./src/prepare/subquery.js","webpack://Query/./src/prepare/prepare.js","webpack://Query/./src/evaluate/evaluate-values.js","webpack://Query/./src/finalise/limit.js","webpack://Query/./src/prepare/context.js","webpack://Query/./src/ddl.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","tokenize","TOKEN_TYPES","DEBUG_TOKEN_TYPES","repeat","NODE_TYPES","DEBUG_NODE_TYPES","keys","KEYWORD_CONSTANTS","parseTokenList","parseFromTokenList","parse","sql","tokens","stringsThatAreReallyFunctionCalls","reduce","processor","castKeywordStrings","extractKeywordStrings","ast","TokenError","token","source","expectedType","undefined","expectedValue","tokenMessage","type","start","message","offset","Math","max","substr","min","Error","preParse","tokenList","length","KEYWORD","BRACKET","NAME","peek","current","suspect","next","expect","end","isList","COMMA","QUERY_OPERATOR","descendQueryExpression","root","descendStatement","op","COMPOUND_QUERY","id","children","substring","trim","out","STATEMENT","push","descendClause","CLAUSE","child","descendNode","alias","headers","predicate","descendExpression","using","inner","distinct","descendOrder","SYMBOL","window","descendWindow","LIST","OPERATOR","FUNCTION_CALL","filter","order","bracket","STRING","NUMBER","CONSTANT","PARAM","nodes","e","markBAnd","bubbleOperators","stripBAnd","index","assembleExpressionTree","left","right","farRight","desc","partition","frameUnit","toLowerCase","preceding","Number","POSITIVE_INFINITY","following","pending","splice","j","a","b","getPrecedence","node","walk","test","c2","c1","callback","scalar","data","toString","Array","isArray","matchAll","string","regex","match","exec","global","zip","values","getColumnTypes","row","entries","map","Date","char","join","isNullDate","date","isNaN","isValidDate","deepClone","result","path","pathParts","split","matchInBrackets","input","brackets","depth","queryResultToObjectArray","newHeaders","originalHeaders","shift","toUTF8Array","str","utf8","charcode","charCodeAt","splitter","limit","indexOf","SymbolError","evaluate","getRowEvaluator","evaluateConstantExpression","params","dummyContext","isConstantExpression","expr","every","aggregateValues","rowSorter","comparator","OPERATORS","VALUE_FUNCTIONS","WINDOW_FUNCTIONS","AGGREGATE_FUNCTIONS","TABLE_VALUED_FUNCTIONS","isStrictNull","rows","fnName","group","this","windows","partitionVal","sort","slice","currentVal","v","fn","orderVals","userFunctions","args","String","resolveValue","Function","toUpperCase","PI","Boolean","context","evaluator","ra","rb","isFinite","localeCompare","from","Set","PendingValue","resolvePath","col","tables","colAlias","cols","populateValue","tail","tableAlias","getTableAliasMap","head","getRowData","matching","lastIndexOf","table","val","outer","setTableAliases","UNKNOWN","getRows","processColumns","populateValues","filterRows","groupRows","populateAggregates","sortRows","explain","distinctResults","getCTEsMap","nodeToQueryObject","nodesToTables","getWindowsMap","evaluateValues","applyLimit","getQueryContext","query","statementNode","providers","views","schema","output_buffer","output","clauses","replace","JSON","stringify","select","rawCols","CTEs","analyse","where","having","some","colHeaders","forEach","moment","momentDurationFormatSetup","DAYS_OF_WEEK","COALESCE","vs","find","RAND","random","CAST","format","parseInt","parseFloat","utc","HEX","BIN","SUBSTR","REPLACE","to","REVERSE","reverse","LOWER","UPPER","CONCAT","CHAR","fromCodePoint","UNICODE","codePointAt","JSON_STRINGIFY","TO_UTF8_HEX","padStart","LPAD","RPAD","padEnd","TRIM","REGEXP_EXTRACT","regexp","RegExp","WEEKDAY","DATE","TIME","DATETIME","CURRENT_DATE","DURATION","duration","DATE_ADD","part","add","toDate","DATE_DIFF","dateA","dateB","diff","AGE","EXTRACT","ceil","year","floor","day","dayOfYear","hour","toISOString","isoWeekday","isoWeekYear","second","millisecond","minute","month","quarter","utcOffset","isoWeek","DISTANCE","lat1","lon1","lat2","lon2","φ1","toRadians","φ2","Δφ","Δλ","sin","cos","atan2","sqrt","deg","TO_CODE_POINT","FROM_CODE_POINT","getOwnPropertyNames","COUNT","x","SUM","total","AVG","MIN","MAX","LISTAGG","JSON_ARRAYAGG","JSON_OBJECTAGG","STDDEV_POP","VAR_POP","STDDEV_SAMP","VAR_SAMP","VAR_SUM","COVAR_POP","meanA","meanB","_","COVAR_SAMP","mean","pow","STDDEV","isNull","includes","RANGE","step","abs","count","fill","LOAD","url","fetch","ok","json","console","error","statusText","HTML","DOMParser","text","dom","parseFromString","fragment","URL","hash","getElementsByTagName","getElementById","HTMLTableElement","tr","querySelectorAll","td","textContent","ROW_NUMBER","RANK","prevVal","DENSE_RANK","rank","PERCENT_RANK","CUME_DIST","NTILE","nExpr","bucketSize","LAG","offsetExpr","rowValue","LEAD","FIRST_VALUE","LAST_VALUE","NTH_VALUE","CUME_SUM","CUME_FRAC","PERCENTILE_DISC","findIndex","PERCENTILE_CONT","valA","distA","valB","distB","FREQ","MAP","filterRow","condition","strict","traverseWhereTree","symbol","operator","child1","child2","operand1","operand2","Parser","persist","evaluateQuery","evaluateCompoundQuery","performDDL","VIEW_KEY","Query","getItem","providerCount","EMPTY_RESULT","run","subQuery","dummyArray","runSelect","parsedQuery","queries","Promise","all","q","findJoin","findPath","t_lower","path_lower","ts","array","applyJoin","newRows","one2many","joinData","setRowData","added","sr","si","newRow","cloneRow","writable","setJoin","targetTable","setJoinPredicate","parseExpression","evaluateCompound","COMPOUND_OPERATORS","resultsL","resultsR","localStorage","setItem","getPrimaryResults","nodeId","endsWith","tName","tableObj","tmpR","newCols","k","informationSchema","setAnalysis","evaluateStatement","callbacks","now","startupTime","results","beforeJoin","isConstant","constantResults","subquery","initialCount","rowCount","afterJoin","totalTime","tableName","schemaName","primaryTable","colNum","hookCallback","hooks","apply","arguments","isObject","isUndefined","isNumber","isDate","arr","res","hasOwnProp","extend","valueOf","createUTC","locale","createLocalOrUTC","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","fun","len","momentProperties","copyConfig","prop","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","config","updateOffset","isMoment","obj","absFloor","number","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","warn","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","arg","stack","deprecations","deprecateSimple","isFunction","mergeConfigs","parentConfig","childConfig","Locale","set","aliases","addUnitAlias","unit","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","padded","ordinal","func","localeData","formatMoment","expandFormat","mom","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p1","p2","p3","p4","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInYear","isLeapYear","y","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createDate","h","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","shiftWeekdays","ws","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","defaults","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","currentDateArray","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","monthStr","dayStr","hourStr","minuteStr","secondStr","parsedArray","weekdayStr","parsedInput","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","isObjectEmpty","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","days","milliseconds","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","separator","sign","offsetFromString","chunkOffset","matcher","matches","parts","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","base","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","monthDiff","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getSetWeekYearHelper","weeksTarget","setWeekAll","dayOfYearData","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","keepOffset","inspect","zone","isLocal","prefix","suffix","toJSON","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","_monthsParseExact","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","_weekdaysParseExact","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","substituteTimeAgo","abs$1","toISOString$1","Y","D","toFixed","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME_SECONDS","TIME_MS","WEEK","MONTH","factory","formatExplainCol","analyses","curr","planRows","actualRows","distinctMap","outMap","Map","has","INTERSECT","headerRow","dL","dR","EXCEPT","UNION","prevToken","re","infoTables","table_type","table_name","table_schema","getTables","columns","whereName","findWhere","getColumns","column_name","ordinal_position","data_type","view_definition","routines","schema_name","formatRoutine","routine_name","routine_type","routine_schema","definition","nativeMatch","routine_body","routine_definition","external_name","external_language","routine_columns","schemata","webpackPolyfill","paths","toLocaleStringWorks","toLocaleStringRoundingWorks","intlNumberFormatWorks","intlNumberFormatRoundingWorks","types","bubbles","targets","stringIncludes","search","repeatZero","qty","cachedNumberFormat","options","cacheKey","cache","Intl","NumberFormat","formatNumber","userLocale","integerString","fractionString","exponentString","useToLocaleString","useGrouping","grouping","maximumSignificantDigits","minimumIntegerDigits","fractionDigits","groupingSeparator","decimalSeparator","roundingOptions","localeStringOptions","maximumFractionDigits","minimumFractionDigits","toLocaleString","toPrecision","integerLength","fractionLength","digitCount","digits","digitsArray","carry","stringRound","exponent","formattedString","durationLabelCompare","label","durationGetLabels","labels","each","localeDataKey","labelType","labelKey","engLocale","durationLabelsStandard","S","SS","ww","durationLabelsShort","durationTimeTemplates","HMS","HM","MS","durationLabelTypes","durationPluralKey","integerValue","decimalValue","item","pluck","compact","unique","intersection","_b","rest","initial","any","flatten","featureTestFormatterRounding","formatter","featureTestFormatter","passed","durationsFormat","durations","settings","precision","template","returnMomentTypes","formattedDurations","dur","outputTypes","largest","durationFormat","isNegative","remainder","remainderMonths","momentTokens","tokenDefs","escape","general","typeMap","tokenizer","stopTrim","_durationTimeTemplates","useLeftUnits","usePlural","forceLength","trunc","useSignificantDigits","significantDigits","significantDigitsCache","minValue","isMinValue","maxValue","isMaxValue","trimIncludes","rLarge","rSmall","rBoth","rMid","rAll","rFinal","trimLarge","trimSmall","trimMid","trimFinal","rawTokens","currentToken","momentTypes","momentType","rawValue","isSmallest","isLargest","wholeValue","tokenLength","truncMethod","truncate","places","factor","foundFirst","bubbled","formatValue","formatOptions","formattedValue","formattedValueEn","formattedValueMS","findType","bubbleTypes","bubble","bubbleMomentType","target","targetMomentType","outputType","pluralKey","autoLocalized","pluralizedLabels","_durationLabelTypes","defaultFormatTemplate","firstType","lastType","findLast","init","toLocaleStringFormatter","toLocaleStringSupportsLocales","intlNumberFormatFormatter","groupBy","groupByMap","g","aggRow","filteredRows","computeAggregates","getOrderingValue","parsedOrder","va","orderBy","orderNode","TypeError","clause","REQUIRED_CLAUSES","rq","firstRow","width","unshift","resolveConstant","findTable","subqueries","viewMatch","view","dropViewMatch","tableMatch","createTable","insertMatch","insertIntoTable","insertQuery","duplicate","objArray","updateMatch","whereCol","whereExpr","updateVal","whereResults","whereVal","updateTable","deleteMatch","deleteFromTable","dropMatch","dropTable"],"mappings":"sBACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,k4DClFAC,EAAQ,IAArDC,E,EAAAA,SAAUC,E,EAAAA,YAAaC,E,EAAAA,kBACvBC,EAAWJ,EAAQ,GAAnBI,OAQAC,EAAeL,EAAQ,GAAvBK,WAEFC,EAAmB5B,OAAO6B,KAAKF,GAE/BG,EAAoB,oOAE1BzC,EAAOD,QAAU,CACb2C,eAAgBC,EAEhBC,MAHa,SAGNC,GACH,IAEMC,EAFgB,CAAEC,GAEKC,QAAO,SAACF,EAAQG,GAAT,OAAuBA,EAAUH,KAASZ,EAASW,IAIvF,MAFuB,CAAEK,EAAoBC,GAEvBH,QAAO,SAACI,EAAKH,GAAN,OAAoBA,EAAUG,KAAMT,EAAmBG,EAAQD,KAGhGP,aACAC,mBACAE,qB,IAGEY,E,YAQF,WAAaC,EAAOC,GAAyD,IAAjDC,EAAiD,4DAApCC,EAAWC,EAAyB,4DAAXD,EAAW,UACzE,IAAME,EAAeL,EAAK,gCACGlB,EAAkBkB,EAAMM,MAD3B,YACoCN,EAAMpC,MAD1C,gBACuDoC,EAAMO,OACnF,2BAEAC,EAAUH,OAEc,IAAjBH,IACPM,GAAW,gBAAJ,OAAoB1B,EAAkBoB,IAAtC,YAA+E,IAAlBE,EAAP,YAA4CA,EAA5C,KAA8D,GAApH,MAGX,IAAMK,EAASC,KAAKC,IAAI,EAAGX,EAAMO,MAAQ,GAXgC,OAYzEC,GAAW,iBAAJ,OAAqBP,EAAOW,OAAOH,EAAQ,KAClDD,GAAW,iBAAJ,OAAqBzB,EAAO,IAAK2B,KAAKG,IAAI,EAAGJ,IAA7C,KAbkE,sBAenED,I,mBAvBWM,Q,EA2BCA,OAO1B,SAASC,EAAUC,GACf,IAAK,IAAIrE,EAAI,EAAGA,EAAIqE,EAAUC,OAAQtE,IAAK,CACvC,IAAMkB,EAAImD,EAAUrE,GAGhBkB,EAAEyC,OAASzB,EAAYqC,SAAuB,UAAZrD,EAAED,OACjCjB,EAAIqE,EAAUC,OAAS,GAAKD,EAAUrE,EAAE,GAAG2D,OAASzB,EAAYsC,UAEnEtD,EAAEyC,KAAOzB,EAAYuC,OAUjC,SAAS/B,EAAoB2B,GAAsB,IAAXf,EAAW,uDAAJ,GACvCtD,EAAI,EAWR,SAAS0E,EAAMf,GAAuB,IAAjB1C,EAAiB,4DAAXuC,EACjBmB,EAAUN,EAAUrE,GAE1B,QAAK2E,IAIAhB,IAASgB,EAAQhB,YAA2B,IAAV1C,GAAyBA,IAAU0D,EAAQ1D,QActF,SAAS2D,EAASjB,GAAuB,IAAjB1C,EAAiB,4DAAXuC,EAC1B,QAAIkB,EAAKf,EAAM1C,KAGX4D,KAEO,GAaf,SAASC,EAAQnB,GAAuB,IAAjB1C,EAAiB,4DAAXuC,EACnBmB,EAAUN,EAAUrE,GAE1B,IAAK2E,EACD,MAAM,IAAIvB,EAAW,KAAME,EAAQK,EAAM1C,GAG7C,GAAK0C,IAASgB,EAAQhB,WAA2B,IAAV1C,GAAyBA,IAAU0D,EAAQ1D,MAC9E,MAAM,IAAImC,EAAWuB,EAASrB,EAAQK,EAAM1C,GAGhD,OAAOoD,EAAUrE,KAGrB,SAAS2E,IACL,OAAON,EAAUrE,GAGrB,SAAS6E,IACL,OAAOR,EAAUrE,KAOrB,SAAS+E,IACL,OAAO/E,GAAKqE,EAAUC,OAG1B,SAASU,IAGL,OADAJ,EAAQ1C,EAAY+C,SACXF,KAAUL,EAAKxC,EAAYqC,UAAaG,EAAKxC,EAAYgD,iBAAoBR,EAAKxC,EAAYsC,QAAS,MAGpH,SAASW,IAKL,IAL+B,IACvBvB,EAAUe,IAAVf,MAEJwB,EAAOC,IAEJX,EAAKxC,EAAYgD,iBAAiB,CAErC,IAAMhE,EAAI2D,IAEJS,EAAK,CACP3B,KAAMtB,EAAWkD,eACjBC,GAAItE,EAAED,MACNwE,SAAU,CAAEL,EAAMC,MAGtBC,EAAGhC,OAASA,EAAOoC,UAAU9B,EAAOe,KAAaA,IAAUf,OAAO+B,OAElEP,EAAOE,EAGX,OAAOF,EAGX,SAASC,IAUL,IAVyB,IACjBzB,EAAUe,IAAVf,MAGJgC,EAAM,CACNjC,KAAMtB,EAAWwD,UACjBL,GAAI,KACJC,SAAU,IAGPf,EAAKxC,EAAYqC,UACpBqB,EAAIH,SAASK,KAAKC,KAKtB,OAFAH,EAAItC,OAASA,EAAOoC,UAAU9B,EAAOe,KAAaA,IAAUf,OAAO+B,OAE5DC,EAGX,SAASG,IACL,IAAM7E,EAAI4D,EAAO5C,EAAYqC,SAGzBqB,EAAM,CACNjC,KAAMtB,EAAW2D,OACjBR,GAAItE,EAAED,MACNwE,SAAU,IAGd,OAAQvE,EAAED,OACN,IAAK,OACD,KAAO+D,KAAU,CACb,IAAM3E,EAAIsE,IAENsB,OAAK,EAcT,GAXIrB,EAAQ1C,EAAYsC,QAAS,MAC7ByB,EAAQd,IAERL,EAAO5C,EAAYsC,QAAS,MAI5ByB,EAAQC,IAEZN,EAAIH,SAASK,KAAKG,GAEdrB,EAAQ1C,EAAYqC,QAAS,QAC7B0B,EAAME,MAAQrB,EAAO5C,EAAYuC,MAAMxD,MAGnC2D,EAAQ1C,EAAYsC,QAAS,MAAM,CAGnC,IAFAyB,EAAMG,QAAU,GAEVpB,KAAU,CACZ,IAAMQ,EAAKV,EAAO5C,EAAYuC,MAAMxD,MACpCgF,EAAMG,QAAQN,KAAKN,GAGvBV,EAAO5C,EAAYsC,QAAS,KAIpC,GAAII,EAAQ1C,EAAYqC,QAAS,MAC7B0B,EAAMI,UAAYC,IAClBL,EAAM3C,QAAN,cAAuB2C,EAAMI,UAAU/C,aAEpC,GAAIsB,EAAQ1C,EAAYqC,QAAS,SAAU,CAC9C,IAAMhE,EAAOuE,EAAO5C,EAAYuC,MAChCwB,EAAMM,MAAQhG,EAAKU,MACnBgF,EAAM3C,QAAN,iBAA0B/C,EAAKU,OAGnCgF,EAAMO,OAAQ,EACV5B,EAAQ1C,EAAYqC,QAAS,QAC7B0B,EAAMO,OAAQ,EAEd5B,EAAQ1C,EAAYqC,QAAS,SAGjC0B,EAAM3C,OAASA,EAAOoC,UAAUrF,EAAEuD,MAAOe,KAAaA,IAAUf,OAAO+B,OAE/E,MACA,IAAK,SAKD,IAJIf,EAAQ1C,EAAYqC,QAAS,cAC7BqB,EAAIa,UAAW,GAGZzB,KAAU,CACb,IAAM3E,EAAIsE,IACJsB,EAAQK,IAGd,GAFAV,EAAIH,SAASK,KAAKG,GAEdrB,EAAQ1C,EAAYqC,QAAS,MAAO,CACpC,IAAM4B,EAAQrB,EAAO5C,EAAYuC,MAEjCwB,EAAME,MAAQA,EAAMlF,MACpBgF,EAAM3C,QAAN,cAAuB6C,EAAMlF,OAGjCgF,EAAM3C,OAASA,EAAOoC,UAAUrF,EAAEuD,MAAOe,KAAaA,IAAUf,OAAO+B,OAE/E,MACA,IAAK,WACD,KAAOX,KAEHY,EAAIH,SAASK,KAAKY,KAE1B,MACA,IAAK,WACD,KAAO1B,KAEHY,EAAIH,SAASK,KAAKQ,KAE1B,MACA,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,SAEDV,EAAIH,SAASK,KAAKQ,KACtB,MACA,IAAK,OACD,KAAOtB,KAAU,CACb,IAAM3E,EAAIsE,IACJa,EAAKV,EAAO5C,EAAYuC,MAAMxD,MAG9BgF,EAAQ,CAAEtC,KAAMtB,EAAWsE,OAAQnB,MAGzC,GAFAI,EAAIH,SAASK,KAAKG,GAEdrB,EAAQ1C,EAAYsC,QAAS,KAAM,CAGnC,IAFAyB,EAAMG,QAAU,GAEVpB,KAAU,CACZ,IAAMQ,EAAKV,EAAO5C,EAAYuC,MAAMxD,MACpCgF,EAAMG,QAAQN,KAAKN,GAGvBV,EAAO5C,EAAYsC,QAAS,KAGhCM,EAAO5C,EAAYqC,QAAS,MAC5BO,EAAO5C,EAAYsC,QAAS,KAE5ByB,EAAMR,SAAW,CAAEN,KAEnBL,EAAO5C,EAAYsC,QAAS,KAE5ByB,EAAM3C,OAASA,EAAOoC,UAAUrF,EAAEuD,MAAOe,KAAaA,IAAUf,OAAO+B,OAE/E,MACA,IAAK,SACD,KAAOX,KAAU,CACb,IAAM3E,EAAIsE,IACJa,EAAKV,EAAO5C,EAAYuC,MAAMxD,MAG9BgF,EAAQ,CAAEtC,KAAMtB,EAAWsE,OAAQnB,MAEzCV,EAAO5C,EAAYqC,QAAS,MAC5BO,EAAO5C,EAAYsC,QAAS,KAE5ByB,EAAMW,OAASC,IAEf/B,EAAO5C,EAAYsC,QAAS,KAE5BoB,EAAIH,SAASK,KAAKG,GAElBA,EAAM3C,OAASA,EAAOoC,UAAUrF,EAAEuD,MAAOe,KAAaA,IAAUf,OAAO+B,OAE/E,MACA,IAAK,SACD,KAAOX,KAAU,CACb,IAAM3E,EAAIsE,IACJsB,EAAQ,CAAEtC,KAAMtB,EAAWyE,KAAMtB,GAAI,KAAMC,SAAU,IAI3D,IAHAG,EAAIH,SAASK,KAAKG,GAElBnB,EAAO5C,EAAYsC,QAAS,KACrBQ,KACHiB,EAAMR,SAASK,KAAKQ,KAExBxB,EAAO5C,EAAYsC,QAAS,KAE5ByB,EAAM3C,OAASA,EAAOoC,UAAUrF,EAAEuD,MAAOe,KAAaA,IAAUf,OAAO+B,OAE/E,MACA,IAAK,UACGf,EAAQ1C,EAAYuC,KAAM,WAC1BmB,EAAIH,SAASK,KAAK,CAAEnC,KAAMtB,EAAWsE,OAAQnB,GAAI,YAE5CZ,EAAQ1C,EAAYuC,KAAM,OAC/BmB,EAAIH,SAASK,KAAK,CAAEnC,KAAMtB,EAAWsE,OAAQnB,GAAI,QAEjDI,EAAIH,SAASK,KAAK,CAAEnC,KAAMtB,EAAWsE,OAAQnB,GAAI,UAEzD,MACA,IAAK,eACL,IAAK,aACL,IAAK,cACL,IAAK,cACD,IAAMA,EAAKV,EAAO5C,EAAYuC,MAAMxD,MACpC2E,EAAIH,SAASK,KAAK,CAAEnC,KAAMtB,EAAWsE,OAAQnB,OAEjD,MACA,IAAK,SACD,IAAMA,EAAKV,EAAO5C,EAAYuC,MAAMxD,MAMpC,IAJA2E,EAAIO,MAAQX,EAEZV,EAAO5C,EAAYqC,QAAS,OAErBS,KAAU,CACb,IAAMzE,EAAOuE,EAAO5C,EAAYuC,MAAMxD,MAEtC6D,EAAO5C,EAAY6E,SAAU,KAE7B,IAAM9F,EAAQqF,IAEdV,EAAIH,SAASK,KAAK,CACdnC,KAAMtB,EAAW0E,SACjBvB,GAAI,IACJC,SAAU,CACN,CAAE9B,KAAMtB,EAAWsE,OAAQnB,GAAIjF,GAC/BU,KAKhB,MACA,QACI,MAAM,IAAImC,EAAWlC,EAAGoC,EAAQpB,EAAYqC,SAKpD,OAFAqB,EAAItC,OAASA,EAAOoC,UAAUxE,EAAE0C,MAAOe,KAAaA,IAAUf,OAAO+B,OAE9DC,EAMX,SAASM,IAEL,IAAIN,EACE1E,EAAIyD,IAEV,OAAQzD,EAAEyC,MACN,KAAKzB,EAAYuC,KAGb,GAFAI,IAEID,EAAQ1C,EAAYsC,QAAS,KAAM,CASnC,IANAoB,EAAM,CAAEjC,KAAMtB,EAAW2E,cAAexB,GAAItE,EAAED,MAAOwE,SAAU,IAE3Db,EAAQ1C,EAAYqC,QAAS,cAC7BqB,EAAIa,UAAW,GAGZzB,MAGHY,EAAIH,SAASK,KAAKQ,KAIb1B,EAAQ1C,EAAY+C,QAOpBL,EAAQ1C,EAAYqC,YAiC7B,GAxBAO,EAAO5C,EAAYsC,QAAS,KAExBI,EAAQ1C,EAAYqC,QAAS,YAE7BO,EAAO5C,EAAYsC,QAAS,KAE5BM,EAAO5C,EAAYqC,QAAS,SAE5BqB,EAAIqB,OAASX,IAEbxB,EAAO5C,EAAYsC,QAAS,MAG5BI,EAAQ1C,EAAYqC,QAAS,kBAE7BO,EAAO5C,EAAYsC,QAAS,KAE5BM,EAAO5C,EAAYqC,QAAS,YAE5BqB,EAAIsB,MAAQR,IAEZ5B,EAAO5C,EAAYsC,QAAS,MAG5BI,EAAQ1C,EAAYqC,QAAS,QAAS,CAEtC,IAAM4C,EAAUvC,EAAQ1C,EAAYsC,QAAS,KAEzCE,EAAKxC,EAAYuC,OACjBmB,EAAIgB,OAAS/B,IAAO5D,MACpBkG,GAAWrC,EAAO5C,EAAYsC,QAAS,OAGvC2C,GAAWrC,EAAO5C,EAAYsC,QAAS,KACvCoB,EAAIgB,OAASC,IACb/B,EAAO5C,EAAYsC,QAAS,MAKpC,MAGJoB,EAAM,CAAEjC,KAAMtB,EAAWsE,OAAQnB,GAAItE,EAAED,OACvC,MACJ,KAAKiB,EAAYkF,OACbvC,IACAe,EAAM,CAAEjC,KAAMtB,EAAW+E,OAAQ5B,GAAItE,EAAED,OACvC,MACJ,KAAKiB,EAAYmF,OACbxC,IACAe,EAAM,CAAEjC,KAAMtB,EAAWgF,OAAQ7B,IAAKtE,EAAED,OACxC,MACJ,KAAKiB,EAAYoF,SACbzC,IACAe,EAAM,CAAEjC,KAAMtB,EAAWiF,SAAU9B,GAAItE,EAAED,OACzC,MACJ,KAAKiB,EAAYqF,MACb1C,IACAe,EAAM,CAAEjC,KAAMtB,EAAWkF,MAAO/B,GAAItE,EAAED,OACtC,MACJ,KAAKiB,EAAY6E,SACblC,IACAe,EAAM,CAAEjC,KAAMtB,EAAW0E,SAAUvB,GAAItE,EAAED,MAAOwE,SAAU,IAC1D,MACJ,KAAKvD,EAAYsC,QAGb,GAFAK,IAEIH,EAAKxC,EAAYqC,SAAU,CAC3BqB,EAAMT,IACNL,EAAO5C,EAAYsC,QAAS,KAC5B,MAKJ,IAFAoB,EAAM,CAAEjC,KAAMtB,EAAWyE,KAAMtB,GAAI,KAAMC,SAAU,IAE7CT,KACFY,EAAIH,SAASK,KAAKQ,KAGtBxB,EAAO5C,EAAYsC,QAAS,KAE5B,MACJ,KAAKtC,EAAY+C,MACb,MAAM,IAAId,MAAJ,0CAA6CjD,EAAE0C,QACzD,QACI,MAAM,IAAIR,EAAWlC,EAAGoC,GAKhC,OAFAsC,EAAItC,OAASA,EAAOoC,UAAUxE,EAAE0C,MAAOe,KAAaA,IAAUf,OAAO+B,OAE9DC,EAGX,SAASU,IAKL,IAL0B,IAClB1C,EAAUe,IAAVf,MAEF4D,EAAQ,IAENzC,MAAUL,EAAKxC,EAAYsC,QAAS,MACxC,IACIgD,EAAM1B,KAAKI,KACb,MAAOuB,GACL,MAIR,GAAqB,IAAjBD,EAAMlD,OACN,MAAMH,MAAM,8CAGhB,GAAqB,IAAjBqD,EAAMlD,OACN,OAAOkD,EAAM,GAGjBE,EAASF,GAETG,EAAgBH,GAEhBI,EAAUJ,GAEV,IAAIK,EAAQ,EAuEZ,IAAMzC,EAhEN,SAAS0C,EAAwBN,GAC7B,IAAMpC,EAAOoC,EAAMK,GAEnB,IAAKzC,GAAQA,EAAKzB,OAAStB,EAAW0E,SAClC,MAAM5C,MAAM,yBAMhB,IAAI4D,EAAOP,IAAQK,GAenB,GAbIE,EAAKpE,OAAStB,EAAW0E,SACzBgB,EAAOD,EAAuBN,GACvBO,EAAKpE,OAAStB,EAAWyE,QAIhCiB,EAAOA,EAAKtC,SAAS,IAChBnC,OAAL,WAAkByE,EAAKzE,OAAvB,MAGJ8B,EAAKK,SAAS,GAAKsC,EAGH,YAAZ3C,EAAKI,IACO,gBAAZJ,EAAKI,GAEL,OAAOJ,EAGX,IAAI4C,EAAQR,IAAQK,GAepB,GAbIG,EAAMrE,OAAStB,EAAW0E,SAC1BiB,EAAQF,EAAuBN,GACxBQ,EAAMrE,OAAStB,EAAWyE,MAAqB,OAAZ1B,EAAKI,IAA2B,WAAZJ,EAAKI,MAGnEwC,EAAQA,EAAMvC,SAAS,IACjBnC,OAAN,WAAmB0E,EAAM1E,OAAzB,MAGJ8B,EAAKK,SAAS,GAAKuC,EAEnB5C,EAAK9B,OAAL,UAAiB8B,EAAKK,SAAS,GAAGnC,OAAlC,YAA4C8B,EAAK9B,OAAjD,YAA2D8B,EAAKK,SAASnB,OAAS,EAAIc,EAAKK,SAAS,GAAGnC,OAAO,IAE9F,YAAZ8B,EAAKI,GAAkB,CAEvB,IAAIyC,EAAWT,IAAQK,GAEnBI,EAAStE,OAAStB,EAAW0E,SAC7BkB,EAAWH,EAAuBN,GAC3BS,EAAStE,OAAStB,EAAWyE,OACpCmB,EAAWA,EAASxC,SAAS,IAGjCL,EAAKK,SAAS,GAAKwC,EAEnB7C,EAAK9B,QAAL,eAAuB2E,EAAS3E,QAGpC,OAAO8B,EAGE0C,CAAuBN,GAIpC,OAFApC,EAAK9B,OAASA,EAAOoC,UAAU9B,EAAOe,KAAaA,IAAUf,OAAO+B,OAE7DP,EAMX,SAASsB,IACL,IAAMd,EAAMU,IASZ,OAPI1B,EAAQ1C,EAAYqC,QAAS,QAC7BqB,EAAIsC,MAAO,EAGXtD,EAAQ1C,EAAYqC,QAAS,OAG1BqB,EAMX,SAASiB,IAEL,IAAMD,EAAS,GAiDf,OA/CIhC,EAAQ1C,EAAYqC,QAAS,kBAC7BqC,EAAOuB,UAAY7B,KAGnB1B,EAAQ1C,EAAYqC,QAAS,cAC7BqC,EAAOM,MAAQR,MAMfhC,EAAKxC,EAAYqC,QAAS,SAC1BG,EAAKxC,EAAYqC,QAAS,UAC1BG,EAAKxC,EAAYqC,QAAS,aAG1BqC,EAAOwB,UAAYvD,IAAO5D,MAAMoH,cAEhCvD,EAAO5C,EAAY6E,SAAU,WAEzBnC,EAAQ1C,EAAYqC,QAAS,cAC7BqC,EAAO0B,UAAYC,OAAOC,kBAC1B1D,EAAO5C,EAAYqC,QAAS,cAErBK,EAAQ1C,EAAYqC,QAAS,eACpCqC,EAAO0B,UAAY,GAGnB1B,EAAO0B,WAAaxD,EAAO5C,EAAYmF,QAAQpG,MAC/C6D,EAAO5C,EAAYqC,QAAS,cAGhCO,EAAO5C,EAAY6E,SAAU,OAEzBnC,EAAQ1C,EAAYqC,QAAS,cAC7BqC,EAAO6B,UAAYF,OAAOC,kBAC1B1D,EAAO5C,EAAYqC,QAAS,cAErBK,EAAQ1C,EAAYqC,QAAS,eACpCqC,EAAO6B,UAAY,GAGnB7B,EAAO6B,WAAa3D,EAAO5C,EAAYmF,QAAQpG,MAC/C6D,EAAO5C,EAAYqC,QAAS,eAI7BqC,EAGX,OAvpBAxC,EAASC,GAupBFc,KAUX,SAASuC,EAAUF,GAEf,IADA,IAAIkB,GAAU,EACL1I,EAAI,EAAGA,EAAIwH,EAAMlD,OAAQtE,IAAK,CACnC,IAAMyB,EAAI+F,EAAMxH,GAChB,IAAKyB,EAAG,MAEK,YAATA,EAAE+D,GACFkD,GAAU,EACHA,GAAoB,QAATjH,EAAE+D,KACpB/D,EAAE+D,GAAK,OACPkD,GAAU,IAKtB,SAASd,EAAWJ,GAChB,IAAK,IAAMxH,KAAKwH,EACQ,SAAhBA,EAAMxH,GAAGwF,IACTgC,EAAMmB,OAAO3I,EAAG,GAS5B,SAAS2H,EAAiBH,GACtB,IAAK,IAAIxH,EAAIwH,EAAMlD,OAAS,EAAGtE,EAAI,EAAGA,IAAK,CAGvC,GAFUwH,EAAMxH,GAEV2D,OAAStB,EAAW0E,SAI1B,IAAK,IAAI6B,EAAI5I,EAAG4I,EAAI,EAAGA,IAAK,CACxB,IAAMC,EAAIrB,EAAMoB,GACVE,EAAItB,EAAMoB,EAAE,GAElB,GAAIE,EAAEnF,OAAStB,EAAW0E,UAAYgC,EAAcD,GAAKC,EAAcF,GAEnE,MAGJrB,EAAMoB,EAAE,GAAKC,EACbrB,EAAMoB,GAAKE,IAUvB,SAASC,EAAeC,GACpB,OAAQA,EAAKxD,IACT,IAAK,MACD,OAAO,GACX,IAAK,KACD,OAAO,GACX,IAAK,UACL,IAAK,OACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,UACL,IAAK,cACL,IAAK,KACL,IAAK,SACL,IAAK,OACL,IAAK,WACL,IAAK,SACL,IAAK,aACD,OAAO,GACX,IAAK,KACD,OAAO,GACX,IAAK,IACL,IAAK,IACD,OAAO,GACX,IAAK,IACL,IAAK,IACD,OAAO,GACX,IAAK,KACD,OAAO,GACX,QACI,OAAO,KAQnB,SAAS1C,EAAmCD,GACxC,IAAK,IAAI7C,EAAI,EAAGA,EAAI6C,EAAOyB,OAAS,EAAGtE,IAC/B6C,EAAO7C,GAAG2D,OAASzB,EAAYkF,QAC/BvE,EAAO7C,EAAE,GAAG2D,OAASzB,EAAYsC,SACX,MAAtB3B,EAAO7C,EAAE,GAAGiB,QAEZ4B,EAAO7C,GAAG2D,KAAOzB,EAAYuC,MAGrC,OAAO5B,EAQX,SAASI,EAAoBE,GAUzB,OATAA,EAAM8F,EAAK9F,GAAK,SAAA6F,GACZ,GAAIA,EAAKrF,OAAStB,EAAW2E,eAAiB,UAAUkC,KAAKF,EAAKxD,IAAK,CACnE,IAAM2D,EAAKH,EAAKvD,SAAS,GACrB,qCAAqCyD,KAAKC,EAAG3D,MAC7C2D,EAAGxF,KAAOtB,EAAW+E,QAG7B,OAAO4B,KASf,SAAS9F,EAAuBC,GAU5B,OATAA,EAAM8F,EAAK9F,GAAK,SAAA6F,GACZ,GAAIA,EAAKrF,OAAStB,EAAW2E,eAAiB,aAAakC,KAAKF,EAAKxD,IAAK,CACtE,IAAM4D,EAAKJ,EAAKvD,SAAS,GACrBjD,EAAkB0G,KAAKE,EAAG5D,MAC1B4D,EAAGzF,KAAOtB,EAAW+E,QAG7B,OAAO4B,KAKf,SAASC,EAAMD,EAAMK,GAEjB,IADAL,EAAOK,EAASL,IACPvD,SACL,IAAK,IAAIzF,EAAI,EAAGA,EAAIgJ,EAAKvD,SAASnB,OAAQtE,IACtCgJ,EAAKvD,SAASzF,GAAKiJ,EAAKD,EAAKvD,SAASzF,GAAIqJ,GAGlD,OAAOL,I,g6CC33BX,SAASM,EAAQC,GACf,OAAIA,QACO,KAEa,oBAApBA,EAAKC,YAGLC,MAAMC,QAAQH,QAHlB,EAMOA,EAoET,SAASI,EAASC,EAAQC,GAEzB,IAEIC,EAFElE,EAAM,GAIZ,IACCkE,EAAQD,EAAME,KAAKH,KAGlBhE,EAAIE,KAAKgE,SAEFA,IAAUD,EAAMG,QAEzB,OAAOpE,EAgDR,SAASqE,EAAK1H,EAAM2H,GAElB,IADA,IAAMtE,EAAM,GACH5F,EAAI,EAAGA,EAAIuC,EAAK+B,OAAQtE,IAC7B4F,EAAIrD,EAAKvC,IAAMkK,EAAOlK,GAE1B,OAAO4F,EAvKT7F,EAAOD,QAAU,CACfwJ,SACAa,eAiCF,SAAyBC,GAErB,GAAIA,EACA,OAAO1J,OACF2J,QAAQD,GACRnD,QAAO,0CAA4C,IAAlBqC,EAA1B,SACPgB,KAAI,yBAAE/J,EAAF,KAAQU,EAAR,WAAoB,CAAEV,OAAMoD,KAAM1C,aAAiBsJ,KAAO,OAAxB,EAAwCtJ,OAGvF,MAAO,IAzCTmB,OAiDF,SAAiBoI,EAAM/I,GACrB,OAAOgI,MAAMhI,EAAI,GAAGgJ,KAAKD,IAjDzBE,WAyDF,SAAqBC,GAEnB,MAAgB,iBAATA,GAA2BA,aAAgBJ,MAAQK,OAAOD,IA1DjEE,YAkEF,SAAsBF,GACpB,OAAOA,aAAgBJ,OAASK,OAAOD,IAlEvCG,UA+EF,SAAoBC,EAAQC,GAE1B,GAAoB,IAAhBA,EAAK1G,OAAc,OAAO,EAAP,GAAYyG,GAInC,IAAME,EAAYD,EAAKE,MAAM,KAC7B,YAAYH,EAAZ,KAAqBE,EAAU,GAA/B,KAAyCF,EAAOE,EAAU,QArF1DtB,WACAwB,gBAkHF,SAA0BC,GACxB,IAAMC,EAAW1B,EAASyB,EAAO,WAEjC,GAAwB,IAApBC,EAAS/G,OACX,OAAO,KAGT,IAAIgH,EAAQ,EAPmB,uBAQ/B,YAAsBD,EAAtB,+CAAgC,KAArBlE,EAAqB,QAO9B,GANmB,MAAfA,EAAQ,GACVmE,IAEAA,IAGY,IAAVA,EACF,OAAOF,EAAM1F,UAAU2F,EAAS,GAAGxD,MAAQ,EAAGV,EAAQU,QAhB3B,kFAoB/B,MAAM1D,MAAM,sBArIZoH,yBA6IF,SAAmCR,GAA2B,IAAnBS,EAAmB,uDAAN,KAChDC,EAAkBV,EAAOW,QAE/B,OAAOX,EAAOT,KAAI,SAAAxJ,GAAC,OAAImJ,EAAIuB,GAAcC,EAAiB3K,OA/I1D6K,YAqKF,SAAsBC,GAGpB,IADA,IAAIC,EAAO,GACF7L,EAAE,EAAGA,EAAI4L,EAAItH,OAAQtE,IAAK,CAC/B,IAAI8L,EAAWF,EAAIG,WAAW/L,GAC1B8L,EAAW,IAAMD,EAAK/F,KAAKgG,GACtBA,EAAW,KAChBD,EAAK/F,KAAK,IAAQgG,GAAY,EACpB,IAAmB,GAAXA,GAEbA,EAAW,OAAUA,GAAY,MACtCD,EAAK/F,KAAK,IAAQgG,GAAY,GACpB,IAASA,GAAU,EAAK,GACxB,IAAmB,GAAXA,IAIlB9L,IAIA8L,EAAW,QAAwB,KAAXA,IAAmB,GACV,KAApBF,EAAIG,WAAW/L,IAC5B6L,EAAK/F,KAAK,IAAQgG,GAAW,GACnB,IAASA,GAAU,GAAM,GACzB,IAASA,GAAU,EAAK,GACxB,IAAmB,GAAXA,IAG1B,OAAOD,GAjMPX,MA0MF,SAAgBE,EAAOY,EAAUC,GAC7B,IAAMpE,EAAQuD,EAAMc,QAAQF,GAE5B,IAAe,IAAXnE,EACA,MAAO,CAACuD,GAGZ,GAAIa,EAAQ,EACR,MAAM9H,MAAM,kCAGhB,MAAO,CAAEiH,EAAMnH,OAAO,EAAG4D,GAAQuD,EAAMnH,OAAO4D,EAAQ,KApNxDoC,Q,2+DCZoBjI,EAAQ,GAA9B,IAEMmK,E,iUAAoBhI,QAE1BpE,EAAOD,QAAU,CACbsM,WACAC,kBACAC,2BAgRJ,SAAoCtD,GAAmB,IAAbuD,EAAa,uDAAN,KACvCC,EAAe,CAAEJ,WAAUG,UACjC,OAAOH,EAASjM,KAAKqM,EAAc,KAAMxD,IAjRzCyD,qBAqVJ,SAASA,EAAsBC,GAC3B,GAAIA,EAAK/I,OAAStB,EAAWgF,QACzBqF,EAAK/I,OAAStB,EAAW+E,QACzBsF,EAAK/I,OAAStB,EAAWiF,UACzBoF,EAAK/I,OAAStB,EAAWkF,MAEzB,OAAO,EAGX,GAAImF,EAAK/I,OAAStB,EAAW2E,eACzB0F,EAAK/I,OAAStB,EAAW0E,SAEzB,OAAO2F,EAAKjH,SAASkH,OAAM,SAAAtM,GAAC,OAAIoM,EAAqBpM,MAGzD,OAAO,GAnWPuM,kBACAC,YACAC,aACAX,e,MAGsCnK,EAAQ,GAA1CK,E,EAAAA,WAAYG,E,EAAAA,kB,EAShBR,EAAQ,GANR+K,E,EAAAA,UACAC,E,EAAAA,gBACAC,E,EAAAA,iBACAC,E,EAAAA,oBACAC,E,EAAAA,uBACAC,E,EAAAA,aAGIvC,EAAgB7I,EAAQ,GAAxB6I,YAqBR,SAASuB,EAAUhC,EAAKpB,GAAiB,WAAXqE,EAAW,uDAAN,KAC/B,OAAQrE,EAAKrF,MACT,KAAKtB,EAAWwD,UACZ,MAAM1B,MAAM,0EAKhB,KAAK9B,EAAW2E,cACZ,IAAMsG,EAAStE,EAAKxD,GAGpB,GAAIwD,EAAKpC,OAAQ,CACb,IAAI2G,EAAQ,EAAKF,GACXzG,EAAgC,iBAAhBoC,EAAKpC,OAAsB4G,KAAKC,QAAQzE,EAAKpC,QAAUoC,EAAKpC,OAElF,GAAIA,EAAOuB,UAAW,CAClB,IAAMuF,EAAeF,KAAKpB,SAAShC,EAAKxD,EAAOuB,UAAWoF,GAC1DA,EAAQA,EAAMtG,QAAO,SAAAnG,GAAC,OAAIiM,EAAU,KAAK,EAAKX,SAAStL,EAAG8F,EAAOuB,UAAWoF,GAAQG,MAGpF9G,EAAOM,OACPqG,EAAMI,KAAKd,EAAUW,KAAKpB,SAAUxF,EAAOM,QAG/C,IAAMW,EAAQ0F,EAAMrB,QAAQ9B,GAE5B,GAAIxD,EAAOwB,UAAW,CAElB,IAAKxB,EAAOM,MACR,MAAM/C,MAAM,wDAGhB,GAAyB,SAArByC,EAAOwB,UAAsB,CAC7B,IAAMxE,EAAQG,KAAKC,IAAI6D,EAAQjB,EAAO0B,UAAW,GACjDiF,EAAQA,EAAMK,MAAMhK,EAAOiE,EAAQjB,EAAO6B,UAAY,QAEnD,GAAyB,UAArB7B,EAAOwB,UAAuB,CACrC,IAAMyF,GAAcL,KAAKpB,SAAShC,EAAKxD,EAAOM,MAAOmG,GAC/CnJ,EAAM2J,EAAajH,EAAO0B,UAC1BtE,EAAM6J,EAAajH,EAAO6B,UAEhC8E,EAAQA,EAAMtG,QAAO,SAAAnG,GACjB,IAAMgN,EAAI,EAAK1B,SAAStL,EAAG8F,EAAOM,MAAOmG,GACzC,OAAOnJ,GAAO4J,GAAKA,GAAK9J,MAKpC,GAAIgF,EAAKxD,MAAMyH,EAAkB,CAC7B,IAAKrG,EAAOM,MACR,MAAM/C,MAAM,oDAIhB,IAAM4J,EAAKd,EAAiBjE,EAAKxD,IAE3BwI,EAAYT,EAAMjD,IAAI+B,EAAgBmB,KAAM5G,EAAOM,MAAOmG,IAChE,OAAOU,EAAE,WAAF,GAAGlG,EAAOmG,EAAWT,EAAOC,KAAKpB,UAAjC,SAA8CpD,EAAKvD,YAG9D,GAAIuD,EAAKxD,MAAM0H,EAAqB,CAChC,GAA6B,IAAzBlE,EAAKvD,SAASnB,OACd,MAAM,IAAIH,MAAJ,mBAAsB6E,EAAKxD,GAA3B,sCAIV,IAAMuI,EAAKb,EAAoBlE,EAAKxD,IAIpC,OAAOuI,EAAGnB,EAAgBY,KAAMD,EAAOvE,EAAKvD,SAAS,GAAIuD,EAAKvC,WAGlE,MAAMtC,MAAM,GAAD,OAAI6E,EAAKxD,GAAT,8BAGf,GAAI8H,KAAUJ,EAAqB,CAC/B,GAAI9C,EAAG,MAAW,CAWd,IAAM2D,EAAKb,EAAoBI,GAE/B,OAAOS,EAAGnB,EAAgBY,KAAMpD,EAAG,MAAWpB,EAAKvD,SAAS,KAEhE,OAIJ,IAAMsI,OAAoC,IAAvBP,KAAKS,eAAiCT,KAAKS,cAAcX,IAAYN,EAAgBM,GAExG,IAAKS,EAAI,CACL,GAAIT,KAAUH,EACV,MAAM,IAAIhJ,MAAJ,qEAAwEmJ,IAElF,MAAM,IAAInJ,MAAJ,iDAAoDmJ,EAApD,MAKV,IAAMY,EAAOlF,EAAKvD,SAAS6E,KAAI,SAAAjK,GAC3B,IACI,OAAO,EAAK+L,SAAShC,EAAK/J,EAAGgN,GAC/B,MAAO5F,GACL,OAAO,SAIf,IACI,OAAOsG,EAAE,WAAF,IAAMG,IACf,MAAOzG,GACL,OAAO,KAIf,KAAKpF,EAAWsE,OACZ,IAAMnB,EAAK2I,OAAOnF,EAAKxD,IACvB,IAGI,GAAIgI,KAAKY,wBAAwBC,SAC7B,OAAOb,KAAKY,aAAahE,EAAK5E,EAAI6H,GAGtC,MAAM,IAAIlJ,MAAJ,mDAAsD6E,EAAKxD,GAA3D,MACR,MAAOiC,GAEL,GAAIjC,EAAGsE,MAAMtH,GACT,OAAOgD,EAAG8I,cAId,MAAM7G,EAGd,KAAKpF,EAAW+E,OAEZ,GAAI,qBAAqB8B,KAAKiF,OAAOnF,EAAKxD,KAAM,CAC5C,IAAMlF,EAAI,IAAIiK,KAAKvB,EAAKxD,IACxB,GAAIqF,EAAYvK,GACZ,OAAOA,EAIf,OAAO6N,OAAOnF,EAAKxD,IAEvB,KAAKnD,EAAWgF,OACZ,OAAQ2B,EAAKxD,GAEjB,KAAKnD,EAAWiF,SACZ,GAAgB,SAAZ0B,EAAKxD,GAAe,OAAO,EAC/B,GAAgB,UAAZwD,EAAKxD,GAAgB,OAAO,EAChC,GAAgB,SAAZwD,EAAKxD,GAAe,OAAO,KAC/B,GAAgB,QAAZwD,EAAKxD,GAAc,OAAO,IAAI+E,KAClC,GAAgB,OAAZvB,EAAKxD,GAAa,OAAOzB,KAAKwK,GAClC,MAAMpK,MAAM,0BAA4B6E,EAAKxD,IAEjD,KAAKnD,EAAWkF,MACZ,QAA2B,IAAhBiG,KAAKjB,QAA0C,OAAhBiB,KAAKjB,aAAmD,IAAzBiB,KAAKjB,OAAOvD,EAAKxD,IACtF,MAAMrB,MAAM,8BAAgC6E,EAAKxD,GAAK,KAC1D,OAAOgI,KAAKjB,OAAOvD,EAAKxD,IAE5B,KAAKnD,EAAW0E,SAGZ,GAAgB,QAAZiC,EAAKxD,GACL,OAAOgJ,QAAQhB,KAAKpB,SAAShC,EAAKpB,EAAKvD,SAAS,GAAI4H,IAASG,KAAKpB,SAAShC,EAAKpB,EAAKvD,SAAS,GAAI4H,IAEtG,GAAgB,OAAZrE,EAAKxD,GACL,OAAOgJ,QAAQhB,KAAKpB,SAAShC,EAAKpB,EAAKvD,SAAS,GAAI4H,IAASG,KAAKpB,SAAShC,EAAKpB,EAAKvD,SAAS,GAAI4H,IAItG,IAAM/H,EAAKyH,EAAU/D,EAAKxD,IAE1B,IAAKF,EACD,MAAM,IAAInB,MAAJ,gCAAmC6E,EAAKxD,GAAxC,MAGV,OAAOF,EAAE,WAAF,IAAM0D,EAAKvD,SAAS6E,KAAI,SAAAjK,GAAC,OAAI,EAAK+L,SAAShC,EAAK/J,EAAGgN,QAE9D,KAAKhL,EAAW2D,OACZ,GAAgB,UAAZgD,EAAKxD,IAA8B,OAAZwD,EAAKxD,GAAa,CACzC,GAAIwD,EAAKvD,SAASnB,OAAS,EACvB,OAAOkK,QAAQhB,KAAKpB,SAAShC,EAAKpB,EAAKvD,SAAS,GAAI4H,IAEpD,MAAM,IAAIlJ,MAAJ,kCAAqC6E,EAAKxD,KAGxD,MAAMrB,MAAM,mBAAD,OAAoB6E,EAAKxD,GAAzB,YAEf,KAAKnD,EAAWyE,KACZ,OAAOkC,EAAKvD,SAAS6E,KAAI,SAAAjK,GAAC,OAAI,EAAK+L,SAAShC,EAAK/J,EAAGgN,MAExD,QACI,MAAM,IAAIlJ,MAAJ,kCAAqC6E,EAAKrF,KAA1C,aAAmDqF,EAAKxD,MAa1E,SAAS6G,EAAgBoC,EAASzF,GAAiB,IAAXqE,EAAW,uDAAN,KACzC,OAAO,SAAAjD,GACH,IACI,OAAOqE,EAAQrC,SAAShC,EAAKpB,EAAMqE,GAEvC,MAAO5F,GACH,GAAIA,aAAa0E,EACb,OAAO,KAGP,MAAM1E,IAiBtB,SAASoF,EAAU6B,EAAWxH,GAAkB,IAAXmG,EAAW,uDAAN,KACtC,OAAO,SAACsB,EAAIC,GAAL,OAAY9B,EAAW4B,EAAUC,EAAIzH,EAAOmG,GAAOqB,EAAUE,EAAI1H,EAAOmG,KAAUnG,EAAMgB,MAAQ,EAAI,IAO/G,SAAS4E,EAAYjE,EAAGC,GAUpB,OATID,aAAa0B,OACb1B,GAAKA,GAGLC,aAAayB,OACbzB,GAAKA,GAIL+F,SAAShG,IAAMgG,SAAS/F,IAChBD,GAAKC,EAGVqF,OAAOtF,GAAGiG,cAAchG,GAWnC,SAAS8D,EAAiB6B,EAASpB,EAAMX,GAAwB,IAAlBjG,EAAkB,wDAG/D,GAAgB,MAAZiG,EAAKlH,GACL,OAAO6H,EAAK/C,KAAI,SAAAxJ,GAAC,OAAI,KAGzB,IAAIoJ,EAASmD,EAAK/C,IAAI+B,EAAgBoC,EAAS/B,EAAMW,IAWrD,OANAnD,EAASA,EAAOjD,QAAO,SAAA6G,GAAC,OAAKV,EAAaU,MAEtCrH,IACAyD,EAAST,MAAMsF,KAAK,IAAIC,IAAI9E,KAGzBA,I,gBCrVT,IAAM+E,EAAelO,OAAO,iBAE5BhB,EAAOD,QAAU,CACbmP,eACAC,cACAd,aAwBJ,SAAuBhE,EAAK+E,GAAgB,IAAX9B,EAAW,uDAAN,KAC1B+B,EAA2B5B,KAA3B4B,OAAQC,EAAmB7B,KAAnB6B,SAAUC,EAAS9B,KAAT8B,KAG1B,GAAY,OAARlF,EACA,MAAMjG,MAAM,iCAKhB,QAA6B,IAAlBkL,EAASF,GAAsB,CACtC,IAAMnP,EAAIqP,EAASF,GAmBnB,QAZsB,IAAX/E,EAAIpK,IASXuP,EAAc/B,KAAMpD,EAAKpK,EAAGsP,EAAKtP,GAAIqN,QAGnB,IAAXjD,EAAIpK,IAAsBoK,EAAIpK,KAAOiP,EAC5C,OAAO7E,EAAIpK,GAInB,IAGIwP,EAHEC,EAAaC,EAAiBN,GAEhCO,EAAOR,EAEX,KAAMQ,EAAKrL,OAAS,GAAG,CAGnB,GAAIqL,KAAQF,EAAY,CACpB,IAAMvO,EAAIuO,EAAWE,GAEfpG,EAAOqG,EAAWxF,EAAKlJ,GAK7B,QAAoB,IAATqI,EACP,MAAM,IAAI4C,EAAY,wCAA0CgD,GAGpE,OAAOD,EAAY3F,EAAMiG,GAI7B,IAAMK,EAAWT,EAAOnI,QAAO,SAAA/F,GAAC,OAAIA,EAAEX,OAASoP,KAC/C,GAAIE,EAASvL,OAAS,EAAG,CACrB,IAAMpD,EAAI2O,EAAS,GACnB,OAAOX,EAAYU,EAAWxF,EAAKlJ,GAAIsO,GAG3CG,EAAOA,EAAK1L,OAAO,EAAG0L,EAAKG,YAAY,MACvCN,EAAOL,EAAIlL,OAAO0L,EAAKrL,OAAS,GAjEI,2BAqExC,YAAoB8K,EAApB,+CAA4B,KAAjBW,EAAiB,QAClBxG,EAAOqG,EAAWxF,EAAK2F,GAE7B,QAAoB,IAATxG,EAAX,CAKA,GAAa,OAATA,EACA,OAAO,KAGX,IAAMyG,EAAMd,EAAY3F,EAAM4F,GAE9B,QAAmB,IAARa,EACP,OAAOA,IApFyB,kFA6FxC,GAAIxC,KAAKyC,MAAO,CACZ,IAAMD,EAAMxC,KAAKyC,MAAMxB,QAAQL,aAAaZ,KAAKyC,MAAM7F,IAAK+E,EAAK3B,KAAKyC,MAAM5C,MAE5E,QAAmB,IAAR2C,EACP,OAAOA,EAKf,MAAM,IAAI7D,EAAY,6BAA+BgD,IA7HrDe,gBA4KJ,SAA0Bd,GAExB,IAAMK,EAAa,GAFa,uBAIhC,YAAgBL,EAAhB,+CAAwB,CAGpB,IAHoB,IAAblO,EAAa,QAChBO,EAAIP,EAAEiF,OAASjF,EAAEX,KACjBP,EAAI,EACDyB,KAAKgO,GACRhO,EAAI,GAAH,OAAMP,EAAEiF,OAASjF,EAAEX,KAAnB,YAA2BP,KAEhCkB,EAAEiF,MAAQ1E,EACVgO,EAAWhO,GAAKP,GAXY,oFA3K9BwO,oB,IAEIvD,EAAgBnK,EAAQ,GAAxBmK,YACAyD,EAAe5N,EAAQ,GAAvB4N,WACAL,EAAkBvN,EAAQ,IAA1BuN,cAiIR,SAASL,EAAY3F,EAAMyB,GACzB,GAAI,MAAOzB,EACP,OAAO,KAIX,QAAoB,IAATyB,EACP,OAAOzB,EAMX,GAAIyB,KAAQzB,EACR,OAAOA,EAAKyB,GAIhB,IAAIgF,EAAMzG,EAlBqB,uBAmB/B,YAAmByB,EAAKE,MAAM,KAA9B,+CAAoC,CAEhC,QAAmB,KADnB8E,EAAMA,EAD0B,UAEA,CAC5BA,EAAM,KACN,QAvBuB,kFA2B/B,OAAIA,QACOA,OADX,EA+BF,SAASN,EAAkBN,GAEzB,IAAMK,EAAa,GAFc,uBAIjC,YAAgBL,EAAhB,+CAAwB,KAAblO,EAAa,QAEpBuO,EADQvO,EAAEiF,OACMjF,GANa,kFASjC,OAAOuO,I,cC5KT1P,EAAOD,QAAU,CAAEuC,WAlCA,CACf8N,QAAS,EACTtK,UAAW,EACXG,OAAQ,EACRgB,cAAe,EACfL,OAAQ,EACRS,OAAQ,EACRC,OAAQ,EACRN,SAAU,EACVD,KAAM,EACNvB,eAAgB,EAChB+B,SAAU,GACVC,MAAO,IAsBoBrF,YAfX,CACjBiO,QAAS,EACT3L,QAAS,EACTS,MAAO,EACPV,QAAS,EACTE,KAAM,EACN2C,OAAQ,EACRC,OAAQ,EACRN,SAAU,EACV7B,eAAgB,EAChBoC,SAAU,EACVC,MAAO,M,mgCC/BVxH,EAAOD,Q,kDAECwJ,EAAWtH,EAAQ,GAAnBsH,O,EAC4CtH,EAAQ,IAApDoO,E,EAAAA,QAASC,E,EAAAA,eAAgBC,E,EAAAA,eACzBJ,EAAoBlO,EAAQ,GAA5BkO,gBACAK,EAAevO,EAAQ,GAAvBuO,W,EACkCvO,EAAS,IAA3CwO,E,EAAAA,UAAWC,E,EAAAA,mBACXC,EAAa1O,EAAQ,IAArB0O,SACAC,EAAY3O,EAAQ,IAApB2O,QACAC,EAAoB5O,EAAQ,IAA5B4O,gBACAC,EAAe7O,EAAQ,IAAvB6O,W,EACoD7O,EAAQ,IAA5D8O,E,EAAAA,kBAAmBC,E,EAAAA,cAAeC,E,EAAAA,cACpCC,EAAiBjP,EAAQ,IACvBkP,EAAelP,EAAQ,IAAvBkP,WACAC,EAAoBnP,EAAQ,IAA5BmP,gB,iDA2BR,WAA8BC,EAAOC,GAArC,yIAAoDpB,EAApD,+BAA4D,KAAM1D,EAAlE,+BAA2E,KAC/D+E,EAAqBF,EAArBE,UAAWC,EAAUH,EAAVG,MAGbhQ,EAAMb,OAAO6B,KAAK+O,GAAW,IAE7BE,EAASF,EAAU/P,IAAQ,IAC1BhB,KAAOgB,EAERkQ,EAAgB,GAChBC,EAAS,SAAAtH,GAAG,OAAIqH,EAAc3L,KAAKsE,SAIV,KAFzBuH,EAAUb,EAAkBO,IAEfV,SAAkD,QAAvBgB,EAAQhB,QAAQnL,GAdlE,wBAecrC,EAfd,KAeyBkO,IACb/N,OAASH,EAAIG,OAAOsO,QAAQ,eAAgB,IAChDzO,EAAIsC,SAAWtC,EAAIsC,SAASwB,QAAO,SAAA5G,GAAC,MAAa,YAATA,EAAEmF,MAjBlD,kBAkBe,CAAC,CAAC,OAAQ,CAACqM,KAAKC,UAAU3O,EAAK,KAAM,MAlBpD,YAqBQwO,EAAQzH,OArBhB,0CAuBe+G,EAAeU,EAAQzH,OAAQqC,IAvB9C,WA0BUwF,EAASJ,EAAQI,OACjBC,EAAUD,EAGV3C,EAAS2B,EAAcY,EAAQ5C,OAExB4C,EAAO,KAhCxB,kCAgCsCd,EAAWO,EAAOO,EAAO,MAhC/D,iDAgCwE,GAhCxE,WAgCUM,EAhCV,KAkCUxE,EAAUkE,EAAQ/K,OAASoK,EAAcW,EAAQ/K,QAAU,GAG3D6H,EAAU0C,EAAgBC,EAAO,CACnChC,SACAuC,UACAlE,UACAwE,OACAT,SACAF,YACAC,QACAtB,QACA1D,WAGEH,EAAWqC,EAAQrC,SAMzB8D,EAAgBd,GAEM,IAAlBA,EAAO9K,OAzDf,iBA4DQ+I,EAAO,CACH,IA7DZ,yCAgEqB+C,EAAQ3B,GAhE7B,QAgEQpB,EAhER,uBAuEmC,IAApBsE,EAAQhB,QAvEvB,wBAwEcuB,EAAgC,WAAtBP,EAAQhB,QAAQnL,GAxExC,kBAyEemL,EAAQvB,EAAQ8C,IAzE/B,eAkFI7E,EAAOkD,EAAW9B,EAASpB,EAAMsE,EAAQQ,OAKzC9B,EAAe5B,EAASuD,EAAS3E,GAvFrC,UA4FUiD,EAAe7B,EAASA,EAAQa,KAAMjC,GA5FhD,eAiGQsE,EAAQ,cACRtE,EAAOmD,EAAU/B,EAASpB,EAAMsE,EAAQ,cAO5CtE,EAAOoD,EAAmBhC,EAASA,EAAQa,KAAMjC,EAAMsE,EAAQ,aAK3DA,EAAQS,SACR/E,EAAOkD,EAAW9B,EAASpB,EAAMsE,EAAQS,SAMzCf,EAAc5L,SAAS4M,MAAK,SAAAhS,GAAC,MAAa,WAATA,EAAEmF,IAAmBnF,EAAEoG,cACxD4G,EAAOuD,EAAgBvD,IAMvBsE,EAAQ,cAERtE,EAAOqD,EAAStE,EAAUiB,EAAMsE,EAAQ,cAM5CtE,EAAO6D,EAAW7D,EAAMsE,EAAQ1F,MAAO0F,EAAQ7N,OAAQyI,GAMvDmF,EAAOjD,EAAQ6D,YACfjF,EAAKkF,SAAQ,SAAAzR,GAAC,OAAI4Q,EAAO5Q,EAAEwJ,IAAIhB,OA3InC,kBA+IWmI,GA/IX,6C,o6BCzC0CzP,EAAQ,GAA1CuJ,E,EAAAA,yBAA0BtB,E,EAAAA,IAE5BuI,EAASxQ,EAAQ,IACWA,EAAQ,GAE1CyQ,CAA0BD,G,MAEUxQ,EAAQ,GAApC0I,E,EAAAA,WAAYiB,E,EAAAA,YAEd+G,EAAe,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAE5E1F,EAAkB,CAEpB2F,SAAU,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAWA,EAAGC,KAAK9F,EAAU,iBAGvC+F,KAAM/O,KAAKgP,OACXC,KANoB,SAMdlF,EAAGnK,GAAwB,IAAlBsP,EAAkB,4DAAXzP,EAClB,MAAI,qBAAqB0F,KAAKvF,IAASmK,aAAavD,MAAcuD,EAC9D,QAAQ5E,KAAKvF,GAAcuP,SAASpF,GACpC,gBAAgB5E,KAAKvF,GAAcwP,WAAWrF,GAC9C,QAAQ5E,KAAKvF,IAAemK,EAC5B,UAAU5E,KAAKvF,GAAc6O,EAAO1E,GAAGsF,MAAMH,OAAOA,GACjD9E,OAAOL,IAElBuF,IAAK,SAAAvF,GAAC,oBAAWA,GAAGtE,SAAS,MAC7B8J,IAAK,SAAAxF,GAAC,oBAAWA,GAAGtE,SAAS,KAG7B+J,OAAQ,SAACzF,EAAGiB,EAAMzK,GAAV,OAAqB8I,EAAaU,GAAK,KAAOK,OAAOL,GAAG7J,OAAO8K,EAAMzK,IAC7EkP,QAAS,SAAC1F,EAAGiB,EAAM0E,GAAV,OAAiBrG,EAAaU,GAAK,KAAOK,OAAOL,GAAG5C,MAAM6D,GAAMtE,KAAKgJ,IAC9EC,QAAS,SAAA5F,GAAC,OAAIV,EAAaU,GAAK,KAAOK,OAAOL,GAAG5C,MAAM,IAAIyI,UAAUlJ,KAAK,KAC1EmJ,MAAO,SAAA9F,GAAC,OAAIV,EAAaU,GAAK,KAAOK,OAAOL,GAAGzF,eAC/CwL,MAAO,SAAA/F,GAAC,OAAIV,EAAaU,GAAK,KAAOK,OAAOL,GAAGQ,eAC/CwF,OAAQ,sCAAIlB,EAAJ,yBAAIA,EAAJ,uBAAWA,EAAGnI,KAAK,KAC3BsJ,KAAM5F,OAAO6F,cACbC,QAAS,SAAAlS,GAAC,OAAIqL,EAAarL,GAAK,KAAOoM,OAAOpM,GAAGmS,YAAY,IAC7DC,eAAgBtC,KAAKC,UACrBsC,YAAa,SAAAtG,GAAC,OAAInC,EAAYmC,GAAGxD,KAAI,SAAA7I,GAAC,OAAIA,EAAE+H,SAAS,IAAI6K,SAAS,EAAG,QAAM5J,KAAK,MAChF6J,KAAM,SAACxG,EAAGrM,GAAJ,IAAOpB,EAAP,uDAAS,GAAT,OAAgB8N,OAAOL,GAAGuG,SAAS5S,EAAGpB,IAC5CkU,KAAM,SAACzG,EAAGrM,GAAJ,IAAOpB,EAAP,uDAAS,GAAT,OAAgB8N,OAAOL,GAAG0G,OAAO/S,EAAGpB,IAC1CoU,KAAM,SAAC3G,GAAD,OAAOV,EAAaU,GAAK,KAAOK,OAAOL,GAAGnI,QAEhD+O,eAhCoB,SAgCJzT,EAAO0T,GACnB,IACI,IACM7K,EADK8K,OAAOD,GACD5K,KAAK9I,GACtB,OAAO6I,EAASA,EAAM,IAAMA,EAAM,GAAM,KAC1C,MAAOrC,GACL,OAAO,OAKfoN,QAAS,SAAA/G,GAAC,OAAI4E,EAAa5E,IAC3BgH,KAAM,SAAAxU,GAAC,OAAIkS,EAAOlS,GAAG2S,OAAO,eAC5B8B,KAAM,SAAAzU,GAAC,OAAIkS,EAAOlS,GAAG2S,OAAO,aAC5B+B,SAAU,SAAA1U,GAAC,OAAIkS,EAAOlS,GAAG2S,OAAO,wBAChCgC,aAAc,kBAAM,IAAI1K,MAExB2K,SAAU,SAAA9U,GAAC,OAAIoS,EAAO2C,SAAS/U,EAAG,gBAAgB6S,UAClDmC,SAAU,SAACzK,EAAMmD,EAAGuH,GAAV,OAAmB7C,EAAO7H,GAAM2K,IAAIxH,EAAGuH,GAAME,UACvDC,UAAW,SAACC,EAAOC,EAAOL,GAAf,OAAwB7C,EAAOiD,GAAOE,KAAKD,EAAOL,IAC7DO,IAAK,SAACjL,EAAM0K,GAAP,OAAgB7C,IAASmD,KAAKhL,EAAM0K,IACzCQ,QArDoB,SAqDXR,EAAMvH,GACX,IAAM1N,EAAIoS,EAAO1E,GACjB,OAAQuH,GACJ,IAAK,UACL,IAAK,YAAa,OAAOtR,KAAK+R,KAAK1V,EAAE2V,OAAS,KAC9C,IAAK,MACL,IAAK,OAAQ,OAAO3V,EAAEuK,OAEtB,IAAK,SACL,IAAK,UAAW,OAAO5G,KAAKiS,MAAM5V,EAAE2V,OAAS,IAC7C,IAAK,MAAO,OAAO3V,EAAE6V,MACrB,IAAK,MAAO,OAAO7V,EAAE8V,YACrB,IAAK,QAAS,OAAOnS,KAAKiS,OAAO5V,EAAI,KACrC,IAAK,OACL,IAAK,QAAS,OAAOA,EAAE+V,OACvB,IAAK,MAAO,OAAO/V,EAAEgW,cACrB,IAAK,SAAU,OAAOhW,EAAEiW,aACxB,IAAK,UAAW,OAAOjW,EAAEkW,cACzB,IAAK,cACL,IAAK,eAAgB,OAAoB,IAAblW,EAAEmW,SAAuC,IAAlBnW,EAAEoW,cACrD,IAAK,YACL,IAAK,aAAc,OAAOzS,KAAK+R,KAAK1V,EAAE2V,OAAS,KAC/C,IAAK,cACL,IAAK,eAAgB,OAAoB,IAAb3V,EAAEmW,SAAkBnW,EAAEoW,cAClD,IAAK,SACL,IAAK,UAAW,OAAOpW,EAAEqW,SACzB,IAAK,QACL,IAAK,SAAU,OAAOrW,EAAEsW,QAAU,EAClC,IAAK,UACL,IAAK,WAAY,OAAOtW,EAAEuW,UAC1B,IAAK,SACL,IAAK,UAAW,OAAOvW,EAAEmW,SAAWnW,EAAEoW,cAAgB,IACtD,IAAK,WAAY,OAAuB,GAAhBpW,EAAEwW,YAC1B,IAAK,gBAAiB,OAAO7S,KAAKiS,MAAM5V,EAAEwW,YAAc,IACxD,IAAK,kBAAmB,OAAOxW,EAAEwW,YAAc,GAC/C,IAAK,OACL,IAAK,QAAS,OAAOxW,EAAEyW,UACvB,IAAK,UAAW,OAAOnE,EAAatS,EAAE6V,OACtC,IAAK,OACL,IAAK,QAAS,OAAO7V,EAAE2V,SAgB/Be,SA5GoB,SA4GVC,EAAMC,EAAMC,EAAMC,GACxB,IACMC,EAAKC,EAAUL,GACfM,EAAKD,EAAUH,GACfK,EAAKF,EAAUH,EAAKF,GACpBQ,EAAKH,EAAUF,EAAKF,GAEpBnO,EAAM9E,KAAKyT,IAAIF,EAAG,GAAKvT,KAAKyT,IAAIF,EAAG,GAC7BvT,KAAK0T,IAAIN,GAAMpT,KAAK0T,IAAIJ,GACxBtT,KAAKyT,IAAID,EAAG,GAAKxT,KAAKyT,IAAID,EAAG,GAIzC,OAZU,QAUA,EAAIxT,KAAK2T,MAAM3T,KAAK4T,KAAK9O,GAAI9E,KAAK4T,KAAK,EAAE9O,KAInD,SAASuO,EAAWQ,GAChB,OAAOA,GAAO7T,KAAKwK,GAAG,QAMlCvB,EAAgB6K,cAAgB7K,EAAgBiH,QAChDjH,EAAgB8K,gBAAkB9K,EAAgB+G,K,2BAGlD,YAAmBrT,OAAOqX,oBAAoBhU,MAA9C,+CAAqD,KAA1CxD,EAA0C,QAC7CwD,KAAKxD,aAAiB8N,WACtBrB,EAAgBzM,EAAK+N,eAAiBvK,KAAKxD,K,kFAInD,IAAM2M,EAAsB,CAExB8K,MAAO,SAAAnP,GAAC,OAAIA,EAAE5B,QAAO,SAAAgR,GAAC,OAAU,IAANA,KAAa3T,QAEvC4T,IAAK,SAAArP,GAAC,OAAIA,EAAE9F,QAAO,SAACoV,EAAMnI,GAAP,OAAemI,IAAUnI,IAAM,IAElDoI,IAAK,SAAAvP,GAAC,OAAIqE,EAAoBgL,IAAIrP,GAAKA,EAAEvE,QAEzC+T,IAAK,SAAAxP,GAAC,OAAI9E,KAAKG,IAAL,MAAAH,KAAI,EAAQ8E,KAEtByP,IAAK,SAAAzP,GAAC,OAAI9E,KAAKC,IAAL,MAAAD,KAAI,EAAQ8E,KAEtB0P,QAAS,SAAC1P,EAAE9G,GAER,OADI0H,MAAMC,QAAQ3H,KAAIA,EAAIA,EAAE,IACrB8G,EAAE4B,KAAK1I,IAGlByW,cAAe3G,KAAKC,UAEpB2G,eAAgB,SAAC5P,EAAEC,GAAH,OAAS+I,KAAKC,UAAU7H,EAAIpB,EAAGC,KAE/C4P,WAAY,SAAA7P,GAAC,OAAI9E,KAAK4T,KAAKzK,EAAoByL,QAAQ9P,KAEvD+P,YAAa,SAAA/P,GAAC,OAAI9E,KAAK4T,KAAKzK,EAAoB2L,SAAShQ,KAEzD8P,QAAS,SAAA9P,GAAC,OAAIiQ,EAAQjQ,GAAKA,EAAEvE,QAE7BuU,SAAU,SAAAhQ,GAAC,OAAkB,IAAbA,EAAEvE,OAAgB,EAAIwU,EAAQjQ,IAAMA,EAAEvE,OAAS,IAE/DyU,UA7BwB,SA6BblQ,EAAGC,GACV,IAAMkQ,EAAQ9L,EAAoBkL,IAAIvP,GAChCoQ,EAAQ/L,EAAoBkL,IAAItP,GAEtC,OADsBoE,EAAoBkL,IAAIvP,EAAEyB,KAAI,SAAC4O,EAAGlZ,GAAJ,OAAU6I,EAAE7I,GAAK8I,EAAE9I,OAChDgZ,EAAQC,GAGnCE,WApCwB,SAoCZtQ,EAAGC,GACX,GAAiB,IAAbD,EAAEvE,OAAc,OAAO,EAC3B,IAAM0U,EAAQ9L,EAAoBkL,IAAIvP,GAChCoQ,EAAQ/L,EAAoBkL,IAAItP,GAEtC,OADsBoE,EAAoBgL,IAAIrP,EAAEyB,KAAI,SAAC4O,EAAGlZ,GAAJ,OAAU6I,EAAE7I,GAAK8I,EAAE9I,QAC9C6I,EAAEvE,OAAS,GAAM0U,EAAQC,IAW1D,SAASH,EAASjQ,GACd,IAAMuQ,EAAOlM,EAAoBkL,IAAIvP,GACrC,OAAOqE,EAAoBgL,IAAIrP,EAAEyB,KAAI,SAAAwD,GAAC,OAAI/J,KAAKsV,IAAIvL,EAAIsL,EAAM,OARjElM,EAAoBoM,OAASpM,EAAoB0L,YAWjD,IA0C+B,IA1CzBxL,EAAe,SAAAvE,GAAC,OAAI,MAAOA,GAAmCN,OAAOqC,MAAM/B,IAAM6B,EAAW7B,IAC5F0Q,EAAS,SAAA1Q,GAAC,MAAU,KAANA,GAAYuE,EAAavE,IAEvCkE,EAAY,CACd,IAAK,SAAClE,EAAEC,GAAH,OAAUD,IAAKC,GACpB,IAAK,SAACD,EAAEC,GAAH,OAAUD,GAAKC,GACpB,IAAK,SAACD,EAAEC,GAAH,OAAUD,GAAKC,GACpB,IAAK,SAACD,EAAEC,GAAH,OAAUD,GAAKC,GAEpB,KAAM,SAACD,EAAEC,GAAH,OAASsE,EAAavE,IAAMuE,EAAatE,GAAK,KAArC,UAA+CD,GAA/C,OAAmDC,IAElE,IARc,SAQTD,EAAEC,GACH,OAAI,EAAOD,KAAP,EAAoBC,KAEP,WAAb,EAAOD,IAECA,IAAOC,EAGZD,IAAMC,IAEjB,KAAM,SAACD,EAAEC,GAAH,OAAUiE,EAAU,KAAKlE,EAAGC,IAClC,IAAK,SAACD,EAAEC,GAAH,OAASD,EAAIC,GAClB,IAAK,SAACD,EAAEC,GAAH,OAASD,EAAIC,GAClB,KAAM,SAACD,EAAEC,GAAH,OAASD,GAAKC,GACpB,KAAM,SAACD,EAAEC,GAAH,OAASD,GAAKC,GACpB,IAAK,SAACD,EAAEC,GAAH,OAASD,EAAIC,GAClB,KAAMkE,EAAe,SACrB,IAAO,SAAAnE,GAAC,OAAKA,GACb,UAAW0Q,EACX,cAAe,SAAA1Q,GAAC,OAAK0Q,EAAO1Q,IAC5B,KAAQ,SAACA,EAAEC,GAAH,OAAS,IAAI8L,OAAO,IAAM9L,EAAE8I,QAAQ,MAAO,KAAKA,QAAQ,KAAM,MAAQ,KAAK1I,KAAKL,IACxF,WAAY,SAACA,EAAEC,GAAH,OAAUiE,EAAS,KAASlE,EAAGC,IAC3C,OAAU,SAACD,EAAEC,GAAH,OAAS,IAAI8L,OAAO9L,EAAG,KAAKI,KAAKL,IAC3C,aAAc,SAACA,EAAEC,GAAH,OAAUiE,EAAS,OAAWlE,EAAGC,IAC/C,IAAO,SAACD,EAAEC,GAAH,OAAS0F,QAAQ3F,GAAKC,IAC7B,GAAM,SAACD,EAAEC,GAAH,OAAS0F,QAAQ3F,GAAKC,IAC5B,GAAM,SAACgF,EAAGjF,GAAJ,OAAUA,EAAE2Q,SAAS1L,IAC3B,SAAU,SAACA,EAAGjF,GAAJ,OAAWkE,EAAS,GAAOe,EAAGjF,IACxC,QAAW,SAACoP,EAAGpP,EAAGC,GAAP,OAAaD,GAAKoP,GAAKA,EAAInP,IAGpCqE,EAAyB,CAE3BsM,MAF2B,SAEpB7V,GAA8B,IAAvBmB,EAAuB,4DAAnBvB,EAAWkW,EAAQ,uDAAH,OACX,IAAR3U,IACPA,EAAMnB,EACNA,EAAQ,GAGZ,IAAM+R,EAAO5R,KAAK4V,IAAI5U,EAAMnB,GAC5B8V,EAAO3V,KAAK4V,IAAID,GAChB,IAAME,EAAQ7V,KAAK+R,KAAKH,EAAO+D,GAE/B,OAAO9V,EAAQmB,EACX0E,MAAMmQ,GAAOC,KAAK,GAAGvP,KAAI,SAAC7I,EAAEzB,GAAH,MAAU,CAAEiB,MAAO2C,EAAQ5D,EAAI0Z,MACxDjQ,MAAMmQ,GAAOC,KAAK,GAAGvP,KAAI,SAAC7I,EAAEzB,GAAH,MAAU,CAAEiB,MAAO2C,EAAQ5D,EAAI0Z,OAO1DI,MArBqB,wCAqBfC,GArBe,sGAsBPC,MAAMD,GAtBC,cAsBjBjZ,EAtBiB,yBAuBhBA,EAAEmZ,GAAKnZ,EAAEoZ,QAAUC,QAAQC,MAAR,UAAiBtZ,EAAEuZ,WAAnB,aAAkCN,IAAQ,OAvB7C,wFA8BrBO,MA9BqB,wCA8BfP,GA9Be,4GA+BPC,MAAMD,GA/BC,cA+BjBjZ,EA/BiB,YAgCX,IAAIyZ,UAhCO,SAgC2BzZ,EAAE0Z,OAhC7B,sBAgCjBC,EAhCiB,KAgCKC,gBAhCL,eAgCqC,aACtDC,EAAW,IAAIC,IAAIb,GAAKc,KAAKjJ,QAAQ,IAAK,KAAO,KAEjD7B,IAYMtO,EAZYkZ,IAYMlZ,EAZMgZ,EAAIK,qBAAqB,UAAUH,EAAS,GAAKF,EAAIM,eAAeJ,cAEjFK,iBArCA,uBAsCb7W,MAAM,wBAAD,OAAyBwW,EAAzB,eAAwCZ,IAtChC,iCAyChBxO,EAAyB9B,MAAMsF,KAAKgB,EAAM+K,qBAAqB,OAAOxQ,KAAI,SAAA2Q,GAAE,OAC/ExR,MAAMsF,KAAKkM,EAAGC,iBAAiB,UAAU5Q,KAAI,SAAA6Q,GAAE,OAAIA,EAAGC,oBA1CnC,kCA+C/B,IAAoB3Z,IA/CW,qDAwD/B,IAAMwL,EAAmB,CACrBoO,WADqB,SACTxT,GACR,OAAOA,EAAQ,GAGnByT,KALqB,SAKfzT,EAAOqC,GAET,IADA,IAAIqR,EAAUrR,EAAOrC,GACdkF,EAAU,KAAK7C,IAASrC,GAAQ0T,KACvC,OAAO1T,EAAQ,GAGnB2T,WAXqB,SAWT3T,EAAOqC,GAGf,IAFA,IAAIuR,EAAO,EACPF,EAAUrR,EAAOrC,KACZA,GAAS,GACVkF,EAAU,MAAM7C,EAAOrC,GAAQ0T,IAAUE,IAC7CF,EAAUrR,EAAOrC,GAErB,OAAO4T,EAAO,GAGlBC,aArBqB,SAqBP7T,EAAOqC,GACjB,OAAsB,IAAlBA,EAAO5F,OAAqB,GACxB2I,EAAiBqO,KAAKzT,EAAOqC,GAAU,IAAMA,EAAO5F,OAAS,IAGzEqX,UA1BqB,SA0BV9T,EAAOqC,GACd,IAAMzI,EAAIyI,EAAOrC,GAEjB,OADYqC,EAAOjD,QAAO,SAAA6G,GAAC,OAAIA,GAAKrM,KAAG6C,OAC1B4F,EAAO5F,QAGxBsX,MAhCqB,SAgCd/T,EAAOqC,EAAQmD,EAAMqB,EAAWmN,GACnC,IAAMpa,EAAIiN,EAAUrB,EAAKxF,GAAQgU,GAC3BC,EAAa5R,EAAO5F,OAAS7C,EACnC,OAAOsC,KAAKiS,MAAMnO,EAAQiU,GAAc,GAG5CC,IAtCqB,SAsChBlU,EAAOqC,EAAQmD,EAAMqB,EAAWhC,GAAsB,IAAhBsP,EAAgB,uDAAH,EAC9ClY,EAAgC,iBAAfkY,EAA2BA,EAAazT,OAAOmG,EAAUrB,EAAKxF,GAAQmU,IAC7F,OAAOC,EAASpU,EAAQ/D,EAAQuJ,EAAMqB,EAAWhC,IAGrDwP,KA3CqB,SA2CfrU,EAAOqC,EAAQmD,EAAMqB,EAAWhC,GAAsB,IAAhBsP,EAAgB,uDAAH,EAC/ClY,EAAgC,iBAAfkY,EAA2BA,EAAazT,OAAOmG,EAAUrB,EAAKxF,GAAQmU,IAC7F,OAAOC,EAASpU,EAAQ/D,EAAQuJ,EAAMqB,EAAWhC,IAGrDyP,YAhDqB,SAgDRtU,EAAOqC,EAAQmD,EAAMqB,EAAWhC,GACzC,OAAOgC,EAAUrB,EAAK,GAAIX,IAG9B0P,WApDqB,SAoDTvU,EAAOqC,EAAQmD,EAAMqB,EAAWhC,GACxC,OAAOgC,EAAUrB,EAAKA,EAAK/I,OAAS,GAAIoI,IAG5C2P,UAxDqB,SAwDVxU,EAAOqC,EAAQmD,EAAMqB,EAAWhC,EAAMmP,GAE7C,OAAOI,GADqB,iBAAVJ,EAAsBA,EAAQtT,OAAOmG,EAAUrB,EAAKxF,GAAQgU,KAC1D,EAA0BxO,EAAMqB,EAAWhC,IAGnE4P,SA7DqB,SA6DXzU,EAAOqC,GACb,IAAMzI,EAAIyI,EAAOrC,GACjB,OAAOqF,EAAoBgL,IAAIhO,EAAOjD,QAAO,SAAA6G,GAAC,OAAIA,GAAKrM,OAG3D8a,UAlEqB,SAkEV1U,EAAOqC,GAEd,OADY+C,EAAiBqP,SAASzU,EAAOqC,GAChCgD,EAAoBgL,IAAIhO,IAGzCsS,gBAvEqB,SAuEJ3U,EAAOqC,EAAQmD,EAAMqB,EAAWmN,GAC7C,IAAMpa,EAAsB,iBAAVoa,EAAsBA,EAAQtT,OAAOmG,EAAUrB,EAAKxF,GAAQgU,IACxE7b,EAAIkK,EAAOuS,WAAU,SAAC3O,EAAE9N,GAAH,OAASiN,EAAiB0O,UAAU3b,EAAGkK,GAAUzI,KAC5E,OAAOyI,EAAOlK,IAGlB0c,gBA7EqB,SA6EJ7U,EAAOqC,EAAQmD,EAAMqB,EAAWmN,GAC7C,IAAMpa,EAAsB,iBAAVoa,EAAsBA,EAAQtT,OAAOmG,EAAUrB,EAAKxF,GAAQgU,IACxE7b,EAAIkK,EAAOuS,WAAU,SAAC3O,EAAE9N,GAAH,OAASiN,EAAiB0O,UAAU3b,EAAGkK,GAAUzI,KACtEkb,EAAOzS,EAAOlK,EAAI,GAClB4c,EAAQ3P,EAAiB0O,UAAU3b,EAAI,EAAGkK,GAC1C2S,EAAO3S,EAAOlK,GACd8c,EAAQ7P,EAAiB0O,UAAU3b,EAAGkK,GAE5C,OAAOyS,GADG,GAAKG,EAAQrb,IAAMqb,EAAQF,KAClBC,EAAOF,IAG9BI,KAxFqB,SAwFflV,EAAOqC,GACT,IAAMzI,EAAIyI,EAAOrC,GACjB,OAAOqC,EAAOjD,QAAO,SAAA6G,GAAC,OAAIA,IAAMrM,KAAG6C,OAAS4F,EAAO5F,QAGvD0Y,IA7FqB,SA6FhBnV,EAAOqC,EAAQmD,EAAMqB,EAAWhC,GACjC,OAAOW,EAAK/C,KAAI,SAAAxJ,GAAC,OAAI4N,EAAU5N,EAAG4L,QAW1C,SAASuP,EAAUpU,EAAOwF,EAAMqB,EAAWhC,GACvC,OAAI7E,EAAQ,GAAKA,GAASwF,EAAK/I,OAAe,KACvCoK,EAAUrB,EAAKxF,GAAQ6E,GAGlC3M,EAAOD,QAAU,CACbkN,kBACAE,sBACAH,YACAI,yBACAF,mBACAG,iB,oBCtaI/K,EAAeL,EAAQ,GAAvBK,W,EAC4CL,EAAQ,GAApDmK,E,EAAAA,YAAaG,E,EAAAA,2BA8BrB,SAAS2Q,EAAUxO,EAASrE,EAAK8S,EAAW7P,EAAM8P,GAK9C,IAAKA,GAAUD,EAAUvZ,OAAStB,EAAW0E,UAA6B,QAAjBmW,EAAU1X,GAC/D,OAAOyX,EAAUxO,EAASrE,EAAK8S,EAAUzX,SAAS,GAAI4H,GAAM,IAAU4P,EAAUxO,EAASrE,EAAK8S,EAAUzX,SAAS,GAAI4H,GAAM,GAG/H,IACI,OAAOoB,EAAQrC,SAAShC,EAAK8S,EAAW7P,GAE5C,MAAO5F,GACH,GAAIA,aAAa0E,EAIb,OAAQgR,EAGR,MAAM1V,GAhDlB1H,EAAOD,QAAU,CACfmd,YACA1M,WAmBF,SAAqB9B,EAASpB,EAAM6P,GAA0B,IAAfC,IAAe,yDAC1D,GAAID,EACA,OAAO7P,EAAKpG,QAAO,SAAAnG,GAAC,OAAImc,EAAUxO,EAAS3N,EAAGoc,EAAW7P,EAAM8P,MAEnE,OAAO9P,GAtBT+P,kBAyDF,SAASA,EAAmBpU,EAAMqU,GAAmC,IAA3BC,EAA2B,uDAAlB,IAAK/Q,EAAa,uDAAN,KAC7D,GAAIvD,EAAKrF,OAAStB,EAAW0E,SACzB,OAGJ,KAAiB,OAAbuW,GAAqBtU,EAAKxD,KAAO8X,GAChC7T,MAAMC,QAAQ4T,IAAaA,EAAS9D,SAASrL,OAAOnF,EAAKxD,MAqBzD,IAAgB,QAAZwD,EAAKxD,GAAc,CACxB,IAAM+X,EAASH,EAAkBpU,EAAKvD,SAAS,GAAI4X,EAAQC,EAAU/Q,GACrE,QAAsB,IAAXgR,EACP,OAAOA,EAGX,IAAMC,EAASJ,EAAkBpU,EAAKvD,SAAS,GAAI4X,EAAQC,EAAU/Q,GACrE,OAAOiR,EAEP,OA5BA,IAAIC,EAAWzU,EAAKvD,SAAS,GACzBiY,EAAW1U,EAAKvD,SAAS,GAE7B,GAAIiY,EAAS/Z,OAAStB,EAAWsE,OAAQ,OACZ,CAAE+W,EAAUD,GAAnCA,EADmC,KACzBC,EADyB,KAIzC,GAAID,EAAS9Z,OAAStB,EAAWsE,QAC7B8W,EAASjY,KAAO6X,EAGhB,IAEI,OAAO/Q,EAA2BoR,GACpC,MAAOjW,GACL,W,y2BCtFd,IAAMkW,EAAS3b,EAAQ,GACjB4b,EAAU5b,EAAQ,IAClB6b,EAAgB7b,EAAQ,GACxB8b,EAAwB9b,EAAQ,I,EACGA,EAAQ,GAAzCK,E,EAAAA,WAAYC,E,EAAAA,iB,EACaN,EAAQ,IAAjC+b,E,EAAAA,WAAYC,E,EAAAA,SAOdC,E,WACF,c,4FAAe,SAEXzQ,KAAK8D,UAAY,GAGjB9D,KAAKgE,OAAS,KAGdhE,KAAK+D,MAAQqM,EAAQM,QAAQF,IAAa,G,+DAOjCxM,GAAwB,IAAhBjR,EAAgB,4DAAXiD,EAChB2a,EAAgBzd,OAAO6B,KAAKiL,KAAK8D,WAAWhN,OAClD/D,EAAOA,GAAQiR,EAAOjR,MAAf,iBAAiC4d,EAAgB,GAExD3Q,KAAK8D,UAAU/Q,GAAQiR,EACvBA,EAAOjR,KAAOA,EAETiN,KAAKgE,SACNhE,KAAKgE,OAASA,K,wDAQXJ,G,+GACG2M,EAAW5d,KAAKqN,KAAM4D,G,yCAGtBgN,EAAe,G,kBACdA,G,WAOP,aAAalV,KAAKkI,G,8LACK,EAAKiN,IAAIjN,EAAMQ,QAAQ,eAAgB,K,OAI9D,GAJM0M,E,OAEA1Y,EAAM,GAER0Y,EAASha,OAAS,EAIlB,IAHM8B,EAAUkY,EAAS,GACnBC,EAAa9U,MAAM6U,EAASha,OAAS,GAAGuV,KAAK,IAF9B,WAIZ7Z,GACL4F,EAAIE,KAAJ,CAAUM,EAAQpG,IAAlB,SAAyBue,EAAWjU,KAAI,SAAC2N,EAAGrP,GAAJ,OAAU0V,EAAS1V,EAAE,GAAG5I,UAD3DA,EAAI,EAAGA,EAAIoG,EAAQ9B,OAAQtE,IAAK,EAAhCA,G,4BAKN4F,I,mKAIJ4H,KAAKgR,UAAUpN,I,8SAQfA,EAAO7E,GACd,IAAMkS,EAA+B,iBAAVrN,EAAqBuM,EAAOhb,MAAMyO,GAASA,EAEtE,GAAIqN,EAAY9a,OAAStB,EAAWkD,eAChC,OAAOuY,EAAsBtQ,KAAMiR,EAAalS,GAGpD,GAAIkS,EAAY9a,OAAStB,EAAWwD,UAChC,OAAOgY,EAAcrQ,KAAMiR,EAAa,KAAMlS,GAGlD,MAAM,IAAIpI,MAAJ,oCAAuC7B,EAAiBmc,EAAY9a,MAApE,gB,iCAQE+a,GAAS,WACjB,OAAOC,QAAQC,IAAIF,EAAQpU,KAAI,SAAAuU,GAAC,OAAI,EAAKR,IAAIQ,Y,gCAIrD9e,EAAOD,QAAUme,G,2rBC1GjBle,EAAOD,QAAU,CACbgf,SAmCJ,SAAmB1P,EAAQW,EAAO1C,GAC9B,GAAI5D,MAAMC,QAAQqG,EAAMtF,MAAO,4BAK3B,YAAkB4C,EAAlB,+CAAwB,KACd9D,EAAOqG,EADO,QACSG,GAE7B,GAAI,MAAOxG,EACP,OAAO,GATY,kFAkB3B,GAAIwG,EAAM1J,UACN,OAAO,OAER,GAAI0J,EAAMtF,KAAM,CACnB,IAAMvJ,EAAI6O,EAAMtF,KADG,uBAGnB,YAAgB4C,EAAhB,+CAAsB,KAAXvM,EAAW,QACZkK,EAAO+T,EAAS3P,EAAQtO,EAAGI,GAEjC,QAAoB,IAAT8J,EAEP,OADA+E,EAAMtF,KAAOO,GACN,GARI,mFAevB,IAAM9J,EAAI6O,EAAMxP,KACVye,EAAUjP,EAAMxP,KAAK8H,cAtCS,uBAwCpC,YAAgBgF,EAAhB,+CAAsB,KAAXvM,EAAW,QACZkK,EAAO+T,EAAS3P,EAAQtO,EAAGI,GAEjC,QAAoB,IAAT8J,EAEP,OADA+E,EAAMtF,KAAOO,GACN,EAGX,IAAMiU,EAAaF,EAAS3P,EAAQtO,EAAGke,GAEvC,QAA0B,IAAfC,EAEP,OADAlP,EAAMtF,KAAOwU,GACN,GApDqB,kFA4DpC,IAAMC,EAAK,GAAH,OAAMhe,EAAN,KA5D4B,uBA8DpC,YAAgBmM,EAAhB,+CAAsB,KAAXvM,EAAW,QACZ2J,EAAOsU,EAAS3P,EAAQtO,EAAGoe,GAEjC,QAAoB,IAATzU,EAAsB,CAC7B,IAAMlB,EAAOqG,EAAW9O,EAAG2J,EAAK,IAE1B0U,EAAQjQ,EAAY3F,EAAM2V,GAEhC,GAAIzV,MAAMC,QAAQyV,GAEd,OADApP,EAAMtF,KAAOA,GACN,EAGX,MAAM,IAAItG,MAAM,oDAAsD+a,KA3E1C,kFA+EpC,OAAO,GAjHPE,UAiIJ,SAAoB3Q,EAASsB,EAAO1C,GAChC,IAAMgS,EAAU,GACZC,GAAW,EAFuB,uBAItC,IAJsC,IAItC,EAJsC,iBAI7BlV,EAJ6B,QAOlC,QAAsC,IAA3BwF,EAAWxF,EAAK2F,GAAwB,CAC/C,IAAItG,MAAMC,QAAQqG,EAAMtF,MAKpB,MAAMtG,MAAM,8BAJZ,IAAMob,EAAW3P,EAAWxF,EAAK2F,EAAMtF,KAAK,IACtClB,EAAO2F,EAAYqQ,EAAUxP,EAAMtF,KAAK,IAC9C+U,EAAWpV,EAAK2F,EAAOxG,GAM/B,IAAMA,EAAOqG,EAAWxF,EAAK2F,GAE7B,GAAItG,MAAMC,QAAQH,GAAO,CAOrB,GAFA+V,GAAW,GAEN/V,GAAwB,IAAhBA,EAAKjF,OAed,OARKyL,EAAMvJ,QAEP4D,EAAG,OAAa,MAChBoV,EAAWpV,EAAK2F,EAAO,MAEvBsP,EAAQvZ,KAAKsE,IAGjB,WAGJ,IAAIqV,EAAQ,EACZlW,EAAKgJ,SAAQ,SAACmN,EAAIC,GAEd,IAAMC,EA2EtB,SAAkBxV,GACd,IAAMwV,EAAS,EAAIxV,GAEnB,OADAwV,EAAM,K,+VAAN,IAAsBxV,EAAG,MAClBwV,EA9EoBC,CAASzV,GACxBoV,EAAWI,EAAQ7P,EAAO2P,GAG1Bhf,OAAOC,eAAeif,EAAQ,QAAS,CAAE3e,MAAO,GAAF,OAAKmJ,EAAG,MAAR,YAAqBuV,GAAMG,UAAU,IAG9E/P,EAAM1J,YAAa4W,EAAUxO,EAASmR,EAAQ7P,EAAM1J,UAAWgZ,GAAS,KACzEA,EAAQvZ,KAAK8Z,GACbH,QAUM,IAAVA,GAAgB1P,EAAMvJ,QAEtB4D,EAAG,OAAa,MAChBoV,EAAWpV,EAAK2F,EAAO,MAEvBsP,EAAQvZ,KAAKsE,SAKjBA,EAAG,OAAa,KAEhBiV,EAAQvZ,KAAKsE,IA1ErB,EAAgBiD,EAAhB,+CAAsB,IAJgB,kFAkFlCiS,IACAvP,EAAMY,SAAN,gBAGJ,OAAO0O,GAtNPU,QAyNJ,SAAkBhQ,EAAOiQ,GACrBjQ,EAAMtF,KAAO,CAACuV,EAAajQ,EAAMxP,OAzNjC0f,iBAgOJ,SAA2BlQ,EAAO1J,GAC9B0J,EAAM1J,UAAY6Z,EAAgB7Z,IAhOlCuJ,aACA4P,c,IAGIU,EAAoBle,EAAQ,GAA5Bke,gBAEAjD,EAAcjb,EAAQ,GAAtBib,UAEA/N,EAAgBlN,EAAQ,GAAxBkN,YAgOR,SAASU,EAAYxF,EAAK2F,GAExB,OAAO3F,EAAG,KAAS2F,EAAMsN,QAS3B,SAASmC,EAAYpV,EAAK2F,EAAOxG,GAE/Ba,EAAG,KAAS2F,EAAMsN,QAAU9T,EAkB9B,SAASwV,EAAU3P,EAAQhF,EAAK7J,GAAM,2BAClC,YAAoB6O,EAApB,+CAA4B,KAAjBW,EAAiB,QAElBxG,EAAOqG,EAAWxF,EAAK2F,GAE7B,GAAI,MAAOxG,EAAX,CAOA,QAAuC,IAA5B2F,EAAY3F,EAAMhJ,GACzB,MAAO,CAACwP,EAAMxP,GAGlB,GAAIA,EAAKiZ,SAAS,KAAM,CACpB,IAAM7J,EAAOpP,EAAK0D,OAAO,EAAG1D,EAAK2L,QAAQ,MACnCsD,EAAOjP,EAAK0D,OAAO1D,EAAK2L,QAAQ,KAAO,GAE7C,GAAIyD,IAASI,EAAM5J,MAAO,CACtB,QAAuC,IAA5B+I,EAAY3F,EAAMiG,GACzB,MAAO,CAACO,EAAMP,GAEd,MAAMrL,MAAM,sFAxBM,qF,k0BC5QtCpE,EAAOD,QAAUqgB,EAEjB,IAAMtC,EAAgB7b,EAAQ,G,EACWA,EAAQ,GAAzCK,E,EAAAA,WAAYC,E,EAAAA,iBACZ8d,EAAuBpe,EAAQ,IAA/Boe,mB,SAgBOD,E,qFAAf,WAAiC/O,EAAOpI,GAAxC,6GAA8CuD,EAA9C,+BAAqD,KAC/CvD,EAAKrF,OAAStB,EAAWwD,UAD/B,yCAEWgY,EAAczM,EAAOpI,EAAM,KAAMuD,IAF5C,UAKMvD,EAAKrF,OAAStB,EAAWkD,eAL/B,sBAMU,IAAIpB,MAAJ,oCAAuC7B,EAAiB0G,EAAKrF,MAA7D,uBANV,uBASuCgb,QAAQC,IAAI5V,EAAKvD,SAAS6E,KAAI,SAAAjK,GAAC,OAAI8f,EAAiB/O,EAAO/Q,EAAGkM,OATrG,gCASU8T,EATV,KASoBC,EATpB,uBAWSF,EAAmBpX,EAAKxD,IAAI6a,EAAUC,IAX/C,6C,wCCnBEvgB,EAAOD,QAAU,CAIfoe,QAJe,SAIN3c,GACP,OAAOsQ,KAAKlP,MAAM4d,aAAarC,QAAQ3c,KAOzCif,QAZe,SAYNjf,EAAKN,GACZ,OAAOsf,aAAaC,QAAQjf,EAAKsQ,KAAKC,UAAU7Q,O,upCCdtDlB,EAAOD,QAAU,CACfsQ,Q,4CACAqQ,oBACApQ,eA4IF,SAAyB5B,EAASuD,EAAS3E,GAAM,IACrC+B,EAAuCX,EAAvCW,OAAQE,EAA+Bb,EAA/Ba,KAAMgD,EAAyB7D,EAAzB6D,WAAYjD,EAAaZ,EAAbY,SAE5BI,EAAaC,EAAiBN,GAHS,uBAK7C,YAAmB4C,EAAnB,+CAA4B,KAAjBhJ,EAAiB,QAElB0X,EAASvS,OAAOnF,EAAKxD,IAG3B,GAAIwD,EAAKrF,OAAStB,EAAWsE,QAAU+Z,EAAOC,SAAS,KAAM,CACzD,GAAoB,IAAhBtT,EAAK/I,OAAc,CAEnBgL,EAAKxJ,KAAKkD,GACVsJ,EAAWxM,KAAKkD,EAAKxD,IACrB,SAGJ,IAAMob,EAAQF,EAAOhb,UAAU,EAAGgb,EAAOxU,QAAQ,MARQ,uBAWzD,IAXyD,IAWzD,EAXyD,iBAW9C6D,EAX8C,QAYrD,QAAqB,IAAVA,EACP,iBAGJ,IAAI8Q,OAAQ,EAhByC,uBAmBrD,YAAmBxT,EAAnB,+CAAyB,KAAdyT,EAAc,QAErB,GADAD,EAAWjR,EAAWkR,EAAM/Q,GACd,OArBmC,kFAwBrD,IAAK8Q,EASD,MALkB,IAAd9Q,EAAMtF,OACN6E,EAAKxJ,KAAK,MACVwM,EAAWxM,KAAX,UAAmBiK,EAAM5J,OAAS4J,EAAMxP,KAAxC,QAGJ,WAIJ,IAAIwgB,EAAUrgB,OAAO6B,KAAKse,GAAU5Z,QAAO,SAAA+Z,GAAC,YAAmC,IAAxB1X,EAAOuX,EAASG,OAEvE1R,EAAKxJ,KAAL,MAAAwJ,EAAI,EAASyR,EAAQzW,KAAI,SAAAjK,GAAC,MAAK,CAAEsD,KAAMtB,EAAWsE,OAAQnB,GAAI,GAAF,OAAKuK,EAAM5J,MAAX,YAAoB9F,SAE5E+O,EAAO9K,OAAS,IAChByc,EAAUA,EAAQzW,KAAI,SAAAjK,GAAC,gBAAO0P,EAAM5J,OAAS4J,EAAMxP,KAA5B,YAAoCF,OAE/DiS,EAAWxM,KAAX,MAAAwM,EAAU,EAASyO,KAjCvB,GAAiC,MAAZ/X,EAAKxD,GAAa4J,EAAS,CAAEK,EAAWmR,KAA7D,+CAAwE,IAXf,wFAkDzD,GAHAtR,EAAKxJ,KAAKkD,GACVsJ,EAAWxM,KAAKkD,EAAK7C,OAAS6C,EAAK1F,QAAnB,cAAoCgM,EAAKhL,SAErD0E,EAAK7C,YAAyC,IAAzBkJ,EAASrG,EAAK7C,OACnC,MAAM,IAAIhC,MAAM,yBAA2B6E,EAAK7C,OAIxDmM,EAAWC,SAAQ,SAACpD,EAAKnP,QACQ,IAAlBqP,EAASF,KAChBE,EAASF,GAAOnP,OAnEiB,oFA3I/CsQ,e,gDACAf,iBAWYvN,EAAQ,GAAtB,IACQK,EAAeL,EAAQ,GAAvBK,WACA4e,EAAsBjf,EAAQ,IAA9Bif,kBACA9T,EAA2BnL,EAAQ,GAAnCmL,uB,EACkDnL,EAAQ,GAA1D8c,E,EAAAA,SAAUM,E,EAAAA,UAAWI,E,EAAAA,WAAY5P,E,EAAAA,WACjCW,EAAevO,EAAQ,GAAvBuO,WACA2Q,EAAgBlf,EAAQ,IAAxBkf,Y,EACmClf,EAAQ,GAA3C0N,E,EAAAA,iBAAkBT,E,EAAAA,a,EAC0BjN,EAAQ,GAApDsH,E,EAAAA,OAAQiC,E,EAAAA,yBAA0BL,E,EAAAA,M,EACgClJ,EAAQ,GAA1EsK,E,EAAAA,2BAA4BH,E,EAAAA,YAAaM,E,EAAAA,qBAC3C0U,EAAoBnf,EAAQ,GAC5Bme,EAAmBne,EAAQ,I,iDAKjC,WAAuByM,GAAvB,0GACYW,EAAyBX,EAAzBW,OAAQ+C,EAAiB1D,EAAjB0D,MAAOf,EAAU3C,EAAV2C,MACLgQ,EAAgBhQ,EAA1BI,OAAU4P,UAFtB,yMAKarR,EALb,QAMcnM,EAAQ2G,KAAK8W,MACfC,OAPZ,EASajU,EATb,iCAa4BoT,EAAkBhS,EAASsB,GAbvD,UAaYwR,EAbZ,OAcYD,EAAc/W,KAAK8W,MAAQzd,EAEtB2d,EAhBjB,uBAiBsBpd,MAAM,gCAjB5B,QAoBiBsF,MAAMC,QAAQ6X,KACfA,EAAU,CAAEA,IAMhBlU,EAAOkU,EAAQjX,KAAI,SAACxJ,EAAEd,GAElB,IAAMoK,EAAM,GASZ,OANAA,EAAIb,KAAO,GACXiW,EAAWpV,EAAK2F,EAAOjP,GAGvBJ,OAAOC,eAAeyJ,EAAK,QAAS,CAAEnJ,MAAOkN,OAAOnO,GAAI8f,UAAU,IAE3D1V,KAtCvB,4BA0CgBgX,EAAUI,WA1C1B,kCA2CsBJ,EAAUI,WAAWrhB,KAAKsO,EAASsB,EAAO1C,GA3ChE,WA8CYiU,EAAc/W,KAAK8W,MAAQzd,IAEvBmM,EAAMxP,QAAQ4M,GAhD9B,oBAiDsBY,EAAKZ,EAAuB4C,EAAMxP,MAClCkhB,EAAa1R,EAAMxD,OAAOI,OAAM,SAAA7K,GAAC,OAAI2K,EAAqB3K,MAlDhF,KAqDwC2f,GArDxC,uCAqD4D1T,EAAE,WAAF,IAAMgC,EAAMxD,OAAOjC,KAAI,SAAAxI,GAAC,OAAIwK,EAA2BxK,EAAG2M,EAAQlC,aArD9H,mCAqDsBmV,EArDtB,eAuDsB/C,QAAQC,IAAIvR,EAAK/C,IAAL,4CAAS,WAAMF,GAAN,8FACPsX,EADO,qCACkB3T,EAAE,WAAF,IAAMgC,EAAMxD,OAAOjC,KAAI,SAAAxI,GAAC,OAAI2M,EAAQrC,SAAShC,EAAKtI,EAAGuL,QADvE,0BACjBkU,EADiB,KAGvB/B,EAAWpV,EAAK2F,EAAOwR,GAHA,2CAAT,wDAvDlC,oCA6DqBxR,EAAM4R,SA7D3B,6BA8DgCpW,EA9DhC,UA8D+D4U,EAAiB/O,EAAOrB,EAAM4R,UA9D7F,QAkEgB,IAlEhB,iBA8DwG5R,EAAM4R,SAASvb,QAAjGmb,GA9DtB,mBAgEgBxR,EAAMY,SAAW,cAhEjC,6BAkEgB,EAAkBtD,EAAlB,+CAAWjD,EAAa,QACpBoV,EAAWpV,EAAK2F,EAAOwR,GAnE3C,qQAuEmCzC,EAAS1P,EAAQW,EAAO1C,GAvE3D,kCA4E0CoT,EAAkBhS,EAASsB,GA5ErE,QAgFoB,IAJMwR,EA5E1B,OA8EoBxR,EAAMY,SAAW,cA9ErC,6BAgFoB,EAAkBtD,EAAlB,+CAAWjD,EAAa,QACpBoV,EAAWpV,EAAK2F,EAAOwR,GAjF/C,0OAsFYlU,EAAO+R,EAAU3Q,EAASsB,EAAO1C,GAtF7C,WAyFcuU,EAAevU,EAAK/I,OAG1B+I,EAAOkD,EAAW9B,EAASpB,EAAM8E,GAAO,GAExCpC,EAAM8R,SAAWxU,EAAK/I,QAElB8c,EAAUU,UAhGtB,kCAiGkBV,EAAUU,UAAU3hB,KAAKsO,EAASsB,EAAO1C,GAjG3D,QAoGc0U,EAAYxX,KAAK8W,MAAQzd,EAC/Bsd,EAAYnR,EAAOuR,EAAaS,EAAWH,EAAcvU,EAAK/I,QArGtE,wGAKsB8K,EALtB,4YAwGW/B,GAxGX,6E,+BA6LeoT,E,qFAAf,WAAiChS,EAASsB,GAA1C,2GACYwB,EAA+B9C,EAA/B8C,MAAOU,EAAwBxD,EAAxBwD,KAAMb,EAAkB3C,EAAlB2C,MAAO7E,EAAWkC,EAAXlC,OAGxByV,EAAYjS,EAAMxP,KAElBwP,EAAMxP,KAAKiZ,SAAS,OAAM,EACAtO,EAAM6E,EAAMxP,KAAM,IAAK,GADvB,SACzB0hB,EADyB,KACbD,EADa,OAI1BjS,EAAM4R,SAVd,6BAWepW,EAXf,SAW8C4U,EAAiB/O,EAAOrB,EAAM4R,SAAUpV,GAXtF,+BAW+FwD,EAAM4R,SAASvb,QAX9G,oDAcQ2J,EAAMxP,QAAQ0R,GAdtB,0CAeeA,EAAKlC,EAAMxP,OAf1B,aAkBQwP,EAAMxP,QAAQgR,GAlBtB,6BAmBehG,EAnBf,UAmB8CkD,EAAQ2C,MAAMiN,IAAI9M,EAAMxB,EAAMxP,OAnB5E,gCAmBoFwP,EAAM3J,QAnB1F,kDAsBuB,uBAAf6b,EAtBR,0CAuBehB,EAAkBxS,EAASuT,IAvB1C,aA0BQjS,EAAMxP,QAAQ4M,GA1BtB,0CA2BeA,EAAuB4C,EAAMxP,MAA7B,MAAA4M,EAAsB,EAAgB4C,EAAMxD,OAAOjC,KAAI,SAAAjK,GAAC,OAAIiM,EAA2BjM,EAAGoO,EAAQlC,cA3BjH,aA8B0BkC,EAAQ6C,UAAU2Q,IAAexT,EAAQ+C,YAEzB,KAF9B4P,EA9BZ,EA8BYA,WAEac,aAhCzB,uBAiCc,IAAI/d,MAAM,qCAjCxB,eAqCI4L,EAAMxP,KAAOyhB,EArCjB,kBAuCWZ,EAAUc,aAAa/hB,KAAKsO,EAASsB,IAAU,IAvC1D,6C,uEA+CA,WAA+BtB,EAASa,EAAMjC,GAA9C,8IACqBA,EADrB,kEACcjD,EADd,uCAG+BkF,EAAKjF,UAHpC,yFAGmBrK,EAHnB,KAGsBgJ,EAHtB,eAIkBuG,EAAcd,EAASrE,EAAKpK,EAAGgJ,EAAMqE,GAJvD,mnB,+BAgBekC,E,2FAAf,WAA8Bd,EAASrE,EAAK+X,EAAQnZ,EAAMqE,GAA1D,8FAE+B,IAAhBjD,EAAI+X,IAA2B/X,EAAI+X,KAAYlT,EAF9D,oDAMiB,OAATjG,EANR,uBASQoB,EAAI+X,GAAU,KATtB,6BAaoB,UAAZnZ,EAAKxD,GAbb,uBAcQ4E,EAAI+X,GAAU/X,EAAG,MAdzB,6BAkBQpB,EAAKrF,OAAStB,EAAWwD,UAlBjC,kCAqB8Bsb,EAAkB1S,EAAQ2C,MAAOpI,EAAM,CAAEyF,UAASrE,MAAKiD,SArBrF,eAqBckU,EArBd,SAuBuBA,EAAQjd,QAAU,EAC7B8F,EAAI+X,GAAUZ,EAAQ,GAAG,GAEzBnX,EAAI+X,GAAU,KA1B1B,qCAkCQ/X,EAAI+X,GAAUlT,EACd7E,EAAI+X,GAAU1T,EAAQrC,SAAShC,EAAKpB,EAAMqE,GAnClD,wDAqCY,gBAAalB,GArCzB,iBAsCY/B,EAAI+X,GAAU,KAtC1B,+F,yCC5RA,YAGmEpiB,EAAOD,QAGlE,WAAe,aAEnB,IAAIsiB,EA6GA/P,EA3GJ,SAASgQ,IACL,OAAOD,EAAaE,MAAM,KAAMC,WASpC,SAAS7Y,EAAQ0B,GACb,OAAOA,aAAiB3B,OAAmD,mBAA1C/I,OAAOkB,UAAU4H,SAASrJ,KAAKiL,GAGpE,SAASoX,EAASpX,GAGd,OAAgB,MAATA,GAA2D,oBAA1C1K,OAAOkB,UAAU4H,SAASrJ,KAAKiL,GAiB3D,SAASqX,EAAYrX,GACjB,YAAiB,IAAVA,EAGX,SAASsX,EAAStX,GACd,MAAwB,iBAAVA,GAAgE,oBAA1C1K,OAAOkB,UAAU4H,SAASrJ,KAAKiL,GAGvE,SAASuX,EAAOvX,GACZ,OAAOA,aAAiBb,MAAkD,kBAA1C7J,OAAOkB,UAAU4H,SAASrJ,KAAKiL,GAGnE,SAASd,EAAIsY,EAAK7U,GACd,IAAc/N,EAAV6iB,EAAM,GACV,IAAK7iB,EAAI,EAAGA,EAAI4iB,EAAIte,SAAUtE,EAC1B6iB,EAAI/c,KAAKiI,EAAG6U,EAAI5iB,GAAIA,IAExB,OAAO6iB,EAGX,SAASC,EAAWja,EAAGC,GACnB,OAAOpI,OAAOkB,UAAUC,eAAe1B,KAAK0I,EAAGC,GAGnD,SAASia,EAAOla,EAAGC,GACf,IAAK,IAAI9I,KAAK8I,EACNga,EAAWha,EAAG9I,KACd6I,EAAE7I,GAAK8I,EAAE9I,IAYjB,OARI8iB,EAAWha,EAAG,cACdD,EAAEW,SAAWV,EAAEU,UAGfsZ,EAAWha,EAAG,aACdD,EAAEma,QAAUla,EAAEka,SAGXna,EAGX,SAASoa,EAAW7X,EAAO6H,EAAQiQ,EAAQ/F,GACvC,OAAOgG,GAAiB/X,EAAO6H,EAAQiQ,EAAQ/F,GAAQ,GAAM/J,MAuBjE,SAASgQ,EAAgBhjB,GAIrB,OAHa,MAATA,EAAEijB,MACFjjB,EAAEijB,IApBC,CACHC,OAAkB,EAClBC,aAAkB,GAClBC,YAAkB,GAClBC,UAAmB,EACnBC,cAAkB,EAClBC,WAAkB,EAClBC,aAAkB,KAClBC,eAAkB,EAClBC,iBAAkB,EAClBC,KAAkB,EAClBC,gBAAkB,GAClBC,SAAkB,KAClBC,SAAkB,EAClBC,iBAAkB,IAQf/jB,EAAEijB,IAqBb,SAASe,EAAQhkB,GACb,GAAkB,MAAdA,EAAEikB,SAAkB,CACpB,IAAIC,EAAQlB,EAAgBhjB,GACxBmkB,EAAclS,EAAKlS,KAAKmkB,EAAMN,iBAAiB,SAAUhkB,GACzD,OAAY,MAALA,KAEPwkB,GAAc5Z,MAAMxK,EAAEqkB,GAAGC,YACzBJ,EAAMb,SAAW,IAChBa,EAAMhB,QACNgB,EAAMV,eACNU,EAAMK,iBACNL,EAAMH,kBACNG,EAAMX,YACNW,EAAMT,gBACNS,EAAMR,mBACLQ,EAAML,UAAaK,EAAML,UAAYM,GAS3C,GAPInkB,EAAEwkB,UACFJ,EAAaA,GACe,IAAxBF,EAAMZ,eACwB,IAA9BY,EAAMf,aAAajf,aACDd,IAAlB8gB,EAAMO,SAGS,MAAnBnkB,OAAOokB,UAAqBpkB,OAAOokB,SAAS1kB,GAI5C,OAAOokB,EAHPpkB,EAAEikB,SAAWG,EAMrB,OAAOpkB,EAAEikB,SAGb,SAASU,EAAeT,GACpB,IAAIlkB,EAAI6iB,EAAU+B,KAQlB,OAPa,MAATV,EACAvB,EAAOK,EAAgBhjB,GAAIkkB,GAG3BlB,EAAgBhjB,GAAG0jB,iBAAkB,EAGlC1jB,EA3DPiS,EADA5I,MAAM7H,UAAUyQ,KACT5I,MAAM7H,UAAUyQ,KAEhB,SAAU4S,GAIb,IAHA,IAAI/jB,EAAIR,OAAO8M,MACX0X,EAAMhkB,EAAEoD,SAAW,EAEdtE,EAAI,EAAGA,EAAIklB,EAAKllB,IACrB,GAAIA,KAAKkB,GAAK+jB,EAAI9kB,KAAKqN,KAAMtM,EAAElB,GAAIA,EAAGkB,GAClC,OAAO,EAIf,OAAO,GAoDf,IAAIikB,EAAmB9C,EAAM8C,iBAAmB,GAEhD,SAASC,EAAW3R,EAAI1E,GACpB,IAAI/O,EAAGqlB,EAAMrV,EAiCb,GA/BKyS,EAAY1T,EAAKuW,oBAClB7R,EAAG6R,iBAAmBvW,EAAKuW,kBAE1B7C,EAAY1T,EAAKwW,MAClB9R,EAAG8R,GAAKxW,EAAKwW,IAEZ9C,EAAY1T,EAAKyW,MAClB/R,EAAG+R,GAAKzW,EAAKyW,IAEZ/C,EAAY1T,EAAK0W,MAClBhS,EAAGgS,GAAK1W,EAAK0W,IAEZhD,EAAY1T,EAAK6V,WAClBnR,EAAGmR,QAAU7V,EAAK6V,SAEjBnC,EAAY1T,EAAK2W,QAClBjS,EAAGiS,KAAO3W,EAAK2W,MAEdjD,EAAY1T,EAAK4W,UAClBlS,EAAGkS,OAAS5W,EAAK4W,QAEhBlD,EAAY1T,EAAK6W,WAClBnS,EAAGmS,QAAU7W,EAAK6W,SAEjBnD,EAAY1T,EAAKsU,OAClB5P,EAAG4P,IAAMD,EAAgBrU,IAExB0T,EAAY1T,EAAK8W,WAClBpS,EAAGoS,QAAU9W,EAAK8W,SAGlBV,EAAiB7gB,OAAS,EAC1B,IAAKtE,EAAI,EAAGA,EAAImlB,EAAiB7gB,OAAQtE,IAGhCyiB,EADLzS,EAAMjB,EADNsW,EAAOF,EAAiBnlB,OAGpByT,EAAG4R,GAAQrV,GAKvB,OAAOyD,EAGX,IAAIqS,GAAmB,EAGvB,SAASC,EAAOC,GACZZ,EAAW5X,KAAMwY,GACjBxY,KAAKiX,GAAK,IAAIla,KAAkB,MAAbyb,EAAOvB,GAAauB,EAAOvB,GAAGC,UAAYM,KACxDxX,KAAK4W,YACN5W,KAAKiX,GAAK,IAAIla,KAAKya,OAIE,IAArBc,IACAA,GAAmB,EACnBzD,EAAM4D,aAAazY,MACnBsY,GAAmB,GAI3B,SAASI,EAAUC,GACf,OAAOA,aAAeJ,GAAkB,MAAPI,GAAuC,MAAxBA,EAAIb,iBAGxD,SAASc,EAAUC,GACf,OAAIA,EAAS,EAEFtiB,KAAK+R,KAAKuQ,IAAW,EAErBtiB,KAAKiS,MAAMqQ,GAI1B,SAASC,EAAMC,GACX,IAAIC,GAAiBD,EACjBtlB,EAAQ,EAMZ,OAJsB,IAAlBulB,GAAuB3X,SAAS2X,KAChCvlB,EAAQmlB,EAASI,IAGdvlB,EAIX,SAASwlB,EAAcC,EAAQC,EAAQC,GACnC,IAGI5mB,EAHAklB,EAAMnhB,KAAKG,IAAIwiB,EAAOpiB,OAAQqiB,EAAOriB,QACrCuiB,EAAa9iB,KAAK4V,IAAI+M,EAAOpiB,OAASqiB,EAAOriB,QAC7CwiB,EAAQ,EAEZ,IAAK9mB,EAAI,EAAGA,EAAIklB,EAAKllB,KACZ4mB,GAAeF,EAAO1mB,KAAO2mB,EAAO3mB,KACnC4mB,GAAeN,EAAMI,EAAO1mB,MAAQsmB,EAAMK,EAAO3mB,MACnD8mB,IAGR,OAAOA,EAAQD,EAGnB,SAASE,EAAKC,IACgC,IAAtC3E,EAAM4E,6BACmB,oBAAb9M,SAA6BA,QAAQ4M,MACjD5M,QAAQ4M,KAAK,wBAA0BC,GAI/C,SAASE,EAAUF,EAAKjZ,GACpB,IAAIoZ,GAAY,EAEhB,OAAOpE,GAAO,WAIV,GAHgC,MAA5BV,EAAM+E,oBACN/E,EAAM+E,mBAAmB,KAAMJ,GAE/BG,EAAW,CAGX,IAFA,IACIE,EADAnZ,EAAO,GAEFlO,EAAI,EAAGA,EAAIuiB,UAAUje,OAAQtE,IAAK,CAEvC,GADAqnB,EAAM,GACsB,iBAAjB9E,UAAUviB,GAAiB,CAElC,IAAK,IAAIuB,KADT8lB,GAAO,MAAQrnB,EAAI,KACHuiB,UAAU,GACtB8E,GAAO9lB,EAAM,KAAOghB,UAAU,GAAGhhB,GAAO,KAE5C8lB,EAAMA,EAAIzZ,MAAM,GAAI,QAEpByZ,EAAM9E,UAAUviB,GAEpBkO,EAAKpI,KAAKuhB,GAEdN,EAAKC,EAAM,gBAAkBvd,MAAM7H,UAAUgM,MAAMzN,KAAK+N,GAAMzD,KAAK,IAAM,MAAO,IAAKtG,OAASmjB,OAC9FH,GAAY,EAEhB,OAAOpZ,EAAGuU,MAAM9U,KAAM+U,aACvBxU,GAGP,IAsEIxL,EAtEAglB,EAAe,GAEnB,SAASC,EAAgBjnB,EAAMymB,GACK,MAA5B3E,EAAM+E,oBACN/E,EAAM+E,mBAAmB7mB,EAAMymB,GAE9BO,EAAahnB,KACdwmB,EAAKC,GACLO,EAAahnB,IAAQ,GAO7B,SAASknB,EAAWrc,GAChB,OAAOA,aAAiBiD,UAAsD,sBAA1C3N,OAAOkB,UAAU4H,SAASrJ,KAAKiL,GAsBvE,SAASsc,EAAaC,EAAcC,GAChC,IAAoCvC,EAAhCxC,EAAME,EAAO,GAAI4E,GACrB,IAAKtC,KAAQuC,EACL9E,EAAW8E,EAAavC,KACpB7C,EAASmF,EAAatC,KAAU7C,EAASoF,EAAYvC,KACrDxC,EAAIwC,GAAQ,GACZtC,EAAOF,EAAIwC,GAAOsC,EAAatC,IAC/BtC,EAAOF,EAAIwC,GAAOuC,EAAYvC,KACF,MAArBuC,EAAYvC,GACnBxC,EAAIwC,GAAQuC,EAAYvC,UAEjBxC,EAAIwC,IAIvB,IAAKA,KAAQsC,EACL7E,EAAW6E,EAActC,KACpBvC,EAAW8E,EAAavC,IACzB7C,EAASmF,EAAatC,MAE1BxC,EAAIwC,GAAQtC,EAAO,GAAIF,EAAIwC,KAGnC,OAAOxC,EAGX,SAASgF,EAAO7B,GACE,MAAVA,GACAxY,KAAKsa,IAAI9B,GAtDjB3D,EAAM4E,6BAA8B,EACpC5E,EAAM+E,mBAAqB,KA4DvB7kB,EADA7B,OAAO6B,KACA7B,OAAO6B,KAEP,SAAU4jB,GACb,IAAInmB,EAAG6iB,EAAM,GACb,IAAK7iB,KAAKmmB,EACFrD,EAAWqD,EAAKnmB,IAChB6iB,EAAI/c,KAAK9F,GAGjB,OAAO6iB,GAoFf,IAAIkF,EAAU,GAEd,SAASC,EAAcC,EAAMC,GACzB,IAAIC,EAAYF,EAAK5f,cACrB0f,EAAQI,GAAaJ,EAAQI,EAAY,KAAOJ,EAAQG,GAAaD,EAGzE,SAASG,EAAeC,GACpB,MAAwB,iBAAVA,EAAqBN,EAAQM,IAAUN,EAAQM,EAAMhgB,oBAAiB7E,EAGxF,SAAS8kB,EAAqBC,GAC1B,IACIC,EACAnD,EAFAoD,EAAkB,GAItB,IAAKpD,KAAQkD,EACLzF,EAAWyF,EAAalD,KACxBmD,EAAiBJ,EAAe/C,MAE5BoD,EAAgBD,GAAkBD,EAAYlD,IAK1D,OAAOoD,EAGX,IAAIC,EAAa,GAEjB,SAASC,EAAgBV,EAAMW,GAC3BF,EAAWT,GAAQW,EAcvB,SAASC,EAASxC,EAAQyC,EAAcC,GACpC,IAAIC,EAAY,GAAKjlB,KAAK4V,IAAI0M,GAC1B4C,EAAcH,EAAeE,EAAU1kB,OAE3C,OADW+hB,GAAU,EACL0C,EAAY,IAAM,GAAM,KACpChlB,KAAKsV,IAAI,GAAItV,KAAKC,IAAI,EAAGilB,IAAczf,WAAWvF,OAAO,GAAK+kB,EAGtE,IAAIE,EAAmB,uLAEnBC,EAAwB,6CAExBC,EAAkB,GAElBC,EAAuB,GAM3B,SAASC,EAAgBjmB,EAAOkmB,EAAQC,EAASngB,GAC7C,IAAIogB,EAAOpgB,EACa,iBAAbA,IACPogB,EAAO,WACH,OAAOjc,KAAKnE,OAGhBhG,IACAgmB,EAAqBhmB,GAASomB,GAE9BF,IACAF,EAAqBE,EAAO,IAAM,WAC9B,OAAOV,EAASY,EAAKnH,MAAM9U,KAAM+U,WAAYgH,EAAO,GAAIA,EAAO,MAGnEC,IACAH,EAAqBG,GAAW,WAC5B,OAAOhc,KAAKkc,aAAaF,QAAQC,EAAKnH,MAAM9U,KAAM+U,WAAYlf,KAiC1E,SAASsmB,EAAavpB,EAAG6S,GACrB,OAAK7S,EAAEgkB,WAIPnR,EAAS2W,EAAa3W,EAAQ7S,EAAEspB,cAChCN,EAAgBnW,GAAUmW,EAAgBnW,IA3B9C,SAA4BA,GACxB,IAA4CjT,EAAGsE,EARnB8G,EAQxB+T,EAAQlM,EAAOnJ,MAAMof,GAEzB,IAAKlpB,EAAI,EAAGsE,EAAS6a,EAAM7a,OAAQtE,EAAIsE,EAAQtE,IACvCqpB,EAAqBlK,EAAMnf,IAC3Bmf,EAAMnf,GAAKqpB,EAAqBlK,EAAMnf,IAEtCmf,EAAMnf,IAdcoL,EAcc+T,EAAMnf,IAbtC8J,MAAM,YACLsB,EAAMwG,QAAQ,WAAY,IAE9BxG,EAAMwG,QAAQ,MAAO,IAc5B,OAAO,SAAUiY,GACb,IAAiB7pB,EAAb0R,EAAS,GACb,IAAK1R,EAAI,EAAGA,EAAIsE,EAAQtE,IACpB0R,GAAU+V,EAAWtI,EAAMnf,IAAMmf,EAAMnf,GAAGG,KAAK0pB,EAAK5W,GAAUkM,EAAMnf,GAExE,OAAO0R,GAW0CoY,CAAmB7W,GAEjEmW,EAAgBnW,GAAQ7S,IANpBA,EAAEspB,aAAaK,cAS9B,SAASH,EAAa3W,EAAQiQ,GAC1B,IAAIljB,EAAI,EAER,SAASgqB,EAA4B5e,GACjC,OAAO8X,EAAO+G,eAAe7e,IAAUA,EAI3C,IADA+d,EAAsBe,UAAY,EAC3BlqB,GAAK,GAAKmpB,EAAsBjgB,KAAK+J,IACxCA,EAASA,EAAOrB,QAAQuX,EAAuBa,GAC/Cb,EAAsBe,UAAY,EAClClqB,GAAK,EAGT,OAAOiT,EAGX,IAAIkX,EAAiB,KACjBC,EAAiB,OACjBC,EAAiB,QACjBC,EAAiB,QACjBC,EAAiB,aACjBC,EAAiB,QACjBC,EAAiB,YACjBC,EAAiB,gBACjBC,GAAiB,UACjBC,GAAiB,UACjBC,GAAiB,eAEjBC,GAAiB,MACjBC,GAAiB,WAEjBC,GAAiB,qBACjBC,GAAmB,0BAMnBC,GAAY,wJAEZC,GAAU,GAEd,SAASC,GAAe/nB,EAAOwG,EAAOwhB,GAClCF,GAAQ9nB,GAASokB,EAAW5d,GAASA,EAAQ,SAAUyhB,EAAU5B,GAC7D,OAAQ4B,GAAYD,EAAeA,EAAcxhB,GAIzD,SAAS0hB,GAAuBloB,EAAO2iB,GACnC,OAAKlD,EAAWqI,GAAS9nB,GAIlB8nB,GAAQ9nB,GAAO2iB,EAAOpB,QAASoB,EAAOH,SAHlC,IAAIjR,OAQR4W,GAR8BnoB,EAQhBuO,QAAQ,KAAM,IAAIA,QAAQ,uCAAuC,SAAU6Z,EAASC,EAAIC,EAAIC,EAAIC,GACjH,OAAOH,GAAMC,GAAMC,GAAMC,OAIjC,SAASL,GAAYzpB,GACjB,OAAOA,EAAE6P,QAAQ,yBAA0B,QAG/C,IAAI/O,GAAS,GAEb,SAASipB,GAAezoB,EAAOgG,GAC3B,IAAIrJ,EAAGypB,EAAOpgB,EASd,IARqB,iBAAVhG,IACPA,EAAQ,CAACA,IAETqf,EAASrZ,KACTogB,EAAO,SAAUre,EAAO+T,GACpBA,EAAM9V,GAAYid,EAAMlb,KAG3BpL,EAAI,EAAGA,EAAIqD,EAAMiB,OAAQtE,IAC1B6C,GAAOQ,EAAMrD,IAAMypB,EAI3B,SAASsC,GAAmB1oB,EAAOgG,GAC/ByiB,GAAczoB,GAAO,SAAU+H,EAAO+T,EAAO6G,EAAQ3iB,GACjD2iB,EAAOgG,GAAKhG,EAAOgG,IAAM,GACzB3iB,EAAS+B,EAAO4a,EAAOgG,GAAIhG,EAAQ3iB,MAI3C,SAAS4oB,GAAwB5oB,EAAO+H,EAAO4a,GAC9B,MAAT5a,GAAiB0X,EAAWjgB,GAAQQ,IACpCR,GAAOQ,GAAO+H,EAAO4a,EAAOkG,GAAIlG,EAAQ3iB,GA0DhD,SAAS8oB,GAAWpW,GAChB,OAAOqW,GAAWrW,GAAQ,IAAM,IAGpC,SAASqW,GAAWrW,GAChB,OAAQA,EAAO,GAAM,GAAKA,EAAO,KAAQ,GAAMA,EAAO,KAAQ,EA/ClEuT,EAAe,IAAK,EAAG,GAAG,WACtB,IAAI+C,EAAI7e,KAAKuI,OACb,OAAOsW,GAAK,KAAO,GAAKA,EAAI,IAAMA,KAGtC/C,EAAe,EAAG,CAAC,KAAM,GAAI,GAAG,WAC5B,OAAO9b,KAAKuI,OAAS,OAGzBuT,EAAe,EAAG,CAAC,OAAU,GAAU,EAAG,QAC1CA,EAAe,EAAG,CAAC,QAAU,GAAU,EAAG,QAC1CA,EAAe,EAAG,CAAC,SAAU,GAAG,GAAO,EAAG,QAI1CtB,EAAa,OAAQ,KAIrBW,EAAgB,OAAQ,GAIxByC,GAAc,IAAUL,IACxBK,GAAc,KAAUZ,EAAWJ,GACnCgB,GAAc,OAAUR,GAAWN,GACnCc,GAAc,QAAUP,GAAWN,GACnCa,GAAc,SAAUP,GAAWN,GAEnCuB,GAAc,CAAC,QAAS,UAzCb,GA0CXA,GAAc,QAAQ,SAAU1gB,EAAO+T,GACnCA,EA3CO,GA2CwB,IAAjB/T,EAAM9G,OAAe+d,EAAMiK,kBAAkBlhB,GAASkb,EAAMlb,MAE9E0gB,GAAc,MAAM,SAAU1gB,EAAO+T,GACjCA,EA9CO,GA8COkD,EAAMiK,kBAAkBlhB,MAE1C0gB,GAAc,KAAK,SAAU1gB,EAAO+T,GAChCA,EAjDO,GAiDOjM,SAAS9H,EAAO,OAelCiX,EAAMiK,kBAAoB,SAAUlhB,GAChC,OAAOkb,EAAMlb,IAAUkb,EAAMlb,GAAS,GAAK,KAAO,MAKtD,IAiEIc,GAjEAqgB,GAAaC,GAAW,YAAY,GAMxC,SAASA,GAAYvE,EAAMwE,GACvB,OAAO,SAAUxrB,GACb,OAAa,MAATA,GACAyrB,GAAMlf,KAAMya,EAAMhnB,GAClBohB,EAAM4D,aAAazY,KAAMif,GAClBjf,MAEA3M,GAAI2M,KAAMya,IAK7B,SAASpnB,GAAKgpB,EAAK5B,GACf,OAAO4B,EAAIzF,UACPyF,EAAIpF,GAAG,OAASoF,EAAIlE,OAAS,MAAQ,IAAMsC,KAAUjD,IAG7D,SAAS0H,GAAO7C,EAAK5B,EAAMhnB,GACnB4oB,EAAIzF,YAAcxZ,MAAM3J,KACX,aAATgnB,GAAuBmE,GAAWvC,EAAI9T,SAA2B,IAAhB8T,EAAInT,SAAgC,KAAfmT,EAAIlf,OAC1Ekf,EAAIpF,GAAG,OAASoF,EAAIlE,OAAS,MAAQ,IAAMsC,GAAMhnB,EAAO4oB,EAAInT,QAASiW,GAAY1rB,EAAO4oB,EAAInT,UAG5FmT,EAAIpF,GAAG,OAASoF,EAAIlE,OAAS,MAAQ,IAAMsC,GAAMhnB,IAqD7D,SAAS0rB,GAAY5W,EAAMW,GACvB,GAAI9L,MAAMmL,IAASnL,MAAM8L,GACrB,OAAOsO,IAEX,IAzBY/M,EAyBR2U,GAAelW,GAzBPuB,EAyBc,IAxBRA,GAAKA,EA0BvB,OADAlC,IAASW,EAAQkW,GAAY,GACT,IAAbA,EAAkBR,GAAWrW,GAAQ,GAAK,GAAO,GAAK6W,EAAW,EAAI,EApB5E1gB,GADAzC,MAAM7H,UAAUsK,QACNzC,MAAM7H,UAAUsK,QAEhB,SAAUzL,GAEhB,IAAIT,EACJ,IAAKA,EAAI,EAAGA,EAAIwN,KAAKlJ,SAAUtE,EAC3B,GAAIwN,KAAKxN,KAAOS,EACZ,OAAOT,EAGf,OAAQ,GAehBspB,EAAe,IAAK,CAAC,KAAM,GAAI,MAAM,WACjC,OAAO9b,KAAKkJ,QAAU,KAG1B4S,EAAe,MAAO,EAAG,GAAG,SAAUrW,GAClC,OAAOzF,KAAKkc,aAAamD,YAAYrf,KAAMyF,MAG/CqW,EAAe,OAAQ,EAAG,GAAG,SAAUrW,GACnC,OAAOzF,KAAKkc,aAAaoD,OAAOtf,KAAMyF,MAK1C+U,EAAa,QAAS,KAItBW,EAAgB,QAAS,GAIzByC,GAAc,IAAQZ,GACtBY,GAAc,KAAQZ,EAAWJ,GACjCgB,GAAc,OAAQ,SAAUE,EAAUpI,GACtC,OAAOA,EAAO6J,iBAAiBzB,MAEnCF,GAAc,QAAQ,SAAUE,EAAUpI,GACtC,OAAOA,EAAO8J,YAAY1B,MAG9BQ,GAAc,CAAC,IAAK,OAAO,SAAU1gB,EAAO+T,GACxCA,EAlMQ,GAkMOmH,EAAMlb,GAAS,KAGlC0gB,GAAc,CAAC,MAAO,SAAS,SAAU1gB,EAAO+T,EAAO6G,EAAQ3iB,GAC3D,IAAIqT,EAAQsP,EAAOH,QAAQoH,YAAY7hB,EAAO/H,EAAO2iB,EAAOpB,SAE/C,MAATlO,EACAyI,EAzMI,GAyMWzI,EAEf0M,EAAgB4C,GAAQpC,aAAexY,KAM/C,IAAI8hB,GAAmB,gCACnBC,GAAsB,wFAAwFjiB,MAAM,KAUpHkiB,GAA2B,kDAAkDliB,MAAM,KAUvF,SAASmiB,GAAkBC,EAAWra,EAAQkK,GAC1C,IAAInd,EAAGutB,EAAI1D,EAAK2D,EAAMF,EAAUG,oBAChC,IAAKjgB,KAAKkgB,aAKN,IAHAlgB,KAAKkgB,aAAe,GACpBlgB,KAAKmgB,iBAAmB,GACxBngB,KAAKogB,kBAAoB,GACpB5tB,EAAI,EAAGA,EAAI,KAAMA,EAClB6pB,EAAM5G,EAAU,CAAC,IAAMjjB,IACvBwN,KAAKogB,kBAAkB5tB,GAAKwN,KAAKqf,YAAYhD,EAAK,IAAI4D,oBACtDjgB,KAAKmgB,iBAAiB3tB,GAAKwN,KAAKsf,OAAOjD,EAAK,IAAI4D,oBAIxD,OAAItQ,EACe,QAAXlK,GAEe,KADfsa,EAAKrhB,GAAQ/L,KAAKqN,KAAKogB,kBAAmBJ,IACvBD,EAAK,MAGT,KADfA,EAAKrhB,GAAQ/L,KAAKqN,KAAKmgB,iBAAkBH,IACtBD,EAAK,KAGb,QAAXta,GAEY,KADZsa,EAAKrhB,GAAQ/L,KAAKqN,KAAKogB,kBAAmBJ,IAE/BD,GAGI,KADfA,EAAKrhB,GAAQ/L,KAAKqN,KAAKmgB,iBAAkBH,IACtBD,EAAK,MAGZ,KADZA,EAAKrhB,GAAQ/L,KAAKqN,KAAKmgB,iBAAkBH,IAE9BD,GAGI,KADfA,EAAKrhB,GAAQ/L,KAAKqN,KAAKogB,kBAAmBJ,IACvBD,EAAK,KA6CpC,SAASM,GAAUhE,EAAK5oB,GACpB,IAAI6sB,EAEJ,IAAKjE,EAAIzF,UAEL,OAAOyF,EAGX,GAAqB,iBAAV5oB,EACP,GAAI,QAAQiI,KAAKjI,GACbA,EAAQqlB,EAAMrlB,QAId,IAAKyhB,EAFLzhB,EAAQ4oB,EAAIH,aAAauD,YAAYhsB,IAGjC,OAAO4oB,EAOnB,OAFAiE,EAAa/pB,KAAKG,IAAI2lB,EAAIlf,OAAQgiB,GAAY9C,EAAI9T,OAAQ9U,IAC1D4oB,EAAIpF,GAAG,OAASoF,EAAIlE,OAAS,MAAQ,IAAM,SAAS1kB,EAAO6sB,GACpDjE,EAGX,SAASkE,GAAa9sB,GAClB,OAAa,MAATA,GACA4sB,GAASrgB,KAAMvM,GACfohB,EAAM4D,aAAazY,MAAM,GAClBA,MAEA3M,GAAI2M,KAAM,SAQzB,IAAIwgB,GAA0B9C,GAoB1B+C,GAAqB/C,GAoBzB,SAASgD,KACL,SAASC,EAAUtlB,EAAGC,GAClB,OAAOA,EAAExE,OAASuE,EAAEvE,OAGxB,IACItE,EAAG6pB,EADHuE,EAAc,GAAIC,EAAa,GAAIC,EAAc,GAErD,IAAKtuB,EAAI,EAAGA,EAAI,GAAIA,IAEhB6pB,EAAM5G,EAAU,CAAC,IAAMjjB,IACvBouB,EAAYtoB,KAAK0H,KAAKqf,YAAYhD,EAAK,KACvCwE,EAAWvoB,KAAK0H,KAAKsf,OAAOjD,EAAK,KACjCyE,EAAYxoB,KAAK0H,KAAKsf,OAAOjD,EAAK,KAClCyE,EAAYxoB,KAAK0H,KAAKqf,YAAYhD,EAAK,KAO3C,IAHAuE,EAAYzgB,KAAKwgB,GACjBE,EAAW1gB,KAAKwgB,GAChBG,EAAY3gB,KAAKwgB,GACZnuB,EAAI,EAAGA,EAAI,GAAIA,IAChBouB,EAAYpuB,GAAKwrB,GAAY4C,EAAYpuB,IACzCquB,EAAWruB,GAAKwrB,GAAY6C,EAAWruB,IAE3C,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAChBsuB,EAAYtuB,GAAKwrB,GAAY8C,EAAYtuB,IAG7CwN,KAAK+gB,aAAe,IAAI3Z,OAAO,KAAO0Z,EAAY7jB,KAAK,KAAO,IAAK,KACnE+C,KAAKghB,kBAAoBhhB,KAAK+gB,aAC9B/gB,KAAKihB,mBAAqB,IAAI7Z,OAAO,KAAOyZ,EAAW5jB,KAAK,KAAO,IAAK,KACxE+C,KAAKkhB,wBAA0B,IAAI9Z,OAAO,KAAOwZ,EAAY3jB,KAAK,KAAO,IAAK,KAGlF,SAASkkB,GAAYtC,EAAGjsB,EAAGE,EAAGsuB,EAAGC,EAAG9sB,EAAG+sB,GAGnC,IAAInkB,EAYJ,OAVI0hB,EAAI,KAAOA,GAAK,GAEhB1hB,EAAO,IAAIJ,KAAK8hB,EAAI,IAAKjsB,EAAGE,EAAGsuB,EAAGC,EAAG9sB,EAAG+sB,GACpCjgB,SAASlE,EAAKokB,gBACdpkB,EAAKqkB,YAAY3C,IAGrB1hB,EAAO,IAAIJ,KAAK8hB,EAAGjsB,EAAGE,EAAGsuB,EAAGC,EAAG9sB,EAAG+sB,GAG/BnkB,EAGX,SAASskB,GAAe5C,GACpB,IAAI1hB,EAEJ,GAAI0hB,EAAI,KAAOA,GAAK,EAAG,CACnB,IAAIne,EAAOzE,MAAM7H,UAAUgM,MAAMzN,KAAKoiB,WAEtCrU,EAAK,GAAKme,EAAI,IACd1hB,EAAO,IAAIJ,KAAKA,KAAK2kB,IAAI5M,MAAM,KAAMpU,IACjCW,SAASlE,EAAKwkB,mBACdxkB,EAAKykB,eAAe/C,QAGxB1hB,EAAO,IAAIJ,KAAKA,KAAK2kB,IAAI5M,MAAM,KAAMC,YAGzC,OAAO5X,EAIX,SAAS0kB,GAAgBtZ,EAAMuZ,EAAKC,GAChC,IACIC,EAAM,EAAIF,EAAMC,EAIpB,QAFa,EAAIN,GAAclZ,EAAM,EAAGyZ,GAAKC,YAAcH,GAAO,EAElDE,EAAM,EAI1B,SAASE,GAAmB3Z,EAAM4Z,EAAMC,EAASN,EAAKC,GAClD,IAGIM,EAASC,EADT5Z,EAAY,EAAI,GAAKyZ,EAAO,IAFZ,EAAIC,EAAUN,GAAO,EACxBD,GAAgBtZ,EAAMuZ,EAAKC,GAe5C,OAXIrZ,GAAa,EAEb4Z,EAAe3D,GADf0D,EAAU9Z,EAAO,GACoBG,EAC9BA,EAAYiW,GAAWpW,IAC9B8Z,EAAU9Z,EAAO,EACjB+Z,EAAe5Z,EAAYiW,GAAWpW,KAEtC8Z,EAAU9Z,EACV+Z,EAAe5Z,GAGZ,CACHH,KAAM8Z,EACN3Z,UAAW4Z,GAInB,SAASC,GAAWlG,EAAKyF,EAAKC,GAC1B,IAEIS,EAASH,EAFTI,EAAaZ,GAAgBxF,EAAI9T,OAAQuZ,EAAKC,GAC9CI,EAAO5rB,KAAKiS,OAAO6T,EAAI3T,YAAc+Z,EAAa,GAAK,GAAK,EAchE,OAXIN,EAAO,EAEPK,EAAUL,EAAOO,GADjBL,EAAUhG,EAAI9T,OAAS,EACeuZ,EAAKC,GACpCI,EAAOO,GAAYrG,EAAI9T,OAAQuZ,EAAKC,IAC3CS,EAAUL,EAAOO,GAAYrG,EAAI9T,OAAQuZ,EAAKC,GAC9CM,EAAUhG,EAAI9T,OAAS,IAEvB8Z,EAAUhG,EAAI9T,OACdia,EAAUL,GAGP,CACHA,KAAMK,EACNja,KAAM8Z,GAId,SAASK,GAAYna,EAAMuZ,EAAKC,GAC5B,IAAIU,EAAaZ,GAAgBtZ,EAAMuZ,EAAKC,GACxCY,EAAiBd,GAAgBtZ,EAAO,EAAGuZ,EAAKC,GACpD,OAAQpD,GAAWpW,GAAQka,EAAaE,GAAkB,EAoJ9D,SAASC,GAAeC,EAAI5uB,GACxB,OAAO4uB,EAAGziB,MAAMnM,EAAG,GAAG6uB,OAAOD,EAAGziB,MAAM,EAAGnM,IAhJ7C6nB,EAAe,IAAK,CAAC,KAAM,GAAI,KAAM,QACrCA,EAAe,IAAK,CAAC,KAAM,GAAI,KAAM,WAIrCtB,EAAa,OAAQ,KACrBA,EAAa,UAAW,KAIxBW,EAAgB,OAAQ,GACxBA,EAAgB,UAAW,GAI3ByC,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAC/BgB,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAE/B2B,GAAkB,CAAC,IAAK,KAAM,IAAK,OAAO,SAAU3gB,EAAOukB,EAAM3J,EAAQ3iB,GACrEssB,EAAKtsB,EAAMY,OAAO,EAAG,IAAMqiB,EAAMlb,MAsCrCke,EAAe,IAAK,EAAG,KAAM,OAE7BA,EAAe,KAAM,EAAG,GAAG,SAAUrW,GACjC,OAAOzF,KAAKkc,aAAa6G,YAAY/iB,KAAMyF,MAG/CqW,EAAe,MAAO,EAAG,GAAG,SAAUrW,GAClC,OAAOzF,KAAKkc,aAAa8G,cAAchjB,KAAMyF,MAGjDqW,EAAe,OAAQ,EAAG,GAAG,SAAUrW,GACnC,OAAOzF,KAAKkc,aAAa+G,SAASjjB,KAAMyF,MAG5CqW,EAAe,IAAK,EAAG,EAAG,WAC1BA,EAAe,IAAK,EAAG,EAAG,cAI1BtB,EAAa,MAAO,KACpBA,EAAa,UAAW,KACxBA,EAAa,aAAc,KAG3BW,EAAgB,MAAO,IACvBA,EAAgB,UAAW,IAC3BA,EAAgB,aAAc,IAI9ByC,GAAc,IAAQZ,GACtBY,GAAc,IAAQZ,GACtBY,GAAc,IAAQZ,GACtBY,GAAc,MAAQ,SAAUE,EAAUpI,GACtC,OAAOA,EAAOwN,iBAAiBpF,MAEnCF,GAAc,OAAS,SAAUE,EAAUpI,GACvC,OAAOA,EAAOyN,mBAAmBrF,MAErCF,GAAc,QAAU,SAAUE,EAAUpI,GACxC,OAAOA,EAAO0N,cAActF,MAGhCS,GAAkB,CAAC,KAAM,MAAO,SAAS,SAAU3gB,EAAOukB,EAAM3J,EAAQ3iB,GACpE,IAAIusB,EAAU5J,EAAOH,QAAQgL,cAAczlB,EAAO/H,EAAO2iB,EAAOpB,SAEjD,MAAXgL,EACAD,EAAKrvB,EAAIsvB,EAETxM,EAAgB4C,GAAQrB,eAAiBvZ,KAIjD2gB,GAAkB,CAAC,IAAK,IAAK,MAAM,SAAU3gB,EAAOukB,EAAM3J,EAAQ3iB,GAC9DssB,EAAKtsB,GAASijB,EAAMlb,MAkCxB,IAAI0lB,GAAwB,2DAA2D5lB,MAAM,KAQzF6lB,GAA6B,8BAA8B7lB,MAAM,KAMjE8lB,GAA2B,uBAAuB9lB,MAAM,KAM5D,SAAS+lB,GAAoBC,EAAaje,EAAQkK,GAC9C,IAAInd,EAAGutB,EAAI1D,EAAK2D,EAAM0D,EAAYzD,oBAClC,IAAKjgB,KAAK2jB,eAKN,IAJA3jB,KAAK2jB,eAAiB,GACtB3jB,KAAK4jB,oBAAsB,GAC3B5jB,KAAK6jB,kBAAoB,GAEpBrxB,EAAI,EAAGA,EAAI,IAAKA,EACjB6pB,EAAM5G,EAAU,CAAC,IAAM,IAAIhN,IAAIjW,GAC/BwN,KAAK6jB,kBAAkBrxB,GAAKwN,KAAK+iB,YAAY1G,EAAK,IAAI4D,oBACtDjgB,KAAK4jB,oBAAoBpxB,GAAKwN,KAAKgjB,cAAc3G,EAAK,IAAI4D,oBAC1DjgB,KAAK2jB,eAAenxB,GAAKwN,KAAKijB,SAAS5G,EAAK,IAAI4D,oBAIxD,OAAItQ,EACe,SAAXlK,GAEe,KADfsa,EAAKrhB,GAAQ/L,KAAKqN,KAAK2jB,eAAgB3D,IACpBD,EAAK,KACN,QAAXta,GAEQ,KADfsa,EAAKrhB,GAAQ/L,KAAKqN,KAAK4jB,oBAAqB5D,IACzBD,EAAK,MAGT,KADfA,EAAKrhB,GAAQ/L,KAAKqN,KAAK6jB,kBAAmB7D,IACvBD,EAAK,KAGb,SAAXta,GAEY,KADZsa,EAAKrhB,GAAQ/L,KAAKqN,KAAK2jB,eAAgB3D,IAE5BD,GAGC,KADZA,EAAKrhB,GAAQ/L,KAAKqN,KAAK4jB,oBAAqB5D,IAEjCD,GAGI,KADfA,EAAKrhB,GAAQ/L,KAAKqN,KAAK6jB,kBAAmB7D,IACvBD,EAAK,KACN,QAAXta,GAEK,KADZsa,EAAKrhB,GAAQ/L,KAAKqN,KAAK4jB,oBAAqB5D,IAEjCD,GAGC,KADZA,EAAKrhB,GAAQ/L,KAAKqN,KAAK2jB,eAAgB3D,IAE5BD,GAGI,KADfA,EAAKrhB,GAAQ/L,KAAKqN,KAAK6jB,kBAAmB7D,IACvBD,EAAK,MAGZ,KADZA,EAAKrhB,GAAQ/L,KAAKqN,KAAK6jB,kBAAmB7D,IAE/BD,GAGC,KADZA,EAAKrhB,GAAQ/L,KAAKqN,KAAK2jB,eAAgB3D,IAE5BD,GAGI,KADfA,EAAKrhB,GAAQ/L,KAAKqN,KAAK4jB,oBAAqB5D,IACzBD,EAAK,KAqFpC,IAAI+D,GAAuBpG,GAoBvBqG,GAA4BrG,GAoB5BsG,GAA0BtG,GAqB9B,SAASuG,KACL,SAAStD,EAAUtlB,EAAGC,GAClB,OAAOA,EAAExE,OAASuE,EAAEvE,OAGxB,IACItE,EAAG6pB,EAAK6H,EAAMC,EAAQC,EADtBC,EAAY,GAAIzD,EAAc,GAAIC,EAAa,GAAIC,EAAc,GAErE,IAAKtuB,EAAI,EAAGA,EAAI,EAAGA,IAEf6pB,EAAM5G,EAAU,CAAC,IAAM,IAAIhN,IAAIjW,GAC/B0xB,EAAOlkB,KAAK+iB,YAAY1G,EAAK,IAC7B8H,EAASnkB,KAAKgjB,cAAc3G,EAAK,IACjC+H,EAAQpkB,KAAKijB,SAAS5G,EAAK,IAC3BgI,EAAU/rB,KAAK4rB,GACftD,EAAYtoB,KAAK6rB,GACjBtD,EAAWvoB,KAAK8rB,GAChBtD,EAAYxoB,KAAK4rB,GACjBpD,EAAYxoB,KAAK6rB,GACjBrD,EAAYxoB,KAAK8rB,GAQrB,IAJAC,EAAUlkB,KAAKwgB,GACfC,EAAYzgB,KAAKwgB,GACjBE,EAAW1gB,KAAKwgB,GAChBG,EAAY3gB,KAAKwgB,GACZnuB,EAAI,EAAGA,EAAI,EAAGA,IACfouB,EAAYpuB,GAAKwrB,GAAY4C,EAAYpuB,IACzCquB,EAAWruB,GAAKwrB,GAAY6C,EAAWruB,IACvCsuB,EAAYtuB,GAAKwrB,GAAY8C,EAAYtuB,IAG7CwN,KAAKskB,eAAiB,IAAIld,OAAO,KAAO0Z,EAAY7jB,KAAK,KAAO,IAAK,KACrE+C,KAAKukB,oBAAsBvkB,KAAKskB,eAChCtkB,KAAKwkB,kBAAoBxkB,KAAKskB,eAE9BtkB,KAAKykB,qBAAuB,IAAIrd,OAAO,KAAOyZ,EAAW5jB,KAAK,KAAO,IAAK,KAC1E+C,KAAK0kB,0BAA4B,IAAItd,OAAO,KAAOwZ,EAAY3jB,KAAK,KAAO,IAAK,KAChF+C,KAAK2kB,wBAA0B,IAAIvd,OAAO,KAAOid,EAAUpnB,KAAK,KAAO,IAAK,KAKhF,SAAS2nB,KACL,OAAO5kB,KAAK6kB,QAAU,IAAM,GA6BhC,SAASpO,GAAU5gB,EAAOivB,GACtBhJ,EAAejmB,EAAO,EAAG,GAAG,WACxB,OAAOmK,KAAKkc,aAAazF,SAASzW,KAAK6kB,QAAS7kB,KAAK+kB,UAAWD,MAgBxE,SAASE,GAAelH,EAAUpI,GAC9B,OAAOA,EAAOuP,eAzClBnJ,EAAe,IAAK,CAAC,KAAM,GAAI,EAAG,QAClCA,EAAe,IAAK,CAAC,KAAM,GAAI,EAAG8I,IAClC9I,EAAe,IAAK,CAAC,KAAM,GAAI,GAN/B,WACI,OAAO9b,KAAK6kB,SAAW,MAO3B/I,EAAe,MAAO,EAAG,GAAG,WACxB,MAAO,GAAK8I,GAAQ9P,MAAM9U,MAAQqb,EAASrb,KAAK+kB,UAAW,MAG/DjJ,EAAe,QAAS,EAAG,GAAG,WAC1B,MAAO,GAAK8I,GAAQ9P,MAAM9U,MAAQqb,EAASrb,KAAK+kB,UAAW,GACvD1J,EAASrb,KAAKklB,UAAW,MAGjCpJ,EAAe,MAAO,EAAG,GAAG,WACxB,MAAO,GAAK9b,KAAK6kB,QAAUxJ,EAASrb,KAAK+kB,UAAW,MAGxDjJ,EAAe,QAAS,EAAG,GAAG,WAC1B,MAAO,GAAK9b,KAAK6kB,QAAUxJ,EAASrb,KAAK+kB,UAAW,GAChD1J,EAASrb,KAAKklB,UAAW,MASjCzO,GAAS,KAAK,GACdA,GAAS,KAAK,GAId+D,EAAa,OAAQ,KAGrBW,EAAgB,OAAQ,IAQxByC,GAAc,IAAMoH,IACpBpH,GAAc,IAAMoH,IACpBpH,GAAc,IAAMZ,GACpBY,GAAc,IAAMZ,GACpBY,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAC/BgB,GAAc,KAAMZ,EAAWJ,GAC/BgB,GAAc,KAAMZ,EAAWJ,GAE/BgB,GAAc,MAAOX,GACrBW,GAAc,QAASV,GACvBU,GAAc,MAAOX,GACrBW,GAAc,QAASV,GAEvBoB,GAAc,CAAC,IAAK,MA3+BT,GA4+BXA,GAAc,CAAC,IAAK,OAAO,SAAU1gB,EAAO+T,EAAO6G,GAC/C,IAAI2M,EAASrM,EAAMlb,GACnB+T,EA9+BO,GA8+BkB,KAAXwT,EAAgB,EAAIA,KAEtC7G,GAAc,CAAC,IAAK,MAAM,SAAU1gB,EAAO+T,EAAO6G,GAC9CA,EAAO4M,MAAQ5M,EAAOH,QAAQgN,KAAKznB,GACnC4a,EAAO8M,UAAY1nB,KAEvB0gB,GAAc,CAAC,IAAK,OAAO,SAAU1gB,EAAO+T,EAAO6G,GAC/C7G,EAr/BO,GAq/BOmH,EAAMlb,GACpBgY,EAAgB4C,GAAQnB,SAAU,KAEtCiH,GAAc,OAAO,SAAU1gB,EAAO+T,EAAO6G,GACzC,IAAI+M,EAAM3nB,EAAM9G,OAAS,EACzB6a,EA1/BO,GA0/BOmH,EAAMlb,EAAMnH,OAAO,EAAG8uB,IACpC5T,EA1/BS,GA0/BOmH,EAAMlb,EAAMnH,OAAO8uB,IACnC3P,EAAgB4C,GAAQnB,SAAU,KAEtCiH,GAAc,SAAS,SAAU1gB,EAAO+T,EAAO6G,GAC3C,IAAIgN,EAAO5nB,EAAM9G,OAAS,EACtB2uB,EAAO7nB,EAAM9G,OAAS,EAC1B6a,EAjgCO,GAigCOmH,EAAMlb,EAAMnH,OAAO,EAAG+uB,IACpC7T,EAjgCS,GAigCOmH,EAAMlb,EAAMnH,OAAO+uB,EAAM,IACzC7T,EAjgCS,GAigCOmH,EAAMlb,EAAMnH,OAAOgvB,IACnC7P,EAAgB4C,GAAQnB,SAAU,KAEtCiH,GAAc,OAAO,SAAU1gB,EAAO+T,EAAO6G,GACzC,IAAI+M,EAAM3nB,EAAM9G,OAAS,EACzB6a,EAxgCO,GAwgCOmH,EAAMlb,EAAMnH,OAAO,EAAG8uB,IACpC5T,EAxgCS,GAwgCOmH,EAAMlb,EAAMnH,OAAO8uB,OAEvCjH,GAAc,SAAS,SAAU1gB,EAAO+T,EAAO6G,GAC3C,IAAIgN,EAAO5nB,EAAM9G,OAAS,EACtB2uB,EAAO7nB,EAAM9G,OAAS,EAC1B6a,EA9gCO,GA8gCOmH,EAAMlb,EAAMnH,OAAO,EAAG+uB,IACpC7T,EA9gCS,GA8gCOmH,EAAMlb,EAAMnH,OAAO+uB,EAAM,IACzC7T,EA9gCS,GA8gCOmH,EAAMlb,EAAMnH,OAAOgvB,OA2BvC,IAyBIC,GAzBAC,GAAa3G,GAAW,SAAS,GAEjC4G,GAAa,CACbC,SAj2CkB,CAClBC,QAAU,gBACVC,QAAU,mBACVC,SAAW,eACXC,QAAU,oBACVC,SAAW,sBACXC,SAAW,KA41CX1J,eAp1CwB,CACxB2J,IAAO,YACPC,GAAO,SACPC,EAAO,aACPC,GAAO,eACPC,IAAO,sBACPC,KAAO,6BA+0CPlK,YA7zCqB,eA8zCrBP,QAxzCiB,KAyzCjB0K,uBAxzCgC,UAyzChCC,aAnzCsB,CACtBC,OAAS,QACTC,KAAS,SACTtyB,EAAK,gBACLuyB,GAAK,aACLl0B,EAAK,WACLm0B,GAAK,aACL3F,EAAK,UACL4F,GAAK,WACLl0B,EAAK,QACLm0B,GAAK,UACL5F,EAAK,UACL6F,GAAK,YACLrI,EAAK,SACLsI,GAAK,YAuyCL7H,OAAQK,GACRN,YAAaO,GAEbuC,KA9gBoB,CACpBL,IAAM,EACNC,IAAM,GA8gBNkB,SAAUK,GACVP,YAAaS,GACbR,cAAeO,GAEf6D,cAnC6B,iBAuC7BC,GAAU,GACVC,GAAiB,GAGrB,SAASC,GAAgBxzB,GACrB,OAAOA,EAAMA,EAAI8G,cAAcuJ,QAAQ,IAAK,KAAOrQ,EA8BvD,SAASyzB,GAAWz0B,GAChB,IAAI00B,EAAY,KAEhB,IAAKJ,GAAQt0B,SAA4B,IAAXR,GACtBA,GAAUA,EAAOD,QACrB,IACIm1B,EAAY/B,GAAagC,OAEzB,kGACAC,GAAmBF,GACrB,MAAOxtB,IAEb,OAAOotB,GAAQt0B,GAMnB,SAAS40B,GAAoB5zB,EAAK2I,GAC9B,IAAIX,EAqBJ,OApBIhI,KAEIgI,EADAkZ,EAAYvY,GACLkrB,GAAU7zB,GAGV8zB,GAAa9zB,EAAK2I,IAKzBgpB,GAAe3pB,EAGU,oBAAb4Q,SAA6BA,QAAQ4M,MAE7C5M,QAAQ4M,KAAK,UAAYxlB,EAAO,2CAKrC2xB,GAAagC,MAGxB,SAASG,GAAc90B,EAAMylB,GACzB,GAAe,OAAXA,EAAiB,CACjB,IAAI9C,EAAQyE,EAAeyL,GAE3B,GADApN,EAAOsP,KAAO/0B,EACO,MAAjBs0B,GAAQt0B,GACRinB,EAAgB,uBACR,2OAIRG,EAAekN,GAAQt0B,GAAMg1B,aAC1B,GAA2B,MAAvBvP,EAAOwP,aACd,GAAoC,MAAhCX,GAAQ7O,EAAOwP,cACf7N,EAAekN,GAAQ7O,EAAOwP,cAAcD,YACzC,CAEH,GAAc,OADdrS,EAAS8R,GAAWhP,EAAOwP,eAWvB,OAPKV,GAAe9O,EAAOwP,gBACvBV,GAAe9O,EAAOwP,cAAgB,IAE1CV,GAAe9O,EAAOwP,cAAc1vB,KAAK,CACrCvF,KAAMA,EACNylB,OAAQA,IAEL,KATP2B,EAAezE,EAAOqS,QA2BlC,OAdAV,GAAQt0B,GAAQ,IAAIsnB,EAAOH,EAAaC,EAAc3B,IAElD8O,GAAev0B,IACfu0B,GAAev0B,GAAMgS,SAAQ,SAAU0F,GACnCod,GAAapd,EAAE1X,KAAM0X,EAAE+N,WAO/BmP,GAAmB50B,GAGZs0B,GAAQt0B,GAIf,cADOs0B,GAAQt0B,GACR,KAiCf,SAAS60B,GAAW7zB,GAChB,IAAI2hB,EAMJ,GAJI3hB,GAAOA,EAAIskB,SAAWtkB,EAAIskB,QAAQqP,QAClC3zB,EAAMA,EAAIskB,QAAQqP,QAGjB3zB,EACD,OAAO2xB,GAGX,IAAKxpB,EAAQnI,GAAM,CAGf,GADA2hB,EAAS8R,GAAWzzB,GAEhB,OAAO2hB,EAEX3hB,EAAM,CAACA,GAGX,OAxKJ,SAAsBk0B,GAGlB,IAFA,IAAW7sB,EAAG/D,EAAMqe,EAAQhY,EAAxBlL,EAAI,EAEDA,EAAIy1B,EAAMnxB,QAAQ,CAKrB,IAHAsE,GADAsC,EAAQ6pB,GAAgBU,EAAMz1B,IAAIkL,MAAM,MAC9B5G,OAEVO,GADAA,EAAOkwB,GAAgBU,EAAMz1B,EAAI,KACnB6E,EAAKqG,MAAM,KAAO,KACzBtC,EAAI,GAAG,CAEV,GADAsa,EAAS8R,GAAW9pB,EAAM0C,MAAM,EAAGhF,GAAG6B,KAAK,MAEvC,OAAOyY,EAEX,GAAIre,GAAQA,EAAKP,QAAUsE,GAAK6d,EAAcvb,EAAOrG,GAAM,IAAS+D,EAAI,EAEpE,MAEJA,IAEJ5I,IAEJ,OAAOkzB,GAmJAwC,CAAan0B,GAOxB,SAASo0B,GAAev1B,GACpB,IAAIqjB,EACA5a,EAAIzI,EAAE8rB,GAyBV,OAvBIrjB,IAAsC,IAAjCua,EAAgBhjB,GAAGqjB,WACxBA,EACI5a,EApwCA,GAowCiB,GAAKA,EApwCtB,GAowCuC,GApwCvC,EAqwCAA,EApwCD,GAowCkB,GAAKA,EApwCvB,GAowCwC8jB,GAAY9jB,EAtwCpD,GAswC6DA,EArwC5D,IACD,EAqwCCA,EApwCD,GAowCkB,GAAKA,EApwCvB,GAowCwC,IAAmB,KAAZA,EApwC/C,KAowCgF,IAAdA,EAnwChE,IAmwCiG,IAAdA,EAlwCnF,IAkwCyH,IAAnBA,EAjwCjG,IAHP,EAqwCCA,EApwCC,GAowCgB,GAAKA,EApwCrB,GAowCsC,GApwCtC,EAqwCDA,EApwCC,GAowCgB,GAAKA,EApwCrB,GAowCsC,GApwCtC,EAqwCDA,EApwCM,GAowCW,GAAKA,EApwChB,GAowCiC,IApwCjC,GAqwCL,EAEDua,EAAgBhjB,GAAGw1B,qBAAuBnS,EA7wC3C,GA6wC8DA,EA3wC9D,KA4wCCA,EA5wCD,GA8wCCL,EAAgBhjB,GAAGy1B,iBAAgC,IAAdpS,IACrCA,EA1wCD,GA4wCCL,EAAgBhjB,GAAG01B,mBAAkC,IAAdrS,IACvCA,EA5wCE,GA+wCNL,EAAgBhjB,GAAGqjB,SAAWA,GAG3BrjB,EAIX,SAAS21B,GAASltB,EAAGC,EAAGzI,GACpB,OAAS,MAALwI,EACOA,EAEF,MAALC,EACOA,EAEJzI,EAgBX,SAAS21B,GAAiBhQ,GACtB,IAAIhmB,EAAG2K,EAAkBsrB,EAAaC,EAAiBC,EAA1C/qB,EAAQ,GAErB,IAAI4a,EAAOvB,GAAX,CA6BA,IAzBAwR,EApBJ,SAA0BjQ,GAEtB,IAAIoQ,EAAW,IAAI7rB,KAAK8X,EAAMhB,OAC9B,OAAI2E,EAAOqQ,QACA,CAACD,EAASjH,iBAAkBiH,EAASE,cAAeF,EAASG,cAEjE,CAACH,EAASrH,cAAeqH,EAASI,WAAYJ,EAASK,WAchDC,CAAiB1Q,GAG3BA,EAAOgG,IAAyB,MAAnBhG,EAAOkG,GA7zCjB,IA6zCyD,MAApBlG,EAAOkG,GA9zC3C,IAy3CZ,SAA+BlG,GAC3B,IAAI2Q,EAAGC,EAAUjH,EAAMC,EAASN,EAAKC,EAAKsH,EAAMC,EAGhD,GAAY,OADZH,EAAI3Q,EAAOgG,IACL+K,IAAqB,MAAPJ,EAAEK,GAAoB,MAAPL,EAAEM,EACjC3H,EAAM,EACNC,EAAM,EAMNqH,EAAWb,GAASY,EAAEI,GAAI/Q,EAAOkG,GAt4C9B,GAs4CwC6D,GAAWmH,KAAe,EAAG,GAAGnhB,MAC3E4Z,EAAOoG,GAASY,EAAEK,EAAG,KACrBpH,EAAUmG,GAASY,EAAEM,EAAG,IACV,GAAKrH,EAAU,KACzBkH,GAAkB,OAEnB,CACHxH,EAAMtJ,EAAOH,QAAQsR,MAAM7H,IAC3BC,EAAMvJ,EAAOH,QAAQsR,MAAM5H,IAE3B,IAAI6H,EAAUrH,GAAWmH,KAAe5H,EAAKC,GAE7CqH,EAAWb,GAASY,EAAEU,GAAIrR,EAAOkG,GAl5C9B,GAk5CwCkL,EAAQrhB,MAGnD4Z,EAAOoG,GAASY,EAAEA,EAAGS,EAAQzH,MAElB,MAAPgH,EAAEr2B,IAEFsvB,EAAU+G,EAAEr2B,GACE,GAAKsvB,EAAU,KACzBkH,GAAkB,GAER,MAAPH,EAAElvB,GAETmoB,EAAU+G,EAAElvB,EAAI6nB,GACZqH,EAAElvB,EAAI,GAAKkvB,EAAElvB,EAAI,KACjBqvB,GAAkB,IAItBlH,EAAUN,EAGdK,EAAO,GAAKA,EAAOO,GAAY0G,EAAUtH,EAAKC,GAC9CnM,EAAgB4C,GAAQ6P,gBAAiB,EACf,MAAnBiB,EACP1T,EAAgB4C,GAAQ8P,kBAAmB,GAE3Ce,EAAOnH,GAAmBkH,EAAUjH,EAAMC,EAASN,EAAKC,GACxDvJ,EAAOkG,GA96CJ,GA86Ce2K,EAAK9gB,KACvBiQ,EAAOsR,WAAaT,EAAK3gB,WA/GzBqhB,CAAsBvR,GAID,MAArBA,EAAOsR,aACPnB,EAAYJ,GAAS/P,EAAOkG,GAr0CzB,GAq0CmC+J,EAr0CnC,KAu0CCjQ,EAAOsR,WAAanL,GAAWgK,IAAoC,IAAtBnQ,EAAOsR,cACpDlU,EAAgB4C,GAAQ4P,oBAAqB,GAGjDjrB,EAAOskB,GAAckH,EAAW,EAAGnQ,EAAOsR,YAC1CtR,EAAOkG,GA30CH,GA20CevhB,EAAK2rB,cACxBtQ,EAAOkG,GA30CJ,GA20CevhB,EAAK4rB,cAQtBv2B,EAAI,EAAGA,EAAI,GAAqB,MAAhBgmB,EAAOkG,GAAGlsB,KAAcA,EACzCgmB,EAAOkG,GAAGlsB,GAAKoL,EAAMpL,GAAKi2B,EAAYj2B,GAI1C,KAAOA,EAAI,EAAGA,IACVgmB,EAAOkG,GAAGlsB,GAAKoL,EAAMpL,GAAsB,MAAhBgmB,EAAOkG,GAAGlsB,GAAqB,IAANA,EAAU,EAAI,EAAKgmB,EAAOkG,GAAGlsB,GAI7D,KAApBgmB,EAAOkG,GA51CJ,IA61CuB,IAAtBlG,EAAOkG,GA51CN,IA61CqB,IAAtBlG,EAAOkG,GA51CN,IA61C0B,IAA3BlG,EAAOkG,GA51CD,KA61CVlG,EAAOwR,UAAW,EAClBxR,EAAOkG,GAj2CJ,GAi2Ce,GAGtBlG,EAAOvB,IAAMuB,EAAOqQ,QAAUpH,GAAgBN,IAAYrM,MAAM,KAAMlX,GACtE8qB,EAAkBlQ,EAAOqQ,QAAUrQ,EAAOvB,GAAGgL,YAAczJ,EAAOvB,GAAGgT,SAIlD,MAAfzR,EAAON,MACPM,EAAOvB,GAAGiT,cAAc1R,EAAOvB,GAAGkT,gBAAkB3R,EAAON,MAG3DM,EAAOwR,WACPxR,EAAOkG,GA92CJ,GA82Ce,IAIlBlG,EAAOgG,SAA6B,IAAhBhG,EAAOgG,GAAG1rB,GAAqB0lB,EAAOgG,GAAG1rB,IAAM41B,IACnE9S,EAAgB4C,GAAQ7B,iBAAkB,IA+DlD,IAAIyT,GAAmB,mJACnBC,GAAgB,8IAEhBC,GAAU,wBAEVC,GAAW,CACX,CAAC,eAAgB,uBACjB,CAAC,aAAc,mBACf,CAAC,eAAgB,kBACjB,CAAC,aAAc,eAAe,GAC9B,CAAC,WAAY,eACb,CAAC,UAAW,cAAc,GAC1B,CAAC,aAAc,cACf,CAAC,WAAY,SAEb,CAAC,aAAc,eACf,CAAC,YAAa,eAAe,GAC7B,CAAC,UAAW,UAIZC,GAAW,CACX,CAAC,gBAAiB,uBAClB,CAAC,gBAAiB,sBAClB,CAAC,WAAY,kBACb,CAAC,QAAS,aACV,CAAC,cAAe,qBAChB,CAAC,cAAe,oBAChB,CAAC,SAAU,gBACX,CAAC,OAAQ,YACT,CAAC,KAAM,SAGPC,GAAkB,sBAGtB,SAASC,GAAclS,GACnB,IAAIhmB,EAAGC,EAGHk4B,EAAWC,EAAYC,EAAYC,EAFnC1uB,EAASoc,EAAOT,GAChBzb,EAAQ8tB,GAAiB7tB,KAAKH,IAAWiuB,GAAc9tB,KAAKH,GAGhE,GAAIE,EAAO,CAGP,IAFAsZ,EAAgB4C,GAAQjC,KAAM,EAEzB/jB,EAAI,EAAGC,EAAI83B,GAASzzB,OAAQtE,EAAIC,EAAGD,IACpC,GAAI+3B,GAAS/3B,GAAG,GAAG+J,KAAKD,EAAM,IAAK,CAC/BsuB,EAAaL,GAAS/3B,GAAG,GACzBm4B,GAA+B,IAAnBJ,GAAS/3B,GAAG,GACxB,MAGR,GAAkB,MAAdo4B,EAEA,YADApS,EAAO3B,UAAW,GAGtB,GAAIva,EAAM,GAAI,CACV,IAAK9J,EAAI,EAAGC,EAAI+3B,GAAS1zB,OAAQtE,EAAIC,EAAGD,IACpC,GAAIg4B,GAASh4B,GAAG,GAAG+J,KAAKD,EAAM,IAAK,CAE/BuuB,GAAcvuB,EAAM,IAAM,KAAOkuB,GAASh4B,GAAG,GAC7C,MAGR,GAAkB,MAAdq4B,EAEA,YADArS,EAAO3B,UAAW,GAI1B,IAAK8T,GAA2B,MAAdE,EAEd,YADArS,EAAO3B,UAAW,GAGtB,GAAIva,EAAM,GAAI,CACV,IAAIguB,GAAQ/tB,KAAKD,EAAM,IAInB,YADAkc,EAAO3B,UAAW,GAFlBiU,EAAW,IAMnBtS,EAAOR,GAAK4S,GAAcC,GAAc,KAAOC,GAAY,IAC3DC,GAA0BvS,QAE1BA,EAAO3B,UAAW,EAK1B,IAAIH,GAAU,0LAkBd,SAASsU,GAAeC,GACpB,IAAI1iB,EAAO7C,SAASulB,EAAS,IAC7B,OAAI1iB,GAAQ,GACD,IAAOA,EACPA,GAAQ,IACR,KAAOA,EAEXA,EAsBX,IAAI2iB,GAAa,CACbC,GAAI,EACJC,IAAK,EACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,KAiBT,SAASC,GAAkBrT,GACvB,IAzE+ByS,EAASa,EAAUC,EAAQC,EAASC,EAAWC,EAC1E3uB,EAwEAjB,EAAQoa,GAAQna,KAAuBic,EAAOT,GA7CzC3T,QAAQ,oBAAqB,KAAKA,QAAQ,WAAY,KAAKA,QAAQ,SAAU,IAAIA,QAAQ,SAAU,KA8C5G,GAAI9H,EAAO,CACP,IAAI6vB,GA3EuBlB,EA2EiB3uB,EAAM,GA3EdwvB,EA2EkBxvB,EAAM,GA3EdyvB,EA2EkBzvB,EAAM,GA3EhB0vB,EA2EoB1vB,EAAM,GA3EjB2vB,EA2EqB3vB,EAAM,GA3EhB4vB,EA2EoB5vB,EAAM,GA1EpGiB,EAAS,CACTytB,GAAeC,GACfrL,GAAyBlhB,QAAQotB,GACjCpmB,SAASqmB,EAAQ,IACjBrmB,SAASsmB,EAAS,IAClBtmB,SAASumB,EAAW,KAGpBC,GACA3uB,EAAOjF,KAAKoN,SAASwmB,EAAW,KAG7B3uB,GA+DH,IA7CR,SAAsB6uB,EAAYC,EAAa7T,GAC3C,OAAI4T,GAEsB7I,GAA2B7kB,QAAQ0tB,KACrC,IAAIrvB,KAAKsvB,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAAIpC,WAEzErU,EAAgB4C,GAAQ7B,iBAAkB,EAC1C6B,EAAO3B,UAAW,GACX,GAqCNyV,CAAahwB,EAAM,GAAI6vB,EAAa3T,GACrC,OAGJA,EAAOkG,GAAKyN,EACZ3T,EAAON,KAvBf,SAAyBqU,EAAWC,EAAgBC,GAChD,GAAIF,EACA,OAAOrB,GAAWqB,GACf,GAAIC,EAEP,OAAO,EAEP,IAAIE,EAAKhnB,SAAS+mB,EAAW,IACzB75B,EAAI85B,EAAK,IACb,OADuBA,EAAK95B,GAAK,IACtB,GAAKA,EAcF+5B,CAAgBrwB,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAExDkc,EAAOvB,GAAKwK,GAAc3M,MAAM,KAAM0D,EAAOkG,IAC7ClG,EAAOvB,GAAGiT,cAAc1R,EAAOvB,GAAGkT,gBAAkB3R,EAAON,MAE3DtC,EAAgB4C,GAAQ9B,SAAU,OAElC8B,EAAO3B,UAAW,EAgD1B,SAASkU,GAA0BvS,GAE/B,GAAIA,EAAOR,KAAOnD,EAAM+X,SAIxB,GAAIpU,EAAOR,KAAOnD,EAAMgY,SAAxB,CAIArU,EAAOkG,GAAK,GACZ9I,EAAgB4C,GAAQ1C,OAAQ,EAGhC,IACItjB,EAAG65B,EAAah3B,EAAQQ,EAAOi3B,EAD/B1wB,EAAS,GAAKoc,EAAOT,GAErBgV,EAAe3wB,EAAOtF,OACtBk2B,EAAyB,EAI7B,IAFA33B,EAAS+mB,EAAa5D,EAAOR,GAAIQ,EAAOH,SAAS/b,MAAMof,IAAqB,GAEvElpB,EAAI,EAAGA,EAAI6C,EAAOyB,OAAQtE,IAC3BqD,EAAQR,EAAO7C,IACf65B,GAAejwB,EAAOE,MAAMyhB,GAAsBloB,EAAO2iB,KAAY,IAAI,OAIrEsU,EAAU1wB,EAAO3F,OAAO,EAAG2F,EAAOsC,QAAQ2tB,KAC9Bv1B,OAAS,GACjB8e,EAAgB4C,GAAQxC,YAAY1d,KAAKw0B,GAE7C1wB,EAASA,EAAOgE,MAAMhE,EAAOsC,QAAQ2tB,GAAeA,EAAYv1B,QAChEk2B,GAA0BX,EAAYv1B,QAGtC+kB,EAAqBhmB,IACjBw2B,EACAzW,EAAgB4C,GAAQ1C,OAAQ,EAGhCF,EAAgB4C,GAAQzC,aAAazd,KAAKzC,GAE9C4oB,GAAwB5oB,EAAOw2B,EAAa7T,IAEvCA,EAAOpB,UAAYiV,GACxBzW,EAAgB4C,GAAQzC,aAAazd,KAAKzC,GAKlD+f,EAAgB4C,GAAQtC,cAAgB6W,EAAeC,EACnD5wB,EAAOtF,OAAS,GAChB8e,EAAgB4C,GAAQxC,YAAY1d,KAAK8D,GAIzCoc,EAAOkG,GA7sDJ,IA6sDgB,KACiB,IAApC9I,EAAgB4C,GAAQnB,SACxBmB,EAAOkG,GA/sDJ,GA+sDe,IAClB9I,EAAgB4C,GAAQnB,aAAUrhB,GAGtC4f,EAAgB4C,GAAQhC,gBAAkBgC,EAAOkG,GAAGte,MAAM,GAC1DwV,EAAgB4C,GAAQ/B,SAAW+B,EAAO8M,UAE1C9M,EAAOkG,GAttDA,GA6tDX,SAA0BhJ,EAAQ/M,EAAM8N,GACpC,IAAIwW,EAEJ,OAAgB,MAAZxW,EAEO9N,EAEgB,MAAvB+M,EAAOwX,aACAxX,EAAOwX,aAAavkB,EAAM8N,GACX,MAAff,EAAO2P,OAEd4H,EAAOvX,EAAO2P,KAAK5O,KACP9N,EAAO,KACfA,GAAQ,IAEPskB,GAAiB,KAATtkB,IACTA,EAAO,GAEJA,GAGAA,EA5BOwkB,CAAgB3U,EAAOH,QAASG,EAAOkG,GAttDlD,GAstD4DlG,EAAO8M,WAE1EkD,GAAgBhQ,GAChB2P,GAAc3P,QA7DVqT,GAAkBrT,QAJlBkS,GAAclS,GAmKtB,SAAS4U,GAAe5U,GACpB,IAAI5a,EAAQ4a,EAAOT,GACftS,EAAS+S,EAAOR,GAIpB,OAFAQ,EAAOH,QAAUG,EAAOH,SAAWuP,GAAUpP,EAAOP,IAEtC,OAAVra,QAA8B5H,IAAXyP,GAAkC,KAAV7H,EACpC2Z,EAAc,CAACpB,WAAW,KAGhB,iBAAVvY,IACP4a,EAAOT,GAAKna,EAAQ4a,EAAOH,QAAQgV,SAASzvB,IAG5C8a,EAAS9a,GACF,IAAI2a,EAAO4P,GAAcvqB,KACzBuX,EAAOvX,GACd4a,EAAOvB,GAAKrZ,EACL1B,EAAQuJ,GAtFvB,SAAkC+S,GAC9B,IAAI8U,EACAC,EAEAC,EACAh7B,EACAi7B,EAEJ,GAAyB,IAArBjV,EAAOR,GAAGlhB,OAGV,OAFA8e,EAAgB4C,GAAQnC,eAAgB,OACxCmC,EAAOvB,GAAK,IAAIla,KAAKya,MAIzB,IAAKhlB,EAAI,EAAGA,EAAIgmB,EAAOR,GAAGlhB,OAAQtE,IAC9Bi7B,EAAe,EACfH,EAAa1V,EAAW,GAAIY,GACN,MAAlBA,EAAOqQ,UACPyE,EAAWzE,QAAUrQ,EAAOqQ,SAEhCyE,EAAWtV,GAAKQ,EAAOR,GAAGxlB,GAC1Bu4B,GAA0BuC,GAErB1W,EAAQ0W,KAKbG,GAAgB7X,EAAgB0X,GAAYpX,cAG5CuX,GAAkE,GAAlD7X,EAAgB0X,GAAYvX,aAAajf,OAEzD8e,EAAgB0X,GAAYI,MAAQD,GAEjB,MAAfD,GAAuBC,EAAeD,KACtCA,EAAcC,EACdF,EAAaD,IAIrB/X,EAAOiD,EAAQ+U,GAAcD,GA8CzBK,CAAyBnV,GAClB/S,EACPslB,GAA0BvS,GAYlC,SAAyBA,GACrB,IAAI5a,EAAQ4a,EAAOT,GACf9C,EAAYrX,GACZ4a,EAAOvB,GAAK,IAAIla,KAAK8X,EAAMhB,OACpBsB,EAAOvX,GACd4a,EAAOvB,GAAK,IAAIla,KAAKa,EAAM4X,WACH,iBAAV5X,EAxPtB,SAA0B4a,GACtB,IAAIyF,EAAUwM,GAAgBluB,KAAKic,EAAOT,IAE1B,OAAZkG,GAKJyM,GAAclS,IACU,IAApBA,EAAO3B,kBACA2B,EAAO3B,SAKlBgV,GAAkBrT,IACM,IAApBA,EAAO3B,kBACA2B,EAAO3B,SAMlBhC,EAAM+Y,wBAAwBpV,MAnB1BA,EAAOvB,GAAK,IAAIla,MAAMkhB,EAAQ,IAqP9B4P,CAAiBrV,GACVtc,EAAQ0B,IACf4a,EAAOkG,GAAK5hB,EAAIc,EAAMwC,MAAM,IAAI,SAAUuY,GACtC,OAAOjT,SAASiT,EAAK,OAEzB6P,GAAgBhQ,IACTxD,EAASpX,GAtExB,SAA0B4a,GACtB,IAAIA,EAAOvB,GAAX,CAIA,IAAIzkB,EAAIsoB,EAAqBtC,EAAOT,IACpCS,EAAOkG,GAAK5hB,EAAI,CAACtK,EAAE+V,KAAM/V,EAAE0W,MAAO1W,EAAEiW,KAAOjW,EAAE2K,KAAM3K,EAAEmW,KAAMnW,EAAEyW,OAAQzW,EAAEuW,OAAQvW,EAAEwW,cAAc,SAAU2P,GACrG,OAAOA,GAAOjT,SAASiT,EAAK,OAGhC6P,GAAgBhQ,IA6DZsV,CAAiBtV,GACVtD,EAAStX,GAEhB4a,EAAOvB,GAAK,IAAIla,KAAKa,GAErBiX,EAAM+Y,wBAAwBpV,GA7B9BuV,CAAgBvV,GAGf5B,EAAQ4B,KACTA,EAAOvB,GAAK,MAGTuB,IA0BX,SAAS7C,GAAkB/X,EAAO6H,EAAQiQ,EAAQ/F,EAAQqe,GACtD,IAnEI3Y,EAmEAxiB,EAAI,GAoBR,OAlBe,IAAX6iB,IAA8B,IAAXA,IACnB/F,EAAS+F,EACTA,OAAS1f,IAGRgf,EAASpX,IA5iFlB,SAAuB+a,GACnB,GAAIzlB,OAAOqX,oBACP,OAAmD,IAA3CrX,OAAOqX,oBAAoBoO,GAAK7hB,OAExC,IAAI0c,EACJ,IAAKA,KAAKmF,EACN,GAAIA,EAAItkB,eAAemf,GACnB,OAAO,EAGf,OAAO,EAkiFaya,CAAcrwB,IAC7B1B,EAAQ0B,IAA2B,IAAjBA,EAAM9G,UAC7B8G,OAAQ5H,GAIZnD,EAAEilB,kBAAmB,EACrBjlB,EAAEg2B,QAAUh2B,EAAEslB,OAAS6V,EACvBn7B,EAAEolB,GAAKvC,EACP7iB,EAAEklB,GAAKna,EACP/K,EAAEmlB,GAAKvS,EACP5S,EAAEukB,QAAUzH,GArFR0F,EAAM,IAAIkD,EAAO4P,GAAciF,GAuFXv6B,MAtFhBm3B,WAEJ3U,EAAIvN,IAAI,EAAG,KACXuN,EAAI2U,cAAWh0B,GAGZqf,EAmFX,SAASqU,GAAa9rB,EAAO6H,EAAQiQ,EAAQ/F,GACzC,OAAOgG,GAAiB/X,EAAO6H,EAAQiQ,EAAQ/F,GAAQ,GAxQ3DkF,EAAM+Y,wBAA0BlU,EAC5B,kVAIA,SAAUlB,GACNA,EAAOvB,GAAK,IAAIla,KAAKyb,EAAOT,IAAMS,EAAOqQ,QAAU,OAAS,QAKpEhU,EAAM+X,SAAW,aAGjB/X,EAAMgY,SAAW,aA6PjB,IAAIqB,GAAexU,EACf,sGACA,WACI,IAAIyU,EAAQzE,GAAY5U,MAAM,KAAMC,WACpC,OAAI/U,KAAK4W,WAAauX,EAAMvX,UACjBuX,EAAQnuB,KAAOA,KAAOmuB,EAEtB5W,OAKf6W,GAAe1U,EACf,sGACA,WACI,IAAIyU,EAAQzE,GAAY5U,MAAM,KAAMC,WACpC,OAAI/U,KAAK4W,WAAauX,EAAMvX,UACjBuX,EAAQnuB,KAAOA,KAAOmuB,EAEtB5W,OAUnB,SAAS8W,GAAO9tB,EAAI+tB,GAChB,IAAIjZ,EAAK7iB,EAIT,GAHuB,IAAnB87B,EAAQx3B,QAAgBoF,EAAQoyB,EAAQ,MACxCA,EAAUA,EAAQ,KAEjBA,EAAQx3B,OACT,OAAO4yB,KAGX,IADArU,EAAMiZ,EAAQ,GACT97B,EAAI,EAAGA,EAAI87B,EAAQx3B,SAAUtE,EACzB87B,EAAQ97B,GAAGokB,YAAa0X,EAAQ97B,GAAG+N,GAAI8U,KACxCA,EAAMiZ,EAAQ97B,IAGtB,OAAO6iB,EAgBX,IAIIkZ,GAAW,CAAC,OAAQ,UAAW,QAAS,OAAQ,MAAO,OAAQ,SAAU,SAAU,eAgCvF,SAASC,GAAU7mB,GACf,IAAIsT,EAAkBH,EAAqBnT,GACvC8mB,EAAQxT,EAAgB1S,MAAQ,EAChCmmB,EAAWzT,EAAgB9R,SAAW,EACtCmW,EAASrE,EAAgB/R,OAAS,EAClCylB,EAAQ1T,EAAgBkH,MAAQlH,EAAgB5R,SAAW,EAC3DulB,EAAO3T,EAAgBxS,KAAO,EAC9Boc,EAAQ5J,EAAgBtS,MAAQ,EAChCoc,EAAU9J,EAAgBhS,QAAU,EACpCic,EAAUjK,EAAgBlS,QAAU,EACpC8lB,EAAe5T,EAAgBjS,aAAe,EAElDhJ,KAAK6W,SA1CT,SAAyBjkB,GACrB,IAAK,IAAImB,KAAOnB,EACZ,IAAuC,IAAjC8L,GAAQ/L,KAAK47B,GAAUx6B,IAA0B,MAAVnB,EAAEmB,IAAiBqJ,MAAMxK,EAAEmB,IACpE,OAAO,EAKf,IADA,IAAI+6B,GAAiB,EACZt8B,EAAI,EAAGA,EAAI+7B,GAASz3B,SAAUtE,EACnC,GAAII,EAAE27B,GAAS/7B,IAAK,CAChB,GAAIs8B,EACA,OAAO,EAEPnpB,WAAW/S,EAAE27B,GAAS/7B,OAASsmB,EAAMlmB,EAAE27B,GAAS/7B,OAChDs8B,GAAiB,GAK7B,OAAO,EAuBSC,CAAgB9T,GAGhCjb,KAAKgvB,eAAiBH,EACR,IAAV3J,EACU,IAAVH,EACQ,IAARF,EAAe,GAAK,GAGxB7kB,KAAKivB,OAASL,EACF,EAARD,EAIJ3uB,KAAKkvB,SAAW5P,EACD,EAAXoP,EACQ,GAARD,EAEJzuB,KAAKmvB,MAAQ,GAEbnvB,KAAKqY,QAAUuP,KAEf5nB,KAAKovB,UAGT,SAASC,GAAY1W,GACjB,OAAOA,aAAe6V,GAG1B,SAASc,GAAUzW,GACf,OAAIA,EAAS,GACyB,EAA3BtiB,KAAKg5B,OAAO,EAAI1W,GAEhBtiB,KAAKg5B,MAAM1W,GAM1B,SAASviB,GAAQT,EAAO25B,GACpB1T,EAAejmB,EAAO,EAAG,GAAG,WACxB,IAAIS,EAAS0J,KAAKoJ,YACdqmB,EAAO,IAKX,OAJIn5B,EAAS,IACTA,GAAUA,EACVm5B,EAAO,KAEJA,EAAOpU,KAAY/kB,EAAS,IAAK,GAAKk5B,EAAYnU,IAAW,EAAW,GAAI,MAI3F/kB,GAAO,IAAK,KACZA,GAAO,KAAM,IAIbsnB,GAAc,IAAMH,IACpBG,GAAc,KAAMH,IACpBa,GAAc,CAAC,IAAK,OAAO,SAAU1gB,EAAO+T,EAAO6G,GAC/CA,EAAOqQ,SAAU,EACjBrQ,EAAON,KAAOwX,GAAiBjS,GAAkB7f,MAQrD,IAAI+xB,GAAc,kBAElB,SAASD,GAAiBE,EAASxzB,GAC/B,IAAIyzB,GAAWzzB,GAAU,IAAIE,MAAMszB,GAEnC,GAAgB,OAAZC,EACA,OAAO,KAGX,IACIC,IADUD,EAAQA,EAAQ/4B,OAAS,IAAM,IACtB,IAAIwF,MAAMqzB,KAAgB,CAAC,IAAK,EAAG,GACtD5K,EAAuB,GAAX+K,EAAM,GAAWhX,EAAMgX,EAAM,IAE7C,OAAmB,IAAZ/K,EACL,EACa,MAAb+K,EAAM,GAAa/K,GAAWA,EAIpC,SAASgL,GAAgBnyB,EAAOoyB,GAC5B,IAAI3a,EAAKlN,EACT,OAAI6nB,EAAM7X,QACN9C,EAAM2a,EAAMC,QACZ9nB,GAAQuQ,EAAS9a,IAAUuX,EAAOvX,GAASA,EAAM4X,UAAYkU,GAAY9rB,GAAO4X,WAAaH,EAAIG,UAEjGH,EAAI4B,GAAGiZ,QAAQ7a,EAAI4B,GAAGzB,UAAYrN,GAClC0M,EAAM4D,aAAapD,GAAK,GACjBA,GAEAqU,GAAY9rB,GAAOuyB,QAIlC,SAASC,GAAex9B,GAGpB,OAAoD,IAA5C2D,KAAKg5B,MAAM38B,EAAEqkB,GAAGoZ,oBAAsB,IAqJlD,SAASC,KACL,QAAOtwB,KAAK4W,WAAY5W,KAAKmY,QAA2B,IAAjBnY,KAAKoY,QA/IhDvD,EAAM4D,aAAe,aAmJrB,IAAI8X,GAAc,2DAKdC,GAAW,sKAEf,SAASC,GAAgB7yB,EAAO7J,GAC5B,IAGI07B,EACAiB,EACAC,EAiFmBC,EAAMzC,EACzB9Y,EAvFA1N,EAAW/J,EAEXtB,EAAQ,KAuDZ,OAlDI+yB,GAAWzxB,GACX+J,EAAW,CACP2Z,GAAK1jB,EAAMoxB,cACXl8B,EAAK8K,EAAMqxB,MACX5N,EAAKzjB,EAAMsxB,SAERha,EAAStX,IAChB+J,EAAW,GACP5T,EACA4T,EAAS5T,GAAO6J,EAEhB+J,EAASknB,aAAejxB,IAElBtB,EAAQi0B,GAAYh0B,KAAKqB,KACnC6xB,EAAqB,MAAbnzB,EAAM,IAAe,EAAI,EACjCqL,EAAW,CACPkX,EAAK,EACL/rB,EAAKgmB,EAAMxc,EA7xEZ,IA6xEmDmzB,EAClDrO,EAAKtI,EAAMxc,EA7xEZ,IA6xEmDmzB,EAClD78B,EAAKkmB,EAAMxc,EA7xEV,IA6xEiDmzB,EAClDl7B,EAAKukB,EAAMxc,EA7xEV,IA6xEiDmzB,EAClDnO,GAAKxI,EAAMwW,GAA8B,IAArBhzB,EA7xEd,KA6xE4CmzB,KAE5CnzB,EAAQk0B,GAASj0B,KAAKqB,KAChC6xB,EAAqB,MAAbnzB,EAAM,IAAe,EAAI,EACjCqL,EAAW,CACPkX,EAAIgS,GAASv0B,EAAM,GAAImzB,GACvBpO,EAAIwP,GAASv0B,EAAM,GAAImzB,GACvBtG,EAAI0H,GAASv0B,EAAM,GAAImzB,GACvB38B,EAAI+9B,GAASv0B,EAAM,GAAImzB,GACvBrO,EAAIyP,GAASv0B,EAAM,GAAImzB,GACvB78B,EAAIi+B,GAASv0B,EAAM,GAAImzB,GACvBl7B,EAAIs8B,GAASv0B,EAAM,GAAImzB,KAER,MAAZ9nB,EACPA,EAAW,GACgB,iBAAbA,IAA0B,SAAUA,GAAY,OAAQA,KA2CnDipB,EA1CSlH,GAAY/hB,EAASpG,MA0CxB4sB,EA1C+BzE,GAAY/hB,EAAS1B,IAA7E0qB,EA4CEC,EAAKha,WAAauX,EAAMvX,WAI9BuX,EAAQ4B,GAAgB5B,EAAOyC,GAC3BA,EAAKE,SAAS3C,GACd9Y,EAAM0b,GAA0BH,EAAMzC,KAEtC9Y,EAAM0b,GAA0B5C,EAAOyC,IACnC/B,cAAgBxZ,EAAIwZ,aACxBxZ,EAAIiK,QAAUjK,EAAIiK,QAGfjK,GAZI,CAACwZ,aAAc,EAAGvP,OAAQ,IA3CjC3X,EAAW,IACF2Z,GAAKqP,EAAQ9B,aACtBlnB,EAAS0Z,EAAIsP,EAAQrR,QAGzBoR,EAAM,IAAIlC,GAAS7mB,GAEf0nB,GAAWzxB,IAAU0X,EAAW1X,EAAO,aACvC8yB,EAAIrY,QAAUza,EAAMya,SAGjBqY,EAMX,SAASG,GAAUG,EAAKvB,GAIpB,IAAIpa,EAAM2b,GAAOrrB,WAAWqrB,EAAI5sB,QAAQ,IAAK,MAE7C,OAAQhH,MAAMiY,GAAO,EAAIA,GAAOoa,EAGpC,SAASsB,GAA0BH,EAAMzC,GACrC,IAAI9Y,EAAM,GAUV,OARAA,EAAIiK,OAAS6O,EAAMjlB,QAAU0nB,EAAK1nB,QACC,IAA9BilB,EAAM5lB,OAASqoB,EAAKroB,QACrBqoB,EAAKX,QAAQnoB,IAAIuN,EAAIiK,OAAQ,KAAK2R,QAAQ9C,MACxC9Y,EAAIiK,OAGVjK,EAAIwZ,cAAgBV,GAAUyC,EAAKX,QAAQnoB,IAAIuN,EAAIiK,OAAQ,KAEpDjK,EAsBX,SAAS6b,GAAYC,EAAWp+B,GAC5B,OAAO,SAAUyP,EAAK4uB,GAClB,IAASC,EAWT,OATe,OAAXD,GAAoBh0B,OAAOg0B,KAC3BpX,EAAgBjnB,EAAM,YAAcA,EAAQ,uDAAyDA,EAAO,kGAE5Gs+B,EAAM7uB,EAAKA,EAAM4uB,EAAQA,EAASC,GAKtCC,GAAYtxB,KADNywB,GADNjuB,EAAqB,iBAARA,GAAoBA,EAAMA,EACb4uB,GACHD,GAChBnxB,MAIf,SAASsxB,GAAajV,EAAK1U,EAAU4pB,EAAU9Y,GAC3C,IAAIoW,EAAelnB,EAASqnB,cACxBJ,EAAOU,GAAS3nB,EAASsnB,OACzB3P,EAASgQ,GAAS3nB,EAASunB,SAE1B7S,EAAIzF,YAKT6B,EAA+B,MAAhBA,GAA8BA,EAEzC6G,GACAe,GAAShE,EAAKhpB,GAAIgpB,EAAK,SAAWiD,EAASiS,GAE3C3C,GACA1P,GAAM7C,EAAK,OAAQhpB,GAAIgpB,EAAK,QAAUuS,EAAO2C,GAE7C1C,GACAxS,EAAIpF,GAAGiZ,QAAQ7T,EAAIpF,GAAGzB,UAAYqZ,EAAe0C,GAEjD9Y,GACA5D,EAAM4D,aAAa4D,EAAKuS,GAAQtP,IApFxCmR,GAAelwB,GAAKiuB,GAASp6B,UAC7Bq8B,GAAee,QAvVf,WACI,OAAOf,GAAejZ,MA6a1B,IAAI1P,GAAWopB,GAAY,EAAG,OAC1BO,GAAWP,IAAa,EAAG,YA0H/B,SAASQ,GAAWr2B,EAAGC,GAEnB,IAAIq2B,EAA0C,IAAvBr2B,EAAEiN,OAASlN,EAAEkN,SAAiBjN,EAAE4N,QAAU7N,EAAE6N,SAE/D0oB,EAASv2B,EAAE40B,QAAQnoB,IAAI6pB,EAAgB,UAc3C,QAASA,GAXLr2B,EAAIs2B,EAAS,GAGHt2B,EAAIs2B,IAAWA,EAFfv2B,EAAE40B,QAAQnoB,IAAI6pB,EAAiB,EAAG,YAMlCr2B,EAAIs2B,IAFJv2B,EAAE40B,QAAQnoB,IAAI6pB,EAAiB,EAAG,UAETC,MAIF,EA6FzC,SAASlc,GAAQ3hB,GACb,IAAI89B,EAEJ,YAAY77B,IAARjC,EACOiM,KAAKqY,QAAQqP,OAGC,OADrBmK,EAAgBjK,GAAU7zB,MAEtBiM,KAAKqY,QAAUwZ,GAEZ7xB,MApGf6U,EAAMid,cAAgB,uBACtBjd,EAAMkd,iBAAmB,yBAuGzB,IAAIC,GAAOtY,EACP,mJACA,SAAU3lB,GACN,YAAYiC,IAARjC,EACOiM,KAAKkc,aAELlc,KAAK0V,OAAO3hB,MAK/B,SAASmoB,KACL,OAAOlc,KAAKqY,QAShB,SAAS4Z,GAAMC,EAAUC,GACrB,OAAQD,EAAWC,EAAUA,GAAWA,EAG5C,SAASC,GAAiBvT,EAAGjsB,EAAGE,GAE5B,OAAI+rB,EAAI,KAAOA,GAAK,EAET,IAAI9hB,KAAK8hB,EAAI,IAAKjsB,EAAGE,GAXb,YAaR,IAAIiK,KAAK8hB,EAAGjsB,EAAGE,GAAG0iB,UAIjC,SAAS6c,GAAexT,EAAGjsB,EAAGE,GAE1B,OAAI+rB,EAAI,KAAOA,GAAK,EAET9hB,KAAK2kB,IAAI7C,EAAI,IAAKjsB,EAAGE,GArBb,YAuBRiK,KAAK2kB,IAAI7C,EAAGjsB,EAAGE,GAuK9B,SAASw/B,GAAwBz8B,EAAO7C,GACpC8oB,EAAe,EAAG,CAACjmB,EAAOA,EAAMiB,QAAS,EAAG9D,GA+DhD,SAASu/B,GAAqB30B,EAAOukB,EAAMC,EAASN,EAAKC,GACrD,IAAIyQ,EACJ,OAAa,MAAT50B,EACO2kB,GAAWviB,KAAM8hB,EAAKC,GAAKxZ,MAG9B4Z,GADJqQ,EAAc9P,GAAY9kB,EAAOkkB,EAAKC,MAElCI,EAAOqQ,GAEJC,GAAW9/B,KAAKqN,KAAMpC,EAAOukB,EAAMC,EAASN,EAAKC,IAIhE,SAAS0Q,GAAWrJ,EAAUjH,EAAMC,EAASN,EAAKC,GAC9C,IAAI2Q,EAAgBxQ,GAAmBkH,EAAUjH,EAAMC,EAASN,EAAKC,GACjE5kB,EAAOskB,GAAciR,EAAcnqB,KAAM,EAAGmqB,EAAchqB,WAK9D,OAHA1I,KAAKuI,KAAKpL,EAAKwkB,kBACf3hB,KAAKkJ,MAAM/L,EAAK2rB,eAChB9oB,KAAK7C,KAAKA,EAAK4rB,cACR/oB,KA5FX8b,EAAe,EAAG,CAAC,KAAM,GAAI,GAAG,WAC5B,OAAO9b,KAAKopB,WAAa,OAG7BtN,EAAe,EAAG,CAAC,KAAM,GAAI,GAAG,WAC5B,OAAO9b,KAAK8I,cAAgB,OAOhCwpB,GAAuB,OAAY,YACnCA,GAAuB,QAAY,YACnCA,GAAuB,OAAS,eAChCA,GAAuB,QAAS,eAIhC9X,EAAa,WAAY,MACzBA,EAAa,cAAe,MAI5BW,EAAgB,WAAY,GAC5BA,EAAgB,cAAe,GAK/ByC,GAAc,IAAUL,IACxBK,GAAc,IAAUL,IACxBK,GAAc,KAAUZ,EAAWJ,GACnCgB,GAAc,KAAUZ,EAAWJ,GACnCgB,GAAc,OAAUR,GAAWN,GACnCc,GAAc,OAAUR,GAAWN,GACnCc,GAAc,QAAUP,GAAWN,GACnCa,GAAc,QAAUP,GAAWN,GAEnCwB,GAAkB,CAAC,OAAQ,QAAS,OAAQ,UAAU,SAAU3gB,EAAOukB,EAAM3J,EAAQ3iB,GACjFssB,EAAKtsB,EAAMY,OAAO,EAAG,IAAMqiB,EAAMlb,MAGrC2gB,GAAkB,CAAC,KAAM,OAAO,SAAU3gB,EAAOukB,EAAM3J,EAAQ3iB,GAC3DssB,EAAKtsB,GAASgf,EAAMiK,kBAAkBlhB,MAqD1Cke,EAAe,IAAK,EAAG,KAAM,WAI7BtB,EAAa,UAAW,KAIxBW,EAAgB,UAAW,GAI3ByC,GAAc,IAAKjB,GACnB2B,GAAc,KAAK,SAAU1gB,EAAO+T,GAChCA,EAz8FQ,GAy8F4B,GAApBmH,EAAMlb,GAAS,MAWnCke,EAAe,IAAK,CAAC,KAAM,GAAI,KAAM,QAIrCtB,EAAa,OAAQ,KAGrBW,EAAgB,OAAQ,GAIxByC,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAC/BgB,GAAc,MAAM,SAAUE,EAAUpI,GAEpC,OAAOoI,EACJpI,EAAOid,yBAA2Bjd,EAAOkd,cAC1Cld,EAAOmd,kCAGbvU,GAAc,CAAC,IAAK,MAv+FT,GAw+FXA,GAAc,MAAM,SAAU1gB,EAAO+T,GACjCA,EAz+FO,GAy+FOmH,EAAMlb,EAAMtB,MAAM0gB,GAAW,OAK/C,IAAI8V,GAAmB9T,GAAW,QAAQ,GAI1ClD,EAAe,MAAO,CAAC,OAAQ,GAAI,OAAQ,aAI3CtB,EAAa,YAAa,OAG1BW,EAAgB,YAAa,GAI7ByC,GAAc,MAAQT,IACtBS,GAAc,OAAQf,GACtByB,GAAc,CAAC,MAAO,SAAS,SAAU1gB,EAAO+T,EAAO6G,GACnDA,EAAOsR,WAAahR,EAAMlb,MAc9Bke,EAAe,IAAK,CAAC,KAAM,GAAI,EAAG,UAIlCtB,EAAa,SAAU,KAIvBW,EAAgB,SAAU,IAI1ByC,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAC/B0B,GAAc,CAAC,IAAK,MA1hGP,GA8hGb,IAAIyU,GAAe/T,GAAW,WAAW,GAIzClD,EAAe,IAAK,CAAC,KAAM,GAAI,EAAG,UAIlCtB,EAAa,SAAU,KAIvBW,EAAgB,SAAU,IAI1ByC,GAAc,IAAMZ,GACpBY,GAAc,KAAMZ,EAAWJ,GAC/B0B,GAAc,CAAC,IAAK,MA/iGP,GAmjGb,IA+CIzoB,GA/CAm9B,GAAehU,GAAW,WAAW,GAgDzC,IA5CAlD,EAAe,IAAK,EAAG,GAAG,WACtB,SAAU9b,KAAKgJ,cAAgB,QAGnC8S,EAAe,EAAG,CAAC,KAAM,GAAI,GAAG,WAC5B,SAAU9b,KAAKgJ,cAAgB,OAGnC8S,EAAe,EAAG,CAAC,MAAO,GAAI,EAAG,eACjCA,EAAe,EAAG,CAAC,OAAQ,GAAI,GAAG,WAC9B,OAA4B,GAArB9b,KAAKgJ,iBAEhB8S,EAAe,EAAG,CAAC,QAAS,GAAI,GAAG,WAC/B,OAA4B,IAArB9b,KAAKgJ,iBAEhB8S,EAAe,EAAG,CAAC,SAAU,GAAI,GAAG,WAChC,OAA4B,IAArB9b,KAAKgJ,iBAEhB8S,EAAe,EAAG,CAAC,UAAW,GAAI,GAAG,WACjC,OAA4B,IAArB9b,KAAKgJ,iBAEhB8S,EAAe,EAAG,CAAC,WAAY,GAAI,GAAG,WAClC,OAA4B,IAArB9b,KAAKgJ,iBAEhB8S,EAAe,EAAG,CAAC,YAAa,GAAI,GAAG,WACnC,OAA4B,IAArB9b,KAAKgJ,iBAMhBwR,EAAa,cAAe,MAI5BW,EAAgB,cAAe,IAI/ByC,GAAc,IAAQT,GAAWR,GACjCiB,GAAc,KAAQT,GAAWP,GACjCgB,GAAc,MAAQT,GAAWN,GAG5BhnB,GAAQ,OAAQA,GAAMiB,QAAU,EAAGjB,IAAS,IAC7C+nB,GAAc/nB,GAAOynB,IAGzB,SAAS2V,GAAQr1B,EAAO+T,GACpBA,EAvmGc,GAumGOmH,EAAuB,KAAhB,KAAOlb,IAGvC,IAAK/H,GAAQ,IAAKA,GAAMiB,QAAU,EAAGjB,IAAS,IAC1CyoB,GAAczoB,GAAOo9B,IAIzB,IAAIC,GAAoBlU,GAAW,gBAAgB,GAInDlD,EAAe,IAAM,EAAG,EAAG,YAC3BA,EAAe,KAAM,EAAG,EAAG,YAY3B,IAAIqX,GAAQ5a,EAAOnkB,UAsFnB,SAASg/B,GAAoBh3B,GACzB,OAAOA,EArFX+2B,GAAMrrB,IAAoBA,GAC1BqrB,GAAMtN,SAjuBN,SAAqBwN,EAAMC,GAGvB,IAAIzf,EAAMwf,GAAQ3J,KACd6J,EAAMxD,GAAgBlc,EAAK7T,MAAMwzB,QAAQ,OACzC/tB,EAASoP,EAAM4e,eAAezzB,KAAMuzB,IAAQ,WAE5CrvB,EAASovB,IAAYrZ,EAAWqZ,EAAQ7tB,IAAW6tB,EAAQ7tB,GAAQ9S,KAAKqN,KAAM6T,GAAOyf,EAAQ7tB,IAEjG,OAAOzF,KAAKyF,OAAOvB,GAAUlE,KAAKkc,aAAa2J,SAASpgB,EAAQzF,KAAM0pB,GAAY7V,MAytBtFsf,GAAMlD,MAttBN,WACI,OAAO,IAAI1X,EAAOvY,OAstBtBmzB,GAAMhrB,KAvpBN,SAAevK,EAAOid,EAAO6Y,GACzB,IAAIC,EACAC,EACA1vB,EAEJ,IAAKlE,KAAK4W,UACN,OAAOY,IAKX,KAFAmc,EAAO5D,GAAgBnyB,EAAOoC,OAEpB4W,UACN,OAAOY,IAOX,OAJAoc,EAAoD,KAAvCD,EAAKvqB,YAAcpJ,KAAKoJ,aAErCyR,EAAQD,EAAeC,IAGnB,IAAK,OAAQ3W,EAASwtB,GAAU1xB,KAAM2zB,GAAQ,GAAI,MAClD,IAAK,QAASzvB,EAASwtB,GAAU1xB,KAAM2zB,GAAO,MAC9C,IAAK,UAAWzvB,EAASwtB,GAAU1xB,KAAM2zB,GAAQ,EAAG,MACpD,IAAK,SAAUzvB,GAAUlE,KAAO2zB,GAAQ,IAAK,MAC7C,IAAK,SAAUzvB,GAAUlE,KAAO2zB,GAAQ,IAAK,MAC7C,IAAK,OAAQzvB,GAAUlE,KAAO2zB,GAAQ,KAAM,MAC5C,IAAK,MAAOzvB,GAAUlE,KAAO2zB,EAAOC,GAAa,MAAO,MACxD,IAAK,OAAQ1vB,GAAUlE,KAAO2zB,EAAOC,GAAa,OAAQ,MAC1D,QAAS1vB,EAASlE,KAAO2zB,EAG7B,OAAOD,EAAUxvB,EAAS0U,EAAS1U,IAynBvCivB,GAAMU,MA5ZN,SAAgBhZ,GACZ,IAAIwY,EAEJ,QAAcr9B,KADd6kB,EAAQD,EAAeC,KACc,gBAAVA,IAA4B7a,KAAK4W,UACxD,OAAO5W,KAGX,IAAI8zB,EAAc9zB,KAAKmY,OAASka,GAAiBD,GAEjD,OAAQvX,GACJ,IAAK,OACDwY,EAAOS,EAAY9zB,KAAKuI,OAAS,EAAG,EAAG,GAAK,EAC5C,MACJ,IAAK,UACD8qB,EAAOS,EAAY9zB,KAAKuI,OAAQvI,KAAKkJ,QAAUlJ,KAAKkJ,QAAU,EAAI,EAAG,GAAK,EAC1E,MACJ,IAAK,QACDmqB,EAAOS,EAAY9zB,KAAKuI,OAAQvI,KAAKkJ,QAAU,EAAG,GAAK,EACvD,MACJ,IAAK,OACDmqB,EAAOS,EAAY9zB,KAAKuI,OAAQvI,KAAKkJ,QAASlJ,KAAK7C,OAAS6C,KAAKoiB,UAAY,GAAK,EAClF,MACJ,IAAK,UACDiR,EAAOS,EAAY9zB,KAAKuI,OAAQvI,KAAKkJ,QAASlJ,KAAK7C,QAAU6C,KAAK6I,aAAe,GAAK,GAAK,EAC3F,MACJ,IAAK,MACL,IAAK,OACDwqB,EAAOS,EAAY9zB,KAAKuI,OAAQvI,KAAKkJ,QAASlJ,KAAK7C,OAAS,GAAK,EACjE,MACJ,IAAK,OACDk2B,EAAOrzB,KAAKiX,GAAGzB,UACf6d,GA3GM,KA2GgBpB,GAAMoB,GAAQrzB,KAAKmY,OAAS,EA5G1C,IA4G8CnY,KAAKoJ,aA3GrD,MA2GkG,EACxG,MACJ,IAAK,SACDiqB,EAAOrzB,KAAKiX,GAAGzB,UACf6d,GAhHQ,IAgHgBpB,GAAMoB,EAhHtB,KAgH6C,EACrD,MACJ,IAAK,SACDA,EAAOrzB,KAAKiX,GAAGzB,UACf6d,GArHQ,IAqHgBpB,GAAMoB,EArHtB,KAqH6C,EAM7D,OAFArzB,KAAKiX,GAAGiZ,QAAQmD,GAChBxe,EAAM4D,aAAazY,MAAM,GAClBA,MAgXXmzB,GAAM1tB,OA/iBN,SAAiBsuB,GACRA,IACDA,EAAc/zB,KAAKswB,QAAUzb,EAAMkd,iBAAmBld,EAAMid,eAEhE,IAAI5tB,EAASiY,EAAanc,KAAM+zB,GAChC,OAAO/zB,KAAKkc,aAAa8X,WAAW9vB,IA2iBxCivB,GAAM5xB,KAxiBN,SAAe8xB,EAAMY,GACjB,OAAIj0B,KAAK4W,YACC8B,EAAS2a,IAASA,EAAKzc,WACxB8S,GAAY2J,GAAMzc,WAChB6Z,GAAe,CAACxqB,GAAIjG,KAAMuB,KAAM8xB,IAAO3d,OAAO1V,KAAK0V,UAAUwe,UAAUD,GAEvEj0B,KAAKkc,aAAaK,eAmiBjC4W,GAAMgB,QA/hBN,SAAkBF,GACd,OAAOj0B,KAAKuB,KAAKmoB,KAAeuK,IA+hBpCd,GAAMltB,GA5hBN,SAAaotB,EAAMY,GACf,OAAIj0B,KAAK4W,YACC8B,EAAS2a,IAASA,EAAKzc,WACxB8S,GAAY2J,GAAMzc,WAChB6Z,GAAe,CAAClvB,KAAMvB,KAAMiG,GAAIotB,IAAO3d,OAAO1V,KAAK0V,UAAUwe,UAAUD,GAEvEj0B,KAAKkc,aAAaK,eAuhBjC4W,GAAMiB,MAnhBN,SAAgBH,GACZ,OAAOj0B,KAAKiG,GAAGyjB,KAAeuK,IAmhBlCd,GAAM9/B,IAxiGN,SAAoBwnB,GAEhB,OAAIZ,EAAWja,KADf6a,EAAQD,EAAeC,KAEZ7a,KAAK6a,KAET7a,MAoiGXmzB,GAAMkB,UAxUN,WACI,OAAOze,EAAgB5V,MAAMiW,UAwUjCkd,GAAMlC,QA5tBN,SAAkBrzB,EAAOid,GACrB,IAAIyZ,EAAa5b,EAAS9a,GAASA,EAAQ8rB,GAAY9rB,GACvD,SAAMoC,KAAK4W,YAAa0d,EAAW1d,aAIrB,iBADdiE,EAAQD,EAAeC,IAAU,eAEtB7a,KAAKwV,UAAY8e,EAAW9e,UAE5B8e,EAAW9e,UAAYxV,KAAKiwB,QAAQuD,QAAQ3Y,GAAOrF,YAotBlE2d,GAAMrC,SAhtBN,SAAmBlzB,EAAOid,GACtB,IAAIyZ,EAAa5b,EAAS9a,GAASA,EAAQ8rB,GAAY9rB,GACvD,SAAMoC,KAAK4W,YAAa0d,EAAW1d,aAIrB,iBADdiE,EAAQD,EAAeC,IAAU,eAEtB7a,KAAKwV,UAAY8e,EAAW9e,UAE5BxV,KAAKiwB,QAAQ4D,MAAMhZ,GAAOrF,UAAY8e,EAAW9e,YAwsBhE2d,GAAMoB,UApsBN,SAAoBhzB,EAAM0E,EAAI4U,EAAO2Z,GACjC,IAAIC,EAAY/b,EAASnX,GAAQA,EAAOmoB,GAAYnoB,GAChDmzB,EAAUhc,EAASzS,GAAMA,EAAKyjB,GAAYzjB,GAC9C,SAAMjG,KAAK4W,WAAa6d,EAAU7d,WAAa8d,EAAQ9d,aAI5B,OAD3B4d,EAAcA,GAAe,MACT,GAAax0B,KAAKixB,QAAQwD,EAAW5Z,IAAU7a,KAAK8wB,SAAS2D,EAAW5Z,MACpE,MAAnB2Z,EAAY,GAAax0B,KAAK8wB,SAAS4D,EAAS7Z,IAAU7a,KAAKixB,QAAQyD,EAAS7Z,KA6rBzFsY,GAAMwB,OA1rBN,SAAiB/2B,EAAOid,GACpB,IACI+Z,EADAN,EAAa5b,EAAS9a,GAASA,EAAQ8rB,GAAY9rB,GAEvD,SAAMoC,KAAK4W,YAAa0d,EAAW1d,aAIrB,iBADdiE,EAAQD,EAAeC,IAAU,eAEtB7a,KAAKwV,YAAc8e,EAAW9e,WAErCof,EAAUN,EAAW9e,UACdxV,KAAKiwB,QAAQuD,QAAQ3Y,GAAOrF,WAAaof,GAAWA,GAAW50B,KAAKiwB,QAAQ4D,MAAMhZ,GAAOrF,aAgrBxG2d,GAAM0B,cA5qBN,SAAwBj3B,EAAOid,GAC3B,OAAO7a,KAAK20B,OAAO/2B,EAAOid,IAAU7a,KAAKixB,QAAQrzB,EAAOid,IA4qB5DsY,GAAM2B,eAzqBN,SAAyBl3B,EAAOid,GAC5B,OAAO7a,KAAK20B,OAAO/2B,EAAOid,IAAU7a,KAAK8wB,SAASlzB,EAAOid,IAyqB7DsY,GAAMvc,QAvVN,WACI,OAAOA,EAAQ5W,OAuVnBmzB,GAAMnB,KAAoBA,GAC1BmB,GAAMzd,OAAoBA,GAC1Byd,GAAMjX,WAAoBA,GAC1BiX,GAAM38B,IAAoB43B,GAC1B+E,GAAMz8B,IAAoBw3B,GAC1BiF,GAAM4B,aAzVN,WACI,OAAOxf,EAAO,GAAIK,EAAgB5V,QAyVtCmzB,GAAM7Y,IA9iGN,SAAoBO,EAAOpnB,GACvB,GAAqB,iBAAVonB,EAGP,IADA,IAAIma,EApTZ,SAA6BC,GACzB,IAAIpa,EAAQ,GACZ,IAAK,IAAIqa,KAAKD,EACVpa,EAAMviB,KAAK,CAACmiB,KAAMya,EAAG9Z,SAAUF,EAAWga,KAK9C,OAHAra,EAAM1a,MAAK,SAAU9E,EAAGC,GACpB,OAAOD,EAAE+f,SAAW9f,EAAE8f,YAEnBP,EA4Sesa,CADlBta,EAAQC,EAAqBD,IAEpBroB,EAAI,EAAGA,EAAIwiC,EAAYl+B,OAAQtE,IACpCwN,KAAKg1B,EAAYxiC,GAAGioB,MAAMI,EAAMma,EAAYxiC,GAAGioB,YAInD,GAAIR,EAAWja,KADf6a,EAAQD,EAAeC,KAEnB,OAAO7a,KAAK6a,GAAOpnB,GAG3B,OAAOuM,MAkiGXmzB,GAAMK,QAleN,SAAkB3Y,GACd,IAAIwY,EAEJ,QAAcr9B,KADd6kB,EAAQD,EAAeC,KACc,gBAAVA,IAA4B7a,KAAK4W,UACxD,OAAO5W,KAGX,IAAI8zB,EAAc9zB,KAAKmY,OAASka,GAAiBD,GAEjD,OAAQvX,GACJ,IAAK,OACDwY,EAAOS,EAAY9zB,KAAKuI,OAAQ,EAAG,GACnC,MACJ,IAAK,UACD8qB,EAAOS,EAAY9zB,KAAKuI,OAAQvI,KAAKkJ,QAAUlJ,KAAKkJ,QAAU,EAAG,GACjE,MACJ,IAAK,QACDmqB,EAAOS,EAAY9zB,KAAKuI,OAAQvI,KAAKkJ,QAAS,GAC9C,MACJ,IAAK,OACDmqB,EAAOS,EAAY9zB,KAAKuI,OAAQvI,KAAKkJ,QAASlJ,KAAK7C,OAAS6C,KAAKoiB,WACjE,MACJ,IAAK,UACDiR,EAAOS,EAAY9zB,KAAKuI,OAAQvI,KAAKkJ,QAASlJ,KAAK7C,QAAU6C,KAAK6I,aAAe,IACjF,MACJ,IAAK,MACL,IAAK,OACDwqB,EAAOS,EAAY9zB,KAAKuI,OAAQvI,KAAKkJ,QAASlJ,KAAK7C,QACnD,MACJ,IAAK,OACDk2B,EAAOrzB,KAAKiX,GAAGzB,UACf6d,GAAQpB,GAAMoB,GAAQrzB,KAAKmY,OAAS,EA5D5B,IA4DgCnY,KAAKoJ,aA3DvC,MA4DN,MACJ,IAAK,SACDiqB,EAAOrzB,KAAKiX,GAAGzB,UACf6d,GAAQpB,GAAMoB,EAhEN,KAiER,MACJ,IAAK,SACDA,EAAOrzB,KAAKiX,GAAGzB,UACf6d,GAAQpB,GAAMoB,EArEN,KA2EhB,OAFArzB,KAAKiX,GAAGiZ,QAAQmD,GAChBxe,EAAM4D,aAAazY,MAAM,GAClBA,MAsbXmzB,GAAM1B,SAAoBA,GAC1B0B,GAAMiC,QAxXN,WACI,IAAIxiC,EAAIoN,KACR,MAAO,CAACpN,EAAE2V,OAAQ3V,EAAEsW,QAAStW,EAAEuK,OAAQvK,EAAE+V,OAAQ/V,EAAEqW,SAAUrW,EAAEmW,SAAUnW,EAAEoW,gBAuX/EmqB,GAAMkC,SApXN,WACI,IAAIziC,EAAIoN,KACR,MAAO,CACHyuB,MAAO77B,EAAE2V,OACT+W,OAAQ1sB,EAAEsW,QACV/L,KAAMvK,EAAEuK,OACR0nB,MAAOjyB,EAAEiyB,QACTE,QAASnyB,EAAEmyB,UACXG,QAAStyB,EAAEsyB,UACX2J,aAAcj8B,EAAEi8B,iBA4WxBsE,GAAMprB,OA9XN,WACI,OAAO,IAAIhL,KAAKiD,KAAKwV,YA8XzB2d,GAAMvqB,YArnBN,SAAqB0sB,GACjB,IAAKt1B,KAAK4W,UACN,OAAO,KAEX,IAAIhR,GAAqB,IAAf0vB,EACN1iC,EAAIgT,EAAM5F,KAAKiwB,QAAQrqB,MAAQ5F,KACnC,OAAIpN,EAAE2V,OAAS,GAAK3V,EAAE2V,OAAS,KACpB4T,EAAavpB,EAAGgT,EAAM,iCAAmC,gCAEhEqU,EAAWld,KAAK3I,UAAUwU,aAEtBhD,EACO5F,KAAK+H,SAASa,cAEd,IAAI7L,KAAKiD,KAAKwV,UAA+B,GAAnBxV,KAAKoJ,YAAmB,KAAMR,cAAcxE,QAAQ,IAAK+X,EAAavpB,EAAG,MAG3GupB,EAAavpB,EAAGgT,EAAM,+BAAiC,+BAqmBlEutB,GAAMoC,QA5lBN,WACI,IAAKv1B,KAAK4W,UACN,MAAO,qBAAuB5W,KAAK+X,GAAK,OAE5C,IAAIkE,EAAO,SACPuZ,EAAO,GACNx1B,KAAKy1B,YACNxZ,EAA4B,IAArBjc,KAAKoJ,YAAoB,aAAe,mBAC/CosB,EAAO,KAEX,IAAIE,EAAS,IAAMzZ,EAAO,MACtB1T,EAAQ,GAAKvI,KAAKuI,QAAUvI,KAAKuI,QAAU,KAAQ,OAAS,SAE5DotB,EAASH,EAAO,OAEpB,OAAOx1B,KAAKyF,OAAOiwB,EAASntB,EAHb,wBAG+BotB,IA8kBlDxC,GAAMyC,OA3WN,WAEI,OAAO51B,KAAK4W,UAAY5W,KAAK4I,cAAgB,MA0WjDuqB,GAAMn3B,SA5nBN,WACI,OAAOgE,KAAKiwB,QAAQva,OAAO,MAAMjQ,OAAO,qCA4nB5C0tB,GAAM0C,KAvYN,WACI,OAAOt/B,KAAKiS,MAAMxI,KAAKwV,UAAY,MAuYvC2d,GAAM3d,QA5YN,WACI,OAAOxV,KAAKiX,GAAGzB,UAAmC,KAArBxV,KAAKoY,SAAW,IA4YjD+a,GAAM2C,aA9VN,WACI,MAAO,CACHl4B,MAAOoC,KAAK+X,GACZtS,OAAQzF,KAAKgY,GACbtC,OAAQ1V,KAAKqY,QACb2V,MAAOhuB,KAAKmY,OACZxI,OAAQ3P,KAAKoX,UAyVrB+b,GAAM5qB,KAAawW,GACnBoU,GAAMvU,WAvmGN,WACI,OAAOA,GAAW5e,KAAKuI,SAumG3B4qB,GAAM/J,SApSN,SAAyBxrB,GACrB,OAAO20B,GAAqB5/B,KAAKqN,KACzBpC,EACAoC,KAAKmiB,OACLniB,KAAKoiB,UACLpiB,KAAKkc,aAAayN,MAAM7H,IACxB9hB,KAAKkc,aAAayN,MAAM5H,MA+RpCoR,GAAMrqB,YA5RN,SAA4BlL,GACxB,OAAO20B,GAAqB5/B,KAAKqN,KACzBpC,EAAOoC,KAAKqJ,UAAWrJ,KAAK6I,aAAc,EAAG,IA2RzDsqB,GAAMhqB,QAAUgqB,GAAMzE,SAnOtB,SAAwB9wB,GACpB,OAAgB,MAATA,EAAgBrH,KAAK+R,MAAMtI,KAAKkJ,QAAU,GAAK,GAAKlJ,KAAKkJ,MAAoB,GAAbtL,EAAQ,GAASoC,KAAKkJ,QAAU,IAmO3GiqB,GAAMjqB,MAAcqX,GACpB4S,GAAMhU,YAz1FN,WACI,OAAOA,GAAYnf,KAAKuI,OAAQvI,KAAKkJ,UAy1FzCiqB,GAAMhR,KAAiBgR,GAAMxE,MAznF7B,SAAqB/wB,GACjB,IAAIukB,EAAOniB,KAAKkc,aAAaiG,KAAKniB,MAClC,OAAgB,MAATpC,EAAgBukB,EAAOniB,KAAK8H,IAAqB,GAAhBlK,EAAQukB,GAAW,MAwnF/DgR,GAAM9pB,QAAiB8pB,GAAM4C,SArnF7B,SAAwBn4B,GACpB,IAAIukB,EAAOI,GAAWviB,KAAM,EAAG,GAAGmiB,KAClC,OAAgB,MAATvkB,EAAgBukB,EAAOniB,KAAK8H,IAAqB,GAAhBlK,EAAQukB,GAAW,MAonF/DgR,GAAMzQ,YAzRN,WACI,IAAIsT,EAAWh2B,KAAKkc,aAAayN,MACjC,OAAOjH,GAAY1iB,KAAKuI,OAAQytB,EAASlU,IAAKkU,EAASjU,MAwR3DoR,GAAM8C,eA9RN,WACI,OAAOvT,GAAY1iB,KAAKuI,OAAQ,EAAG,IA8RvC4qB,GAAMh2B,KAAa21B,GACnBK,GAAM1qB,IAAa0qB,GAAMvE,KA55EzB,SAA0BhxB,GACtB,IAAKoC,KAAK4W,UACN,OAAgB,MAAThZ,EAAgBoC,KAAOwX,IAElC,IAAI/O,EAAMzI,KAAKmY,OAASnY,KAAKiX,GAAGgL,YAAcjiB,KAAKiX,GAAGgT,SACtD,OAAa,MAATrsB,GACAA,EAjKR,SAAsBA,EAAO8X,GACzB,MAAqB,iBAAV9X,EACAA,EAGNR,MAAMQ,GAKU,iBADrBA,EAAQ8X,EAAO2N,cAAczlB,IAElBA,EAGJ,KARI8H,SAAS9H,EAAO,IA2Jfs4B,CAAat4B,EAAOoC,KAAKkc,cAC1Blc,KAAK8H,IAAIlK,EAAQ6K,EAAK,MAEtBA,GAo5Ef0qB,GAAM/Q,QAh5EN,SAAgCxkB,GAC5B,IAAKoC,KAAK4W,UACN,OAAgB,MAAThZ,EAAgBoC,KAAOwX,IAElC,IAAI4K,GAAWpiB,KAAKyI,MAAQ,EAAIzI,KAAKkc,aAAayN,MAAM7H,KAAO,EAC/D,OAAgB,MAATlkB,EAAgBwkB,EAAUpiB,KAAK8H,IAAIlK,EAAQwkB,EAAS,MA44E/D+Q,GAAMtqB,WAz4EN,SAA6BjL,GACzB,IAAKoC,KAAK4W,UACN,OAAgB,MAAThZ,EAAgBoC,KAAOwX,IAOlC,GAAa,MAAT5Z,EAAe,CACf,IAAIwkB,EAzKZ,SAAyBxkB,EAAO8X,GAC5B,MAAqB,iBAAV9X,EACA8X,EAAO2N,cAAczlB,GAAS,GAAK,EAEvCR,MAAMQ,GAAS,KAAOA,EAqKXu4B,CAAgBv4B,EAAOoC,KAAKkc,cAC1C,OAAOlc,KAAKyI,IAAIzI,KAAKyI,MAAQ,EAAI2Z,EAAUA,EAAU,GAErD,OAAOpiB,KAAKyI,OAAS,GA63E7B0qB,GAAMzqB,UApLN,SAA0B9K,GACtB,IAAI8K,EAAYnS,KAAKg5B,OAAOvvB,KAAKiwB,QAAQuD,QAAQ,OAASxzB,KAAKiwB,QAAQuD,QAAQ,SAAW,OAAS,EACnG,OAAgB,MAAT51B,EAAgB8K,EAAY1I,KAAK8H,IAAKlK,EAAQ8K,EAAY,MAmLrEyqB,GAAMxqB,KAAOwqB,GAAMtO,MAAQc,GAC3BwN,GAAMlqB,OAASkqB,GAAMpO,QAAUgO,GAC/BI,GAAMpqB,OAASoqB,GAAMjO,QAAU8N,GAC/BG,GAAMnqB,YAAcmqB,GAAMtE,aAAeqE,GACzCC,GAAM/pB,UAxkCN,SAAuBxL,EAAOw4B,EAAeC,GACzC,IACIC,EADAhgC,EAAS0J,KAAKoY,SAAW,EAE7B,IAAKpY,KAAK4W,UACN,OAAgB,MAAThZ,EAAgBoC,KAAOwX,IAElC,GAAa,MAAT5Z,EAAe,CACf,GAAqB,iBAAVA,GAEP,GAAc,QADdA,EAAQ8xB,GAAiBjS,GAAkB7f,IAEvC,OAAOoC,UAEJzJ,KAAK4V,IAAIvO,GAAS,KAAOy4B,IAChCz4B,GAAgB,IAmBpB,OAjBKoC,KAAKmY,QAAUie,IAChBE,EAAclG,GAAcpwB,OAEhCA,KAAKoY,QAAUxa,EACfoC,KAAKmY,QAAS,EACK,MAAfme,GACAt2B,KAAK8H,IAAIwuB,EAAa,KAEtBhgC,IAAWsH,KACNw4B,GAAiBp2B,KAAKu2B,kBACvBjF,GAAYtxB,KAAMywB,GAAe7yB,EAAQtH,EAAQ,KAAM,GAAG,GAClD0J,KAAKu2B,oBACbv2B,KAAKu2B,mBAAoB,EACzB1hB,EAAM4D,aAAazY,MAAM,GACzBA,KAAKu2B,kBAAoB,OAG1Bv2B,KAEP,OAAOA,KAAKmY,OAAS7hB,EAAS85B,GAAcpwB,OAuiCpDmzB,GAAMvtB,IArhCN,SAAyBwwB,GACrB,OAAOp2B,KAAKoJ,UAAU,EAAGgtB,IAqhC7BjD,GAAMhD,MAlhCN,SAA2BiG,GASvB,OARIp2B,KAAKmY,SACLnY,KAAKoJ,UAAU,EAAGgtB,GAClBp2B,KAAKmY,QAAS,EAEVie,GACAp2B,KAAKyxB,SAASrB,GAAcpwB,MAAO,MAGpCA,MA0gCXmzB,GAAMqD,UAvgCN,WACI,GAAiB,MAAbx2B,KAAKkY,KACLlY,KAAKoJ,UAAUpJ,KAAKkY,MAAM,GAAO,QAC9B,GAAuB,iBAAZlY,KAAK+X,GAAiB,CACpC,IAAI0e,EAAQ/G,GAAiBlS,GAAaxd,KAAK+X,IAClC,MAAT0e,EACAz2B,KAAKoJ,UAAUqtB,GAGfz2B,KAAKoJ,UAAU,GAAG,GAG1B,OAAOpJ,MA4/BXmzB,GAAMuD,qBAz/BN,SAA+B94B,GAC3B,QAAKoC,KAAK4W,YAGVhZ,EAAQA,EAAQ8rB,GAAY9rB,GAAOwL,YAAc,GAEzCpJ,KAAKoJ,YAAcxL,GAAS,IAAO,IAo/B/Cu1B,GAAMwD,MAj/BN,WACI,OACI32B,KAAKoJ,YAAcpJ,KAAKiwB,QAAQ/mB,MAAM,GAAGE,aACzCpJ,KAAKoJ,YAAcpJ,KAAKiwB,QAAQ/mB,MAAM,GAAGE,aA++BjD+pB,GAAMsC,QAt9BN,WACI,QAAOz1B,KAAK4W,YAAa5W,KAAKmY,QAs9BlCgb,GAAMyD,YAn9BN,WACI,QAAO52B,KAAK4W,WAAY5W,KAAKmY,QAm9BjCgb,GAAM7C,MAAuBA,GAC7B6C,GAAMnF,MAAuBsC,GAC7B6C,GAAM0D,SA9EN,WACI,OAAO72B,KAAKmY,OAAS,MAAQ,IA8EjCgb,GAAM2D,SA3EN,WACI,OAAO92B,KAAKmY,OAAS,6BAA+B,IA2ExDgb,GAAM4D,MAASrd,EAAU,kDAAmDoZ,IAC5EK,GAAM7T,OAAS5F,EAAU,mDAAoD6G,IAC7E4S,GAAM1E,MAAS/U,EAAU,iDAAkDqF,IAC3EoU,GAAMqC,KAAS9b,EAAU,4GAjjCzB,SAAqB9b,EAAOw4B,GACxB,OAAa,MAATx4B,GACqB,iBAAVA,IACPA,GAASA,GAGboC,KAAKoJ,UAAUxL,EAAOw4B,GAEfp2B,OAECA,KAAKoJ,eAwiCrB+pB,GAAM6D,aAAetd,EAAU,2GAr/B/B,WACI,IAAKzE,EAAYjV,KAAKi3B,eAClB,OAAOj3B,KAAKi3B,cAGhB,IAAIpkC,EAAI,GAKR,GAHA+kB,EAAW/kB,EAAGmN,OACdnN,EAAIu6B,GAAcv6B,IAEZ6rB,GAAI,CACN,IAAIyP,EAAQt7B,EAAEslB,OAAS1C,EAAU5iB,EAAE6rB,IAAMgL,GAAY72B,EAAE6rB,IACvD1e,KAAKi3B,cAAgBj3B,KAAK4W,WACtBqC,EAAcpmB,EAAE6rB,GAAIyP,EAAMiH,WAAa,OAE3Cp1B,KAAKi3B,eAAgB,EAGzB,OAAOj3B,KAAKi3B,iBAi/BhB,IAAIC,GAAU7c,EAAOjmB,UAiCrB,SAAS+iC,GAAO1xB,EAAQpL,EAAO+8B,EAAOC,GAClC,IAAI3hB,EAASkS,KACThiB,EAAM6P,IAAY6E,IAAI+c,EAAQh9B,GAClC,OAAOqb,EAAO0hB,GAAOxxB,EAAKH,GAG9B,SAAS6xB,GAAgB7xB,EAAQpL,EAAO+8B,GAQpC,GAPIliB,EAASzP,KACTpL,EAAQoL,EACRA,OAASzP,GAGbyP,EAASA,GAAU,GAEN,MAATpL,EACA,OAAO88B,GAAM1xB,EAAQpL,EAAO+8B,EAAO,SAGvC,IAAI5kC,EACA4F,EAAM,GACV,IAAK5F,EAAI,EAAGA,EAAI,GAAIA,IAChB4F,EAAI5F,GAAK2kC,GAAM1xB,EAAQjT,EAAG4kC,EAAO,SAErC,OAAOh/B,EAWX,SAASm/B,GAAkBC,EAAc/xB,EAAQpL,EAAO+8B,GACxB,kBAAjBI,GACHtiB,EAASzP,KACTpL,EAAQoL,EACRA,OAASzP,GAGbyP,EAASA,GAAU,KAGnBpL,EADAoL,EAAS+xB,EAETA,GAAe,EAEXtiB,EAASzP,KACTpL,EAAQoL,EACRA,OAASzP,GAGbyP,EAASA,GAAU,IAGvB,IAOIjT,EAPAkjB,EAASkS,KACT1pB,EAAQs5B,EAAe9hB,EAAOiU,MAAM7H,IAAM,EAE9C,GAAa,MAATznB,EACA,OAAO88B,GAAM1xB,GAASpL,EAAQ6D,GAAS,EAAGk5B,EAAO,OAIrD,IAAIh/B,EAAM,GACV,IAAK5F,EAAI,EAAGA,EAAI,EAAGA,IACf4F,EAAI5F,GAAK2kC,GAAM1xB,GAASjT,EAAI0L,GAAS,EAAGk5B,EAAO,OAEnD,OAAOh/B,EAlGX8+B,GAAQrR,SAzgHR,SAAmB9xB,EAAKsoB,EAAKxI,GACzB,IAAI3P,EAASlE,KAAKy3B,UAAU1jC,IAAQiM,KAAKy3B,UAAoB,SAC7D,OAAOxd,EAAW/V,GAAUA,EAAOvR,KAAK0pB,EAAKxI,GAAO3P,GAwgHxDgzB,GAAQza,eA5/GR,SAAyB1oB,GACrB,IAAI0R,EAASzF,KAAK03B,gBAAgB3jC,GAC9B4jC,EAAc33B,KAAK03B,gBAAgB3jC,EAAI+M,eAE3C,OAAI2E,IAAWkyB,EACJlyB,GAGXzF,KAAK03B,gBAAgB3jC,GAAO4jC,EAAYvzB,QAAQ,oBAAoB,SAAU5B,GAC1E,OAAOA,EAAIpC,MAAM,MAGdJ,KAAK03B,gBAAgB3jC,KAi/GhCmjC,GAAQ3a,YA5+GR,WACI,OAAOvc,KAAK43B,cA4+GhBV,GAAQlb,QAt+GR,SAAkBnD,GACd,OAAO7Y,KAAK63B,SAASzzB,QAAQ,KAAMyU,IAs+GvCqe,GAAQ7J,SAAkB+F,GAC1B8D,GAAQlD,WAAkBZ,GAC1B8D,GAAQvQ,aAp9GR,SAAuB9N,EAAQob,EAAe73B,EAAQ07B,GAClD,IAAI5zB,EAASlE,KAAK+3B,cAAc37B,GAChC,OAAQ6d,EAAW/V,GACfA,EAAO2U,EAAQob,EAAe73B,EAAQ07B,GACtC5zB,EAAOE,QAAQ,MAAOyU,IAi9G9Bqe,GAAQc,WA98GR,SAAqB7vB,EAAMjE,GACvB,IAAIuB,EAASzF,KAAK+3B,cAAc5vB,EAAO,EAAI,SAAW,QACtD,OAAO8R,EAAWxU,GAAUA,EAAOvB,GAAUuB,EAAOrB,QAAQ,MAAOF,IA68GvEgzB,GAAQ5c,IA7lHR,SAAc9B,GACV,IAAIX,EAAMrlB,EACV,IAAKA,KAAKgmB,EAEFyB,EADJpC,EAAOW,EAAOhmB,IAEVwN,KAAKxN,GAAKqlB,EAEV7X,KAAK,IAAMxN,GAAKqlB,EAGxB7X,KAAK+nB,QAAUvP,EAIfxY,KAAK6yB,+BAAiC,IAAIzrB,QACrCpH,KAAK2yB,wBAAwB78B,QAAUkK,KAAK4yB,cAAc98B,QACvD,IAAM,UAAYA,SA+kH9BohC,GAAQ5X,OAxhGR,SAAuB1sB,EAAG6S,GACtB,OAAK7S,EAIEsJ,EAAQ8D,KAAKkvB,SAAWlvB,KAAKkvB,QAAQt8B,EAAEsW,SAC1ClJ,KAAKkvB,SAASlvB,KAAKkvB,QAAQ+I,UAAYvY,IAAkBhkB,KAAK+J,GAAU,SAAW,cAAc7S,EAAEsW,SAJ5FhN,EAAQ8D,KAAKkvB,SAAWlvB,KAAKkvB,QAChClvB,KAAKkvB,QAAoB,YAshGrCgI,GAAQ7X,YA/gGR,SAA4BzsB,EAAG6S,GAC3B,OAAK7S,EAIEsJ,EAAQ8D,KAAKk4B,cAAgBl4B,KAAKk4B,aAAatlC,EAAEsW,SACpDlJ,KAAKk4B,aAAaxY,GAAiBhkB,KAAK+J,GAAU,SAAW,cAAc7S,EAAEsW,SAJtEhN,EAAQ8D,KAAKk4B,cAAgBl4B,KAAKk4B,aACrCl4B,KAAKk4B,aAAyB,YA6gG1ChB,GAAQzX,YA99FR,SAA4BK,EAAWra,EAAQkK,GAC3C,IAAInd,EAAG6pB,EAAKhgB,EAEZ,GAAI2D,KAAKm4B,kBACL,OAAOtY,GAAkBltB,KAAKqN,KAAM8f,EAAWra,EAAQkK,GAY3D,IATK3P,KAAKkgB,eACNlgB,KAAKkgB,aAAe,GACpBlgB,KAAKmgB,iBAAmB,GACxBngB,KAAKogB,kBAAoB,IAMxB5tB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAYrB,GAVA6pB,EAAM5G,EAAU,CAAC,IAAMjjB,IACnBmd,IAAW3P,KAAKmgB,iBAAiB3tB,KACjCwN,KAAKmgB,iBAAiB3tB,GAAK,IAAI4U,OAAO,IAAMpH,KAAKsf,OAAOjD,EAAK,IAAIjY,QAAQ,IAAK,IAAM,IAAK,KACzFpE,KAAKogB,kBAAkB5tB,GAAK,IAAI4U,OAAO,IAAMpH,KAAKqf,YAAYhD,EAAK,IAAIjY,QAAQ,IAAK,IAAM,IAAK,MAE9FuL,GAAW3P,KAAKkgB,aAAa1tB,KAC9B6J,EAAQ,IAAM2D,KAAKsf,OAAOjD,EAAK,IAAM,KAAOrc,KAAKqf,YAAYhD,EAAK,IAClErc,KAAKkgB,aAAa1tB,GAAK,IAAI4U,OAAO/K,EAAM+H,QAAQ,IAAK,IAAK,MAG1DuL,GAAqB,SAAXlK,GAAqBzF,KAAKmgB,iBAAiB3tB,GAAGkJ,KAAKokB,GAC7D,OAAOttB,EACJ,GAAImd,GAAqB,QAAXlK,GAAoBzF,KAAKogB,kBAAkB5tB,GAAGkJ,KAAKokB,GACpE,OAAOttB,EACJ,IAAKmd,GAAU3P,KAAKkgB,aAAa1tB,GAAGkJ,KAAKokB,GAC5C,OAAOttB,IA87FnB0kC,GAAQ1X,YA33FR,SAAsB1B,GAClB,OAAI9d,KAAKm4B,mBACA7iB,EAAWtV,KAAM,iBAClB0gB,GAAmB/tB,KAAKqN,MAExB8d,EACO9d,KAAKihB,mBAELjhB,KAAK+gB,eAGXzL,EAAWtV,KAAM,kBAClBA,KAAK+gB,aAAeN,IAEjBzgB,KAAKihB,oBAAsBnD,EAC9B9d,KAAKihB,mBAAqBjhB,KAAK+gB,eA62F3CmW,GAAQ3X,iBAh5FR,SAA2BzB,GACvB,OAAI9d,KAAKm4B,mBACA7iB,EAAWtV,KAAM,iBAClB0gB,GAAmB/tB,KAAKqN,MAExB8d,EACO9d,KAAKkhB,wBAELlhB,KAAKghB,oBAGX1L,EAAWtV,KAAM,uBAClBA,KAAKghB,kBAAoBR,IAEtBxgB,KAAKkhB,yBAA2BpD,EACnC9d,KAAKkhB,wBAA0BlhB,KAAKghB,oBAk4FhDkW,GAAQ/U,KAxsFR,SAAqB9F,GACjB,OAAOkG,GAAWlG,EAAKrc,KAAK2pB,MAAM7H,IAAK9hB,KAAK2pB,MAAM5H,KAAKI,MAwsF3D+U,GAAQkB,eA5rFR,WACI,OAAOp4B,KAAK2pB,MAAM5H,KA4rFtBmV,GAAQmB,eAjsFR,WACI,OAAOr4B,KAAK2pB,MAAM7H,KAksFtBoV,GAAQjU,SAplFR,SAAyBrwB,EAAG6S,GACxB,IAAIwd,EAAW/mB,EAAQ8D,KAAKs4B,WAAat4B,KAAKs4B,UAC1Ct4B,KAAKs4B,UAAW1lC,IAAW,IAANA,GAAcoN,KAAKs4B,UAAUL,SAASv8B,KAAK+J,GAAW,SAAW,cAC1F,OAAc,IAAN7S,EAAcgwB,GAAcK,EAAUjjB,KAAK2pB,MAAM7H,KACnD,EAAMmB,EAASrwB,EAAE6V,OAASwa,GAilFpCiU,GAAQnU,YAvkFR,SAA4BnwB,GACxB,OAAc,IAANA,EAAcgwB,GAAc5iB,KAAKu4B,aAAcv4B,KAAK2pB,MAAM7H,KAC5D,EAAM9hB,KAAKu4B,aAAa3lC,EAAE6V,OAASzI,KAAKu4B,cAskFlDrB,GAAQlU,cA9kFR,SAA8BpwB,GAC1B,OAAc,IAANA,EAAcgwB,GAAc5iB,KAAKw4B,eAAgBx4B,KAAK2pB,MAAM7H,KAC9D,EAAM9hB,KAAKw4B,eAAe5lC,EAAE6V,OAASzI,KAAKw4B,gBA6kFpDtB,GAAQ7T,cApgFR,SAA8BK,EAAaje,EAAQkK,GAC/C,IAAInd,EAAG6pB,EAAKhgB,EAEZ,GAAI2D,KAAKy4B,oBACL,OAAOhV,GAAoB9wB,KAAKqN,KAAM0jB,EAAaje,EAAQkK,GAU/D,IAPK3P,KAAK2jB,iBACN3jB,KAAK2jB,eAAiB,GACtB3jB,KAAK6jB,kBAAoB,GACzB7jB,KAAK4jB,oBAAsB,GAC3B5jB,KAAK04B,mBAAqB,IAGzBlmC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAcpB,GAXA6pB,EAAM5G,EAAU,CAAC,IAAM,IAAIhN,IAAIjW,GAC3Bmd,IAAW3P,KAAK04B,mBAAmBlmC,KACnCwN,KAAK04B,mBAAmBlmC,GAAK,IAAI4U,OAAO,IAAMpH,KAAKijB,SAAS5G,EAAK,IAAIjY,QAAQ,IAAK,QAAU,IAAK,KACjGpE,KAAK4jB,oBAAoBpxB,GAAK,IAAI4U,OAAO,IAAMpH,KAAKgjB,cAAc3G,EAAK,IAAIjY,QAAQ,IAAK,QAAU,IAAK,KACvGpE,KAAK6jB,kBAAkBrxB,GAAK,IAAI4U,OAAO,IAAMpH,KAAK+iB,YAAY1G,EAAK,IAAIjY,QAAQ,IAAK,QAAU,IAAK,MAElGpE,KAAK2jB,eAAenxB,KACrB6J,EAAQ,IAAM2D,KAAKijB,SAAS5G,EAAK,IAAM,KAAOrc,KAAKgjB,cAAc3G,EAAK,IAAM,KAAOrc,KAAK+iB,YAAY1G,EAAK,IACzGrc,KAAK2jB,eAAenxB,GAAK,IAAI4U,OAAO/K,EAAM+H,QAAQ,IAAK,IAAK,MAG5DuL,GAAqB,SAAXlK,GAAqBzF,KAAK04B,mBAAmBlmC,GAAGkJ,KAAKgoB,GAC/D,OAAOlxB,EACJ,GAAImd,GAAqB,QAAXlK,GAAoBzF,KAAK4jB,oBAAoBpxB,GAAGkJ,KAAKgoB,GACtE,OAAOlxB,EACJ,GAAImd,GAAqB,OAAXlK,GAAmBzF,KAAK6jB,kBAAkBrxB,GAAGkJ,KAAKgoB,GACnE,OAAOlxB,EACJ,IAAKmd,GAAU3P,KAAK2jB,eAAenxB,GAAGkJ,KAAKgoB,GAC9C,OAAOlxB,IAm+EnB0kC,GAAQ9T,cAr7ER,SAAwBtF,GACpB,OAAI9d,KAAKy4B,qBACAnjB,EAAWtV,KAAM,mBAClBikB,GAAqBtxB,KAAKqN,MAE1B8d,EACO9d,KAAKykB,qBAELzkB,KAAKskB,iBAGXhP,EAAWtV,KAAM,oBAClBA,KAAKskB,eAAiBR,IAEnB9jB,KAAKykB,sBAAwB3G,EAChC9d,KAAKykB,qBAAuBzkB,KAAKskB,iBAu6E7C4S,GAAQ/T,mBAl6ER,SAA6BrF,GACzB,OAAI9d,KAAKy4B,qBACAnjB,EAAWtV,KAAM,mBAClBikB,GAAqBtxB,KAAKqN,MAE1B8d,EACO9d,KAAK0kB,0BAEL1kB,KAAKukB,sBAGXjP,EAAWtV,KAAM,yBAClBA,KAAKukB,oBAAsBR,IAExB/jB,KAAK0kB,2BAA6B5G,EACrC9d,KAAK0kB,0BAA4B1kB,KAAKukB,sBAo5ElD2S,GAAQhU,iBA/4ER,SAA2BpF,GACvB,OAAI9d,KAAKy4B,qBACAnjB,EAAWtV,KAAM,mBAClBikB,GAAqBtxB,KAAKqN,MAE1B8d,EACO9d,KAAK2kB,wBAEL3kB,KAAKwkB,oBAGXlP,EAAWtV,KAAM,uBAClBA,KAAKwkB,kBAAoBR,IAEtBhkB,KAAK2kB,yBAA2B7G,EACnC9d,KAAK2kB,wBAA0B3kB,KAAKwkB,oBAk4EhD0S,GAAQ7R,KAtuER,SAAqBznB,GAGjB,MAAiD,OAAxCA,EAAQ,IAAI/C,cAAc89B,OAAO,IAouE9CzB,GAAQzgB,SAhuER,SAAyBoO,EAAOE,EAAS6T,GACrC,OAAI/T,EAAQ,GACD+T,EAAU,KAAO,KAEjBA,EAAU,KAAO,MAwzEhCjR,GAAmB,KAAM,CACrBjB,uBAAwB,uBACxB1K,QAAU,SAAUnD,GAChB,IAAIvd,EAAIud,EAAS,GAKjB,OAAOA,GAJoC,IAA7BC,EAAMD,EAAS,IAAM,IAAa,KACrC,IAANvd,EAAW,KACL,IAANA,EAAW,KACL,IAANA,EAAW,KAAO,SAO/BuZ,EAAMmd,KAAOtY,EAAU,wDAAyDiO,IAChF9S,EAAMgkB,SAAWnf,EAAU,gEAAiEkO,IAE5F,IAAIkR,GAAUviC,KAAK4V,IAmBnB,SAAS4sB,GAAepxB,EAAU/J,EAAOnK,EAAO09B,GAC5C,IAAIhD,EAAQsC,GAAe7yB,EAAOnK,GAMlC,OAJAkU,EAASqnB,eAAiBmC,EAAYhD,EAAMa,cAC5CrnB,EAASsnB,OAAiBkC,EAAYhD,EAAMc,MAC5CtnB,EAASunB,SAAiBiC,EAAYhD,EAAMe,QAErCvnB,EAASynB,UAapB,SAAS4J,GAASngB,GACd,OAAIA,EAAS,EACFtiB,KAAKiS,MAAMqQ,GAEXtiB,KAAK+R,KAAKuQ,GAmDzB,SAASogB,GAAcrK,GAGnB,OAAc,KAAPA,EAAc,OAGzB,SAASsK,GAAc5Z,GAEnB,OAAgB,OAATA,EAAkB,KAkD7B,SAAS6Z,GAAQxgC,GACb,OAAO,WACH,OAAOqH,KAAKo5B,GAAGzgC,IAIvB,IAAI0gC,GAAiBF,GAAO,MACxBG,GAAiBH,GAAO,KACxBI,GAAiBJ,GAAO,KACxBK,GAAiBL,GAAO,KACxBM,GAAiBN,GAAO,KACxBO,GAAiBP,GAAO,KACxBQ,GAAiBR,GAAO,KACxBS,GAAiBT,GAAO,KACxBU,GAAiBV,GAAO,KAW5B,SAASW,GAAW/mC,GAChB,OAAO,WACH,OAAOiN,KAAK4W,UAAY5W,KAAKmvB,MAAMp8B,GAAQykB,KAInD,IAAIqX,GAAeiL,GAAW,gBAC1B5U,GAAe4U,GAAW,WAC1B/U,GAAe+U,GAAW,WAC1BjV,GAAeiV,GAAW,SAC1BlL,GAAekL,GAAW,QAC1Bxa,GAAewa,GAAW,UAC1BrL,GAAeqL,GAAW,SAM1BvK,GAAQh5B,KAAKg5B,MACbwK,GAAa,CACbjT,GAAI,GACJvyB,EAAI,GACJ3B,EAAI,GACJwuB,EAAI,GACJtuB,EAAI,GACJuuB,EAAI,IAIR,SAAS2Y,GAAkB59B,EAAQyc,EAAQob,EAAe6D,EAAUpiB,GAChE,OAAOA,EAAOiR,aAAa9N,GAAU,IAAKob,EAAe73B,EAAQ07B,GAwErE,IAAImC,GAAQ1jC,KAAK4V,IAEjB,SAASsjB,GAAKhlB,GACV,OAASA,EAAI,IAAMA,EAAI,KAAQA,EAGnC,SAASyvB,KAQL,IAAKl6B,KAAK4W,UACN,OAAO5W,KAAKkc,aAAaK,cAG7B,IAGIwI,EAASF,EAHTK,EAAU+U,GAAMj6B,KAAKgvB,eAAiB,IACtCJ,EAAeqL,GAAMj6B,KAAKivB,OAC1B3P,EAAe2a,GAAMj6B,KAAKkvB,SAI9BnK,EAAoBnM,EAASsM,EAAU,IACvCL,EAAoBjM,EAASmM,EAAU,IACvCG,GAAW,GACXH,GAAW,GAQX,IAAIoV,EALKvhB,EAAS0G,EAAS,IAMvB+B,EALJ/B,GAAU,GAMN8a,EAAIxL,EACJxN,EAAIyD,EACJjyB,EAAImyB,EACJxwB,EAAI2wB,EAAUA,EAAQmV,QAAQ,GAAGj2B,QAAQ,SAAU,IAAM,GACzDuG,EAAQ3K,KAAKs5B,YAEjB,IAAK3uB,EAGD,MAAO,MAGX,IAAI2vB,EAAY3vB,EAAQ,EAAI,IAAM,GAC9B4vB,EAAS9K,GAAKzvB,KAAKkvB,WAAaO,GAAK9kB,GAAS,IAAM,GACpD6vB,EAAW/K,GAAKzvB,KAAKivB,SAAWQ,GAAK9kB,GAAS,IAAM,GACpD8vB,EAAUhL,GAAKzvB,KAAKgvB,iBAAmBS,GAAK9kB,GAAS,IAAM,GAE/D,OAAO2vB,EAAY,KACdH,EAAII,EAASJ,EAAI,IAAM,KACvB9Y,EAAIkZ,EAASlZ,EAAI,IAAM,KACvB+Y,EAAII,EAAWJ,EAAI,IAAM,KACxBhZ,GAAKxuB,GAAK2B,EAAK,IAAM,KACtB6sB,EAAIqZ,EAAUrZ,EAAI,IAAM,KACxBxuB,EAAI6nC,EAAU7nC,EAAI,IAAM,KACxB2B,EAAIkmC,EAAUlmC,EAAI,IAAM,IAGjC,IAAImmC,GAAUlM,GAASp6B,UAwGvB,OAtGAsmC,GAAQ9jB,QA5tDR,WACI,OAAO5W,KAAK6W,UA4tDhB6jB,GAAQvuB,IAxVR,WACI,IAAIpQ,EAAiBiE,KAAKmvB,MAa1B,OAXAnvB,KAAKgvB,cAAgB8J,GAAQ94B,KAAKgvB,eAClChvB,KAAKivB,MAAgB6J,GAAQ94B,KAAKivB,OAClCjvB,KAAKkvB,QAAgB4J,GAAQ94B,KAAKkvB,SAElCnzB,EAAK8yB,aAAgBiK,GAAQ/8B,EAAK8yB,cAClC9yB,EAAKmpB,QAAgB4T,GAAQ/8B,EAAKmpB,SAClCnpB,EAAKgpB,QAAgB+T,GAAQ/8B,EAAKgpB,SAClChpB,EAAK8oB,MAAgBiU,GAAQ/8B,EAAK8oB,OAClC9oB,EAAKujB,OAAgBwZ,GAAQ/8B,EAAKujB,QAClCvjB,EAAK0yB,MAAgBqK,GAAQ/8B,EAAK0yB,OAE3BzuB,MA2UX06B,GAAQ5yB,IA7TR,SAAgBlK,EAAOnK,GACnB,OAAOslC,GAAc/4B,KAAMpC,EAAOnK,EAAO,IA6T7CinC,GAAQjJ,SAzTR,SAAqB7zB,EAAOnK,GACxB,OAAOslC,GAAc/4B,KAAMpC,EAAOnK,GAAQ,IAyT9CinC,GAAQtB,GApPR,SAAave,GACT,IAAK7a,KAAK4W,UACN,OAAOY,IAEX,IAAIoX,EACAtP,EACAuP,EAAe7uB,KAAKgvB,cAIxB,GAAc,WAFdnU,EAAQD,EAAeC,KAEY,YAAVA,GAAiC,SAAVA,EAG5C,OAFA+T,EAAO5uB,KAAKivB,MAAQJ,EAAe,MACnCvP,EAAStf,KAAKkvB,QAAU+J,GAAarK,GAC7B/T,GACJ,IAAK,QAAW,OAAOyE,EACvB,IAAK,UAAW,OAAOA,EAAS,EAChC,IAAK,OAAW,OAAOA,EAAS,QAKpC,OADAsP,EAAO5uB,KAAKivB,MAAQ14B,KAAKg5B,MAAM2J,GAAal5B,KAAKkvB,UACzCrU,GACJ,IAAK,OAAW,OAAO+T,EAAO,EAAQC,EAAe,OACrD,IAAK,MAAW,OAAOD,EAAeC,EAAe,MACrD,IAAK,OAAW,OAAc,GAAPD,EAAeC,EAAe,KACrD,IAAK,SAAW,OAAc,KAAPD,EAAeC,EAAe,IACrD,IAAK,SAAW,OAAc,MAAPD,EAAeC,EAAe,IAErD,IAAK,cAAe,OAAOt4B,KAAKiS,MAAa,MAAPomB,GAAgBC,EACtD,QAAS,MAAM,IAAIl4B,MAAM,gBAAkBkkB,KAwNvD6f,GAAQrB,eAAiBA,GACzBqB,GAAQpB,UAAiBA,GACzBoB,GAAQnB,UAAiBA,GACzBmB,GAAQlB,QAAiBA,GACzBkB,GAAQjB,OAAiBA,GACzBiB,GAAQhB,QAAiBA,GACzBgB,GAAQf,SAAiBA,GACzBe,GAAQd,WAAiBA,GACzBc,GAAQb,QAAiBA,GACzBa,GAAQllB,QA3NR,WACI,OAAKxV,KAAK4W,UAIN5W,KAAKgvB,cACQ,MAAbhvB,KAAKivB,MACJjvB,KAAKkvB,QAAU,GAAM,OACK,QAA3BpW,EAAM9Y,KAAKkvB,QAAU,IANd1X,KA0NfkjB,GAAQtL,QAzTR,WACI,IAIIlK,EAASH,EAASF,EAAO4J,EAAOkM,EAJhC9L,EAAe7uB,KAAKgvB,cACpBJ,EAAe5uB,KAAKivB,MACpB3P,EAAetf,KAAKkvB,QACpBnzB,EAAeiE,KAAKmvB,MAwCxB,OAnCON,GAAgB,GAAKD,GAAQ,GAAKtP,GAAU,GAC1CuP,GAAgB,GAAKD,GAAQ,GAAKtP,GAAU,IACjDuP,GAAuD,MAAvCmK,GAAQE,GAAa5Z,GAAUsP,GAC/CA,EAAO,EACPtP,EAAS,GAKbvjB,EAAK8yB,aAAeA,EAAe,IAEnC3J,EAAoBtM,EAASiW,EAAe,KAC5C9yB,EAAKmpB,QAAeA,EAAU,GAE9BH,EAAoBnM,EAASsM,EAAU,IACvCnpB,EAAKgpB,QAAeA,EAAU,GAE9BF,EAAoBjM,EAASmM,EAAU,IACvChpB,EAAK8oB,MAAeA,EAAQ,GAE5B+J,GAAQhW,EAASiM,EAAQ,IAGzB8V,EAAiB/hB,EAASqgB,GAAarK,IACvCtP,GAAUqb,EACV/L,GAAQoK,GAAQE,GAAayB,IAG7BlM,EAAQ7V,EAAS0G,EAAS,IAC1BA,GAAU,GAEVvjB,EAAK6yB,KAASA,EACd7yB,EAAKujB,OAASA,EACdvjB,EAAK0yB,MAASA,EAEPzuB,MA8QX06B,GAAQzK,MAjMR,WACI,OAAOQ,GAAezwB,OAiM1B06B,GAAQrnC,IA9LR,SAAgBwnB,GAEZ,OADAA,EAAQD,EAAeC,GAChB7a,KAAK4W,UAAY5W,KAAK6a,EAAQ,OAASrD,KA6LlDkjB,GAAQ7L,aAAiBA,GACzB6L,GAAQxV,QAAiBA,GACzBwV,GAAQ3V,QAAiBA,GACzB2V,GAAQ7V,MAAiBA,GACzB6V,GAAQ9L,KAAiBA,GACzB8L,GAAQ/L,MAjLR,WACI,OAAO/V,EAAS5Y,KAAK4uB,OAAS,IAiLlC8L,GAAQpb,OAAiBA,GACzBob,GAAQjM,MAAiBA,GACzBiM,GAAQxG,SA3GR,SAAmB0G,GACf,IAAK56B,KAAK4W,UACN,OAAO5W,KAAKkc,aAAaK,cAG7B,IAAI7G,EAAS1V,KAAKkc,aACdhY,EA5DR,SAAyB22B,EAAgB5G,EAAeve,GACpD,IAAI/N,EAAW8oB,GAAeoK,GAAgB1uB,MAC1C+Y,EAAWqK,GAAM5nB,EAASyxB,GAAG,MAC7BrU,EAAWwK,GAAM5nB,EAASyxB,GAAG,MAC7BvU,EAAW0K,GAAM5nB,EAASyxB,GAAG,MAC7BxK,EAAWW,GAAM5nB,EAASyxB,GAAG,MAC7B9Z,EAAWiQ,GAAM5nB,EAASyxB,GAAG,MAC7B3K,EAAWc,GAAM5nB,EAASyxB,GAAG,MAE7B/9B,EAAI6pB,GAAW6U,GAAWjT,IAAM,CAAC,IAAK5B,IAClCA,EAAU6U,GAAWxlC,GAAO,CAAC,KAAM2wB,IACnCH,GAAW,GAAiB,CAAC,MAC7BA,EAAUgV,GAAWnnC,GAAO,CAAC,KAAMmyB,IACnCF,GAAW,GAAiB,CAAC,MAC7BA,EAAUkV,GAAW3Y,GAAO,CAAC,KAAMyD,IACnC+J,GAAW,GAAiB,CAAC,MAC7BA,EAAUmL,GAAWjnC,GAAO,CAAC,KAAM87B,IACnCtP,GAAW,GAAiB,CAAC,MAC7BA,EAAUya,GAAW1Y,GAAO,CAAC,KAAM/B,IACnCmP,GAAW,GAAiB,CAAC,MAAkB,CAAC,KAAMA,GAK9D,OAHApzB,EAAE,GAAK44B,EACP54B,EAAE,IAAMw/B,EAAiB,EACzBx/B,EAAE,GAAKqa,EACAskB,GAAkBllB,MAAM,KAAMzZ,GAoCxBy/B,CAAe96B,MAAO46B,EAAYllB,GAM/C,OAJIklB,IACA12B,EAASwR,EAAOsiB,YAAYh4B,KAAMkE,IAG/BwR,EAAOse,WAAW9vB,IAgG7Bw2B,GAAQ9xB,YAAiBsxB,GACzBQ,GAAQ1+B,SAAiBk+B,GACzBQ,GAAQ9E,OAAiBsE,GACzBQ,GAAQhlB,OAAiBA,GACzBglB,GAAQxe,WAAiBA,GAEzBwe,GAAQK,YAAcrhB,EAAU,sFAAuFwgB,IACvHQ,GAAQ1I,KAAOA,GAMflW,EAAe,IAAK,EAAG,EAAG,QAC1BA,EAAe,IAAK,EAAG,EAAG,WAI1B8B,GAAc,IAAKL,IACnBK,GAAc,IAlzHO,wBAmzHrBU,GAAc,KAAK,SAAU1gB,EAAO+T,EAAO6G,GACvCA,EAAOvB,GAAK,IAAIla,KAA6B,IAAxB4I,WAAW/H,EAAO,QAE3C0gB,GAAc,KAAK,SAAU1gB,EAAO+T,EAAO6G,GACvCA,EAAOvB,GAAK,IAAIla,KAAK+b,EAAMlb,OAM/BiX,EAAMmmB,QAAU,SAz7IZpmB,EA27IY8U,GAEhB7U,EAAMtU,GAAwB4yB,GAC9Bte,EAAMne,IAl0DN,WACI,IAAIgK,EAAO,GAAGN,MAAMzN,KAAKoiB,UAAW,GAEpC,OAAOsZ,GAAO,WAAY3tB,IAg0D9BmU,EAAMre,IA7zDN,WACI,IAAIkK,EAAO,GAAGN,MAAMzN,KAAKoiB,UAAW,GAEpC,OAAOsZ,GAAO,UAAW3tB,IA2zD7BmU,EAAMhB,IAxzDI,WACN,OAAO9W,KAAK8W,IAAM9W,KAAK8W,OAAS,IAAK9W,MAwzDzC8X,EAAMjP,IAAwB6P,EAC9BZ,EAAMghB,KAnjBN,SAAqBj4B,GACjB,OAAO8rB,GAAoB,IAAR9rB,IAmjBvBiX,EAAMyK,OAjcN,SAAqB7Z,EAAQpL,GACzB,OAAOi9B,GAAe7xB,EAAQpL,EAAO,WAiczCwa,EAAMM,OAAwBA,EAC9BN,EAAMa,OAAwBiS,GAC9B9S,EAAM2c,QAAwBja,EAC9B1C,EAAMlN,SAAwB8oB,GAC9B5b,EAAM6D,SAAwBA,EAC9B7D,EAAMoO,SA/bN,SAAuBuU,EAAc/xB,EAAQpL,GACzC,OAAOk9B,GAAiBC,EAAc/xB,EAAQpL,EAAO,aA+bzDwa,EAAM2hB,UAvjBN,WACI,OAAO9M,GAAY5U,MAAM,KAAMC,WAAWyhB,aAujB9C3hB,EAAMqH,WAAwB0L,GAC9B/S,EAAMwa,WAAwBA,GAC9Bxa,EAAMwK,YAvcN,SAA0B5Z,EAAQpL,GAC9B,OAAOi9B,GAAe7xB,EAAQpL,EAAO,gBAuczCwa,EAAMkO,YA5bN,SAA0ByU,EAAc/xB,EAAQpL,GAC5C,OAAOk9B,GAAiBC,EAAc/xB,EAAQpL,EAAO,gBA4bzDwa,EAAMgT,aAAwBA,GAC9BhT,EAAMomB,aA9kFN,SAAsBloC,EAAMylB,GACxB,GAAc,MAAVA,EAAgB,CAChB,IAAI9C,EAAQwlB,EAAW/gB,EAAeyL,GAGrB,OADjBsV,EAAY1T,GAAWz0B,MAEnBonB,EAAe+gB,EAAUnT,SAE7BvP,EAAS0B,EAAaC,EAAc3B,IACpC9C,EAAS,IAAI2E,EAAO7B,IACbwP,aAAeX,GAAQt0B,GAC9Bs0B,GAAQt0B,GAAQ2iB,EAGhBiS,GAAmB50B,QAGE,MAAjBs0B,GAAQt0B,KAC0B,MAA9Bs0B,GAAQt0B,GAAMi1B,aACdX,GAAQt0B,GAAQs0B,GAAQt0B,GAAMi1B,aACN,MAAjBX,GAAQt0B,WACRs0B,GAAQt0B,IAI3B,OAAOs0B,GAAQt0B,IAsjFnB8hB,EAAMwS,QA3hFN,WACI,OAAOtyB,EAAKsyB,KA2hFhBxS,EAAMmO,cApcN,SAA4BwU,EAAc/xB,EAAQpL,GAC9C,OAAOk9B,GAAiBC,EAAc/xB,EAAQpL,EAAO,kBAoczDwa,EAAM+F,eAAwBA,EAC9B/F,EAAMsmB,qBA/LN,SAAqCC,GACjC,YAAyBplC,IAArBolC,EACO7L,GAEsB,mBAAvB,IACNA,GAAQ6L,GACD,IA0LfvmB,EAAMwmB,sBApLN,SAAsCC,EAAW78B,GAC7C,YAA8BzI,IAA1B+jC,GAAWuB,UAGDtlC,IAAVyI,EACOs7B,GAAWuB,IAEtBvB,GAAWuB,GAAa78B,EACN,MAAd68B,IACAvB,GAAWjT,GAAKroB,EAAQ,IAErB,KA0KXoW,EAAM4e,eA73CN,SAA2B8H,EAAU1nB,GACjC,IAAI1L,EAAOozB,EAASpzB,KAAK0L,EAAK,QAAQ,GACtC,OAAO1L,GAAQ,EAAI,WACXA,GAAQ,EAAI,WACZA,EAAO,EAAI,UACXA,EAAO,EAAI,UACXA,EAAO,EAAI,UACXA,EAAO,EAAI,WAAa,YAu3CpC0M,EAAMzgB,UAAwB++B,GAG9Bte,EAAM2mB,UAAY,CACdC,eAAgB,mBAChBC,uBAAwB,sBACxBC,kBAAmB,0BACnBr0B,KAAM,aACNC,KAAM,QACNq0B,aAAc,WACdC,QAAS,eACTC,KAAM,aACNC,MAAO,WAGJlnB,EAp/IyEmnB,K,mlCCyCpF,SAASC,EAAkBt6B,GACvB,OAAI,MAAOA,EAA4C,KACnD1F,MAAMC,QAAQyF,GAAa,GAAP,OAAUA,EAAI,GAAGhJ,MAAjB,YAA0BgJ,EAAI,IAClDA,EAAI7L,OAAe6L,EAAI7L,OACR,WAAf,EAAO6L,GAAyB0C,KAAKC,UAAU3C,GAC5CA,EAjDXpP,EAAOD,QAAU,CACb6Q,QAIJ,SAAkBvB,EAAQ8C,GACtB,IAAMtM,EAAM,GAEZ,GAAIsM,EAAS,CAET,IAAMw3B,EAAWt6B,EAAO9E,KAAI,SAAApJ,GAAC,OAAIA,EAAEgR,WAC/By3B,EAAOD,EAASh+B,QAHX,uBAKT,YAAsBg+B,EAAtB,+CAAgC,KAArBx3B,EAAqB,QAC5By3B,EAAO,CACH,YAAa,cACb,eAAgBA,EAAK,gBAAkBz3B,EAAQ,gBAC/C,aAAcy3B,EAAK,cAAgBz3B,EAAQ,cAC3C,MAAS,CAACy3B,EAAMz3B,GAChB,sBAAuBy3B,EAAK,gBAAkBz3B,EAAQ,gBACtD,oBAAqBy3B,EAAK,qBAAuBz3B,EAAQ,qBACzD,cAAey3B,EAAK,eACpB,eAAgB,IAdf,kFAkBT/jC,EAAIE,KAAK,CAAC,eAKVF,EAAIE,KAAK,CAAC+L,KAAKC,UAAU,CAAC,CAAC,KAAQ63B,EAAM,gBAAiBA,EAAK,8BAE9D,CACD/jC,EAAIE,KAAJ,CAAW,SAAX,SAAuBpF,OAAO6B,KAAK6M,EAAO,OADzC,2BAGD,YAAwBA,EAAO/E,UAA/B,+CAA0C,oBAA9BrK,EAA8B,KAA5B+P,EAA4B,KACtCnK,EAAIE,KAAJ,CAAW9F,GAAX,SAAiBU,OAAOwJ,OAAO6F,GAAOzF,IAAIm/B,OAJ7C,mFAQL,OAAO7jC,GAvCPsb,YAkDJ,SAAqBnR,EAAOuR,EAAaS,EAAW6nB,EAAUC,GAC1D95B,EAAMmC,QAAU,CACZ,YAAa,WACb,gBAAiBnC,EAAMxP,KACvB,MAASwP,EAAM5J,OAAS4J,EAAMxP,KAC9B,eAAgB+gB,EAChB,aAAcS,EACd,YAAa6nB,EACb,aAAc,EACd,sBAAuBtoB,EACvB,oBAAqBS,EACrB,cAAe8nB,EACf,eAAgB,M,y1BCqCxB,SAASC,EAAavoB,GACpB,IAAMwoB,EAAS,IAAIC,IADU,uBAE7B,YAAkBzoB,EAAlB,+CAA2B,KAAhBnX,EAAgB,QACpB2/B,EAAOE,IAAI7/B,EAAI,KAClB2/B,EAAOjiB,IAAI1d,EAAI,GAAIA,IAJM,kFAO7B,OAAO2/B,EA5GThqC,EAAOD,QAAU,CACfsgB,mBAAoB,CAClB8pB,UAeJ,SAA2B7pB,EAAUC,GACnC,IAAM6pB,EAAY9pB,EAAS,GAErB+pB,EAAKN,EAAYzpB,EAASzS,MAAM,IAChCy8B,EAAKP,EAAYxpB,EAAS1S,MAAM,IAEhChI,EAAM,CAACukC,GANgC,uBAQ7C,YAAyBC,EAAzB,+CAA6B,oBAAjB7oC,EAAiB,KAAZ6I,EAAY,KACvBigC,EAAGJ,IAAI1oC,IACTqE,EAAIE,KAAKsE,IAVgC,kFAc7C,OAAOxE,GA5BL0kC,OAoCJ,SAAwBjqB,EAAUC,GAChC,IAAM6pB,EAAY9pB,EAAS,GAErB+pB,EAAKN,EAAYzpB,EAASzS,MAAM,IAChCy8B,EAAKP,EAAYxpB,EAAS1S,MAAM,IAEhChI,EAAM,CAACukC,GAN6B,uBAQ1C,YAAyBC,EAAzB,+CAA6B,oBAAjB7oC,EAAiB,KAAZ6I,EAAY,KACtBigC,EAAGJ,IAAI1oC,IACVqE,EAAIE,KAAKsE,IAV6B,kFAc1C,OAAOxE,GAjDL2kC,MAyDJ,SAAuBlqB,EAAUC,GAC/B,IAAM6pB,EAAY9pB,EAAS,GAErB+pB,EAAKN,EAAYzpB,EAASzS,MAAM,IAChCy8B,EAAKP,EAAYxpB,EAAS1S,MAAM,IAJG,uBAMzC,YAAyBy8B,EAAzB,+CAA6B,oBAAjB9oC,EAAiB,KAAZ6I,EAAY,KACtBggC,EAAGH,IAAI1oC,IACV6oC,EAAGtiB,IAAIvmB,EAAK6I,IARyB,kFAYzC,OAAQ+/B,GAAR,SAAsBC,EAAGlgC,YApEvB,YA4EJ,SAA0BmW,EAAUC,GAClC,kBAAYD,GAAZ,EAAyBC,EAAS1S,MAAM,OA3ExCgD,gBAkFF,SAA0B2Q,GACxB,OAAO9X,MAAMsF,KAAK+6B,EAAYvoB,GAASrX,a,oDC1FjChI,EAAgBF,EAAQ,GAAxBE,YACFC,EAAoBzB,OAAO6B,KAAKL,GAItCnC,EAAOD,QAAU,CAKbmC,SALa,SAKH2H,GACN,IAAMsb,EAAMtb,EAAOtF,OACftE,EAAI,EAGF4F,EAAM,GAEZ,SAAS4kC,IACL,OAAO5kC,EAAIA,EAAItB,OAAS,GAG5B,KAAOtE,EAAIklB,GAAK,CACZ,IAAM7kB,EAAIuJ,EAAO5J,GACjB,GAAI,KAAKkJ,KAAK7I,GACVL,SACG,GAAU,MAANK,GAAmB,MAANA,EACpBuF,EAAIE,KAAK,CAAEnC,KAAMzB,EAAYsC,QAASvD,MAAOZ,EAAGuD,MAAO5D,IACvDA,SACG,GAAU,MAANK,EACPuF,EAAIE,KAAK,CAAEnC,KAAMzB,EAAY+C,MAAOrB,MAAO5D,IAC3CA,SACG,GAAU,MAANK,EAAW,CAClB,IAAI0E,EAAM6E,EAAOsC,QAAQ,IAAKlM,EAAI,GAClC,GAAI+E,EAAM,EACN,MAAM,IAAIZ,MAAM,wBAA0ByF,EAAOlE,UAAU1F,IAE/D,KAAyB,OAAlB4J,EAAO7E,EAAI,IACdA,EAAM6E,EAAOsC,QAAQ,IAAKnH,EAAM,GAEpC,IAAM6G,EAAMhC,EAAOlE,UAAU1F,EAAI,EAAG+E,GAAK6M,QAAQ,OAAQ,KACzDhM,EAAIE,KAAK,CAAEnC,KAAMzB,EAAYkF,OAAQnG,MAAO2K,EAAKhI,MAAO5D,IACxDA,EAAI+E,EAAM,OACP,GAAU,MAAN1E,EAAY,CACnB,IAAM0E,EAAM6E,EAAOsC,QAAQ,IAAMlM,EAAI,GACrC,GAAI+E,EAAM,EACN,MAAM,IAAIZ,MAAM,sBAAwByF,EAAOlE,UAAU1F,IAE7D,IAAM4L,EAAMhC,EAAOlE,UAAU1F,EAAI,EAAG+E,GACpCa,EAAIE,KAAK,CAAEnC,KAAMzB,EAAYuC,KAAMxD,MAAO2K,EAAKhI,MAAO5D,IACtDA,EAAI+E,EAAM,OACP,GAAI,SAASmE,KAAK7I,GAAI,CACzB,IACMi0B,EAAK1qB,EAAO3F,OAAOjE,GACnBI,EAFI,kDAEE2J,KAAKuqB,GAEjB,GAAIl0B,EAAG,CACH,IAAIa,EAAQb,EAAE,GAEVoqC,IAAY7mC,OAASzB,EAAYmF,QAAuB,MAAbpG,EAAM,KACjD2E,EAAIE,KAAK,CAAEnC,KAAMzB,EAAY6E,SAAU9F,MAAO,IAAK2C,MAAO5D,IAC1DiB,EAAQA,EAAMgD,OAAO,GACrBjE,KAGJ4F,EAAIE,KAAK,CAAEnC,KAAMzB,EAAYmF,OAAQpG,QAAO2C,MAAO5D,IACnDA,GAAKiB,EAAMqD,WAEV,IAAU,MAANjE,EAIJ,MAAM,IAAI8D,MAAJ,gCAAmCmwB,EAAGrwB,OAAO,EAAG,IAAhD,gBAA2DjE,IAHlE4F,EAAIE,KAAK,CAAEnC,KAAMzB,EAAY6E,SAAU9F,MAAO,IAAK2C,MAAO5D,IAC1DA,GAAK,OAGN,IAAU,MAANK,EAOJ,CACH,IAAMi0B,EAAK1qB,EAAO3F,OAAOjE,GAErBI,EAAI,0SAA0S2J,KAAKuqB,GACvT,GAAIl0B,EAAG,CACHwF,EAAIE,KAAK,CAAEnC,KAAMzB,EAAYqC,QAAStD,MAAOb,EAAE,GAAGkO,cAAe1K,MAAO5D,IACxEA,GAAKI,EAAE,GAAGkE,OACV,SAIJ,GADAlE,EAAI,0CAA0C2J,KAAKuqB,GAC5C,CACH1uB,EAAIE,KAAK,CAAEnC,KAAMzB,EAAYgD,eAAgBjE,MAAOb,EAAE,GAAGkO,cAAe1K,MAAO5D,IAC/EA,GAAKI,EAAE,GAAGkE,OACV,SAKJ,GADAlE,EAAI,mHAAmH2J,KAAKuqB,GACrH,CACH,IAAI3wB,EAAOzB,EAAY6E,SAEV,MAAT3G,EAAE,KAEDoqC,IAAY7mC,OAASzB,EAAYqC,SACjCimC,IAAY7mC,OAASzB,EAAYsC,SAAiC,MAAtBgmC,IAAYvpC,OACzDupC,IAAY7mC,OAASzB,EAAY+C,SAEjCtB,EAAOzB,EAAYuC,MAGvBmB,EAAIE,KAAK,CAAEnC,OAAM1C,MAAOb,EAAE,GAAIwD,MAAO5D,IACrCA,GAAKI,EAAE,GAAGkE,OACV,SAIJ,GADAlE,EAAI,6BAA6B2J,KAAKuqB,GAC/B,CACH1uB,EAAIE,KAAK,CAAEnC,KAAMzB,EAAYoF,SAAUrG,MAAOb,EAAE,GAAGkO,cAAe1K,MAAO5D,IACzEA,GAAKI,EAAE,GAAGkE,OACV,SAKJ,GAFAlE,EAAI,2BAA2B2J,KAAKuqB,GAE7B,CACH1uB,EAAIE,KAAK,CAAEnC,KAAMzB,EAAYuC,KAAMxD,MAAOb,EAAE,GAAIwD,MAAO5D,IACvDA,GAAKI,EAAE,GAAGkE,OACV,SAGJ,MAAM,IAAIH,MAAJ,+BAAkCmwB,EAAGrwB,OAAO,EAAG,IAA/C,gBAA0DjE,IAzDhE,IAAMyqC,EAAK,eACXA,EAAGvgB,UAAYlqB,EACf,IAAM8J,EAAQ2gC,EAAG1gC,KAAKH,GACtB,IAAKE,EAAO,MAAM3F,MAAM,4CACxByB,EAAIE,KAAK,CAAEnC,KAAMzB,EAAYqF,MAAOtG,MAAO6I,EAAM,GAAIlG,MAAO5D,IAC5DA,GAAK8J,EAAM,GAAGxF,OAAS,GAwD/B,OAAOsB,GAGX1D,cACAC,sB,44BCrIAH,EAAQ,GAJVgL,E,EAAAA,gBACAE,E,EAAAA,oBACAD,E,EAAAA,iBACAE,E,EAAAA,uBAGYnL,EAAQ,G,iDAatB,WAAiCyM,EAAS+C,GAA1C,qFACQA,KAAUk5B,GADlB,yCAEeA,EAAWl5B,GAAQ/C,IAFlC,aAKU,IAAItK,MAAJ,0CAA6CqN,IALvD,4C,sBAXAzR,EAAOD,QAAU,CACfmhB,kB,+CAmBF,IAAmB,IAAbypB,EAAa,CACTt7B,QADS,+IACCkC,EADD,EACCA,UAAWC,EADZ,EACYA,MAEnBo5B,EAAa,cADXppB,EAAU,IAGRzb,KAAR,MAAAyb,EAAO,EAAS7gB,OAAO6B,KAAKmoC,GAAYpgC,KAAI,SAAAsgC,GAAU,MAAK,CACvDC,aAAc,qBACdD,aACAD,WAAY,oBARL,qIAWAn5B,EAXA,KAa4B,mBAD3B4P,EAAc5P,EAAd4P,WACa0pB,UAbd,gCAckB1pB,EAAU0pB,YAd5B,OAcG17B,EAdH,OAeHmS,EAAQzb,KAAR,MAAAyb,EAAO,EAASnS,EAAO9E,KAAI,SAAAsgC,GAAU,MAAK,CACtCC,aAAcr5B,EAAOjR,KACrBqqC,aACAD,mBAlBD,gDAWUjqC,OAAOwJ,OAAOoH,GAXxB,8GAwBX,IAAWs5B,KADXD,EAAa,OACYp5B,EACrBgQ,EAAQzb,KAAK,CACT+kC,aAAc,GACdD,aACAD,eA5BG,yBAgCJppB,GAhCI,yFAsCTwpB,SAtCS,wCAsCAt8B,GAtCA,uHAuCH8C,EAAkB9C,EAAlB8C,MAAOC,EAAW/C,EAAX+C,OACP4P,EAAc5P,EAAd4P,UAEFG,EAAU,GACVypB,EAAYv8B,EAAQw8B,UAAU,cAED,mBAAxB7pB,EAAU0pB,WACe,mBAAzB1pB,EAAU8pB,WA9CV,iBA+CD97B,EAASgS,EAAU0pB,YA/ClB,+JAiDIF,EAjDJ,QAkDEI,GAAaJ,IAAeI,EAlD9B,gCAmDoB5pB,EAAU8pB,WAAWN,GAnDzC,OAmDOt7B,EAnDP,OAoDCiS,EAAQzb,KAAR,MAAAyb,EAAO,EAASjS,EAAKhF,KAAI,WAAiBtK,GAAjB,IAAGO,EAAH,EAAGA,KAAMoD,EAAT,EAASA,KAAT,MAAwB,CAC7CknC,aAAcr5B,EAAOjR,KACrBqqC,aACAO,YAAa5qC,EACb6qC,iBAAkBprC,EAAI,EACtBqrC,UAAW1nC,QAzDhB,4CAiDkByL,EAjDlB,kZA+DcmC,GA/Dd,kDA+DAq5B,EA/DA,WAgEFI,GAAaJ,IAAeI,EAhE1B,kCAiEgBv8B,EAAQ2C,MAAMiN,IAAI9M,EAAMq5B,IAjExC,QAoEH,IAHMv9B,EAjEH,OAmEGjH,EAAUiH,EAAK,GACZrN,EAAI,EAAGA,EAAIoG,EAAQ9B,OAAQtE,IAChCuhB,EAAQzb,KAAK,CACT+kC,aAAcr5B,EAAOjR,KACrBqqC,aACAO,YAAa/kC,EAAQpG,GACrBorC,iBAAkBprC,EAAI,EACtBqrC,UAAWh+B,EAAK/I,OAAS,EAAd,EAAyB+I,EAAK,GAAGrN,IAAK,OA1EtD,yDAgFJuhB,GAhFI,yHAmFfhQ,MAnFe,YAmFW,IAAjBC,EAAiB,EAAjBA,OAAQD,EAAS,EAATA,MACPgQ,EAAU,GAEhB,IAAK,IAAMqpB,KAAcr5B,EACrBgQ,EAAQzb,KAAK,CACT+kC,aAAcr5B,EAAOjR,KACrBqqC,aACAU,gBAAiB/5B,EAAMq5B,KAI/B,OAAOrpB,GAGXgqB,SAjGe,YAiG6C,QAAhD/5B,OAAgBg6B,EAAgC,EAAtCjrC,KAAmB0N,EAAmB,EAAnBA,cAC/BsT,EAAU,GAEhB,SAASkqB,EAAcC,EAAc39B,GAA2E,IAAvEs9B,EAAuE,uDAA3D,KAAMM,EAAqD,uDAAtC,WAAYC,EAA0B,uDAAX,SAC3FC,EAAa19B,OAAOJ,GACpB+9B,EAAc,kDAAkD/hC,KAAK8hC,GAE3E,MAAO,CACHD,iBACAF,eACAC,eACAN,YACAU,aAAc,WACdC,mBAAoBF,EAAc,KAAOD,EACzCI,cAAeH,EAAcA,EAAY,GAAKJ,EAC9CQ,kBAAmBJ,EAAc,IAAM,MAI/C,IAAK,IAAMvrC,KAAQyM,EACfuU,EAAQzb,KAAK2lC,EAAclrC,EAAMyM,EAAgBzM,KAGrD,IAAK,IAAMA,KAAQ2M,EACfqU,EAAQzb,KAAK2lC,EAAclrC,EAAM2M,EAAoB3M,GAAO,KAAM,uBAGtE,IAAK,IAAMA,KAAQ4M,EACfoU,EAAQzb,KAAK2lC,EAAclrC,EAAM4M,EAAuB5M,GAAO,QAAS,0BAG5E,IAAK,IAAMA,KAAQ0M,EACfsU,EAAQzb,KAAK2lC,EAAclrC,EAAM0M,EAAiB1M,GAAO,KAAM,oBAGnE,IAAK,IAAMA,KAAQ0N,EACfsT,EAAQzb,KAAK2lC,EAAclrC,EAAM0N,EAAc1N,GAAO,UAAMiD,EAAWgoC,IAG3E,OAAOjqB,GAGX4qB,gBA3Ie,YA2IyB,IAArBlB,EAAqB,EAArBA,UAAWz5B,EAAU,EAAVA,OACpB+P,EAAU,GACVypB,EAAYC,EAAU,cAE5B,IAAK,IAAML,KAAcz9B,EAChB69B,GAAaJ,IAAeI,GAC7BzpB,EAAQzb,KAAK,CACT+kC,aAAcr5B,EAAOjR,KACrBqqC,aACAO,YAAa,QACbC,iBAAkB,EAClBC,UAAW,OAKvB,OAAO9pB,GAGX6qB,SA9Je,SA8JLh7B,GACN,OACI,CAAEo6B,YAAa,uBADnB,SAEO9qC,OAAO6B,KAAK6O,EAAME,WAAWhH,KAAI,SAAAkhC,GAAW,MAAK,CAAEA,uB,cC9LlEzrC,EAAOD,QAAU,SAASC,GAoBzB,OAnBKA,EAAOssC,kBACXtsC,EAAOmnB,UAAY,aACnBnnB,EAAOusC,MAAQ,GAEVvsC,EAAO0F,WAAU1F,EAAO0F,SAAW,IACxC/E,OAAOC,eAAeZ,EAAQ,SAAU,CACvCa,YAAY,EACZC,IAAK,WACJ,OAAOd,EAAOE,KAGhBS,OAAOC,eAAeZ,EAAQ,KAAM,CACnCa,YAAY,EACZC,IAAK,WACJ,OAAOd,EAAOC,KAGhBD,EAAOssC,gBAAkB,GAEnBtsC,I,gBCpBR,UAWWqF,EAAMokC;;;;;;;;;;GAANpkC,EAoBRoI,KApBcg8B,EAoBR,SAAUh3B,GAMf,IAAI+5B,GAAsB,EAOtBC,GAA8B,EAQ9BC,GAAwB,EAQxBC,GAAgC,EAGhCC,EAAQ,4EAA4EzhC,MAAM,KAE1F0hC,EAAU,CACV,CACIjpC,KAAM,UACNkpC,QAAS,CACL,CAAElpC,KAAM,UAAW1C,MAAO,IAC1B,CAAE0C,KAAM,QAAS1C,MAAO,MACxB,CAAE0C,KAAM,OAAQ1C,MAAO,OACvB,CAAE0C,KAAM,QAAS1C,MAAO,QACxB,CAAE0C,KAAM,SAAU1C,MAAO,SACzB,CAAE0C,KAAM,QAAS1C,MAAO,WAGhC,CACI0C,KAAM,UACNkpC,QAAS,CACL,CAAElpC,KAAM,QAAS1C,MAAO,IACxB,CAAE0C,KAAM,OAAQ1C,MAAO,MACvB,CAAE0C,KAAM,QAAS1C,MAAO,OACxB,CAAE0C,KAAM,SAAU1C,MAAO,OACzB,CAAE0C,KAAM,QAAS1C,MAAO,UAGhC,CACI0C,KAAM,QACNkpC,QAAS,CACL,CAAElpC,KAAM,OAAQ1C,MAAO,IACvB,CAAE0C,KAAM,QAAS1C,MAAO,KACxB,CAAE0C,KAAM,SAAU1C,MAAO,KACzB,CAAE0C,KAAM,QAAS1C,MAAO,QAGhC,CACI0C,KAAM,OACNkpC,QAAS,CACL,CAAElpC,KAAM,QAAS1C,MAAO,GACxB,CAAE0C,KAAM,SAAU1C,MAAO,IACzB,CAAE0C,KAAM,QAAS1C,MAAO,OAGhC,CACI0C,KAAM,SACNkpC,QAAS,CACL,CAAElpC,KAAM,QAAS1C,MAAO,OAMpC,SAAS6rC,EAAelhC,EAAKmhC,GACzB,QAAIA,EAAOzoC,OAASsH,EAAItH,UAIQ,IAAzBsH,EAAIM,QAAQ6gC,GAMvB,SAASC,EAAWC,GAGhB,IAFA,IAAIliC,EAAS,GAENkiC,GACHliC,GAAU,IACVkiC,GAAO,EAGX,OAAOliC,EAsCX,SAASmiC,EAAmBhqB,EAAQiqB,GAGhC,IAQIC,EAAWlqB,EAAS,IARJ5Y,EAChB/H,EAAK4qC,GAASx/B,QACd,SAASpM,GACL,OAAOA,EAAM,IAAM4rC,EAAQ5rC,MAEjCkJ,KAAK,KAWP,OALKyiC,EAAmBG,MAAMD,KAC1BF,EAAmBG,MAAMD,GAAYE,KAAKC,aAAarqB,EAAQiqB,IAI5DD,EAAmBG,MAAMD,GAoBpC,SAASI,EAAannB,EAAQ8mB,EAASM,GACnC,IAwDIC,EACAC,EACAC,EA1DAC,EAAoBV,EAAQU,kBAC5BC,EAAcX,EAAQW,YACtBC,EAAWD,GAAeX,EAAQY,SAASngC,QAC3CogC,EAA2Bb,EAAQa,yBACnCC,EAAuBd,EAAQc,sBAAwB,EACvDC,EAAiBf,EAAQe,gBAAkB,EAC3CC,EAAoBhB,EAAQgB,kBAC5BC,EAAmBjB,EAAQiB,iBAE/B,GAAIP,GAAqBJ,EAAY,CACjC,IAkBYY,EAlBRC,EAAsB,CACtBL,qBAAsBA,EACtBH,YAAaA,GAcjB,OAXII,IACAI,EAAoBC,sBAAwBL,EAC5CI,EAAoBE,sBAAwBN,GAK5CF,GAA4B3nB,EAAS,IACrCioB,EAAoBN,yBAA2BA,GAG/CvB,GACKC,KACG2B,EAAkBtrB,EAAO,GAAIoqB,IACjBW,aAAc,EAC9BO,EAAgBD,iBAAmB,IACnC/nB,EAASlT,WAAWq6B,EAAannB,EAAQgoB,GAAkB,KAGxDnB,EAAmBO,EAAYa,GAAqBr7B,OAAOoT,KAE7DmmB,KACG6B,EAAkBtrB,EAAO,GAAIoqB,IACjBW,aAAc,EAC9BO,EAAgBD,iBAAmB,IACnC/nB,EAASlT,WAAWq6B,EAAannB,EAAQgoB,GAAkB,KAGxDhoB,EAAOooB,eAAehB,EAAYa,IAiBjD,IAAIzX,GAVAmX,EACe3nB,EAAOqoB,YAAYV,EAA2B,GAE9C3nB,EAAOwhB,QAAQqG,EAAiB,IAO3BhjC,MAAM,KAE9B0iC,EAAiB/W,EAAK,IAAM,GAI5B8W,GAFA9W,EAAOA,EAAK,GAAG3rB,MAAM,MAEC,IAAM,GAa5B,IAAIyjC,GAZJjB,EAAgB7W,EAAK,IAAM,IAYOvyB,OAC9BsqC,EAAiBjB,EAAerpC,OAChCuqC,EAAaF,EAAgBC,EAC7BE,EAASpB,EAAgBC,GAEzBK,GAA4Ba,IAAgBb,EAA2B,IAAOA,GAA4BY,IAAoBV,EAAiB,MAE/IY,EAjKR,SAAqBA,GAKjB,IAJA,IAAIC,EAAcD,EAAO5jC,MAAM,IAAIyI,UAC/B3T,EAAI,EACJgvC,GAAQ,EAELA,GAAShvC,EAAI+uC,EAAYzqC,QACxBtE,EACuB,MAAnB+uC,EAAY/uC,GACZ+uC,EAAY/uC,GAAK,KAEjB+uC,EAAY/uC,IAAMkT,SAAS67B,EAAY/uC,GAAI,IAAM,GAAGwJ,WACpDwlC,GAAQ,IAGR97B,SAAS67B,EAAY/uC,GAAI,IAAM,IAC/BgvC,GAAQ,GAGZD,EAAY/uC,GAAK,KAGrBA,GAAK,EAOT,OAJIgvC,GACAD,EAAYjpC,KAAK,KAGdipC,EAAYp7B,UAAUlJ,KAAK,IAqIrBwkC,CAAYH,IAEVxqC,SAAWuqC,EAAa,IAC/BF,GAAgC,GAIhCC,IACAE,EAASA,EAAOlhC,MAAM,GAAI,IAI9B8/B,EAAgBoB,EAAOlhC,MAAM,EAAG+gC,GAChChB,EAAiBmB,EAAOlhC,MAAM+gC,IAK9BX,IACAL,EAAiBA,EAAe/7B,QAAQ,MAAO,KAInD,IAAIs9B,EAAWh8B,SAAS06B,EAAgB,IAEpCsB,EAAW,EACPvB,EAAerpC,QAAU4qC,GAGzBxB,GAFAC,GAAkCX,EAAWkC,EAAWvB,EAAerpC,QAGvEqpC,EAAiB,KAEjBD,GAAgCC,EAAe//B,MAAM,EAAGshC,GACxDvB,EAAiBA,EAAe//B,MAAMshC,IAEnCA,EAAW,IAClBvB,EAAkBX,EAAWjpC,KAAK4V,IAAIu1B,GAAYxB,EAAcppC,QAAUopC,EAAgBC,EAE1FD,EAAgB,KAGfM,KAEDL,EAAiBA,EAAe//B,MAAM,EAAGsgC,IAEtB5pC,OAAS4pC,IACxBP,GAAkCX,EAAWkB,EAAiBP,EAAerpC,SAK7EopC,EAAcppC,OAAS2pC,IACvBP,EAAgBV,EAAWiB,EAAuBP,EAAcppC,QAAUopC,IAIlF,IAKQngC,EALJ4hC,EAAkB,GAGtB,GAAIrB,EAIA,IAHAjX,EAAO6W,EAGA7W,EAAKvyB,QACJypC,EAASzpC,SACTiJ,EAAQwgC,EAASriC,SAGjByjC,IACAA,EAAkBhB,EAAoBgB,GAG1CA,EAAkBtY,EAAKjpB,OAAOL,GAAS4hC,EAEvCtY,EAAOA,EAAKjpB,MAAM,GAAIL,QAG1B4hC,EAAkBzB,EAQtB,OAJIC,IACAwB,EAAkBA,EAAkBf,EAAmBT,GAGpDwB,EAIX,SAASC,EAAqBvmC,EAAGC,GAC7B,OAAID,EAAEwmC,MAAM/qC,OAASwE,EAAEumC,MAAM/qC,QACjB,EAGRuE,EAAEwmC,MAAM/qC,OAASwE,EAAEumC,MAAM/qC,OAClB,EAIJ,EAIX,SAASgrC,EAAkBjsC,EAAOqmB,GAC9B,IAAI6lB,EAAS,GAoBb,OAlBAC,EAAKjtC,EAAKmnB,IAAa,SAAU+lB,GAC7B,GAAmC,oBAA/BA,EAAc7hC,MAAM,EAAG,IAA3B,CAIA,IAAI8hC,EAAYD,EAAc7hC,MAAM,IAAIvF,cAExCmnC,EAAKjtC,EAAKmnB,EAAW+lB,KAAiB,SAAUE,GACxCA,EAAS/hC,MAAM,EAAG,KAAOvK,GACzBksC,EAAOzpC,KAAK,CACRnC,KAAM+rC,EACNnuC,IAAKouC,EACLN,MAAO3lB,EAAW+lB,GAAeE,YAM1CJ,EArOXrC,EAAmBG,MAAQ,GAkP3B,IAAIuC,EAAY,CACZC,uBAAwB,CACpBC,EAAG,cACHC,GAAI,eACJhuC,EAAG,SACHuyB,GAAI,UACJl0B,EAAG,SACHm0B,GAAI,UACJ3F,EAAG,OACH4F,GAAI,QACJl0B,EAAG,MACHm0B,GAAI,OACJkC,EAAG,OACHqZ,GAAI,QACJnhB,EAAG,QACH6F,GAAI,SACJrI,EAAG,OACHsI,GAAI,SAERsb,oBAAqB,CACjBH,EAAG,OACHC,GAAI,QACJhuC,EAAG,MACHuyB,GAAI,OACJl0B,EAAG,MACHm0B,GAAI,OACJ3F,EAAG,KACH4F,GAAI,MACJl0B,EAAG,KACHm0B,GAAI,MACJkC,EAAG,KACHqZ,GAAI,MACJnhB,EAAG,KACH6F,GAAI,MACJrI,EAAG,KACHsI,GAAI,OAERub,sBAAuB,CACnBC,IAAK,UACLC,GAAI,OACJC,GAAI,QAERC,mBAAoB,CAChB,CAAE3sC,KAAM,WAAYiG,OAAQ,MAC5B,CAAEjG,KAAM,QAASiG,OAAQ,MAE7B2mC,kBAvDJ,SAA2BltC,EAAOmtC,EAAcC,GAE5C,OAAqB,IAAjBD,GAAuC,OAAjBC,EACfptC,EAGJA,EAAQA,IAqDnB,SAASqG,EAAQyV,GACb,MAAiD,mBAA1Cze,OAAOkB,UAAU4H,SAASrJ,KAAKgf,GAI1C,SAASqD,EAAS2D,GACd,MAA+C,oBAAxCzlB,OAAOkB,UAAU4H,SAASrJ,KAAKgmB,GAa1C,SAAStT,EAAKsM,EAAO9V,GACjB,IAIIS,EAJAjC,EAAQ,EAER7D,EAAMmb,GAASA,EAAM7a,QAAU,EAWnC,IAPwB,mBAAb+E,IACPS,EAAQT,EACRA,EAAW,SAAUqnC,GACjB,OAAOA,IAAS5mC,IAIjBjC,EAAQ7D,GAAK,CAChB,GAAIqF,EAAS8V,EAAMtX,IAAW,OAAOsX,EAAMtX,GAC3CA,GAAS,GAKjB,SAAS2nC,EAAKrwB,EAAO9V,GACjB,IAAIxB,EAAQ,EACR7D,EAAMmb,EAAM7a,OAEhB,GAAK6a,GAAUnb,EAEf,KAAO6D,EAAQ7D,GAAK,CAChB,IAAsC,IAAlCqF,EAAS8V,EAAMtX,GAAQA,GAAoB,OAC/CA,GAAS,GAKjB,SAASyC,EAAI6U,EAAO9V,GAChB,IAAIxB,EAAQ,EACR7D,EAAMmb,EAAM7a,OACZ45B,EAAM,GAEV,IAAK/e,IAAUnb,EAAO,OAAOk6B,EAE7B,KAAOr2B,EAAQ7D,GACXk6B,EAAIr2B,GAASwB,EAAS8V,EAAMtX,GAAQA,GACpCA,GAAS,EAGb,OAAOq2B,EAIX,SAASyS,EAAMxxB,EAAOkG,GAClB,OAAO/a,EAAI6U,GAAO,SAAUuxB,GACxB,OAAOA,EAAKrrB,MAKpB,SAASurB,EAAQzxB,GACb,IAAI+e,EAAM,GAMV,OAJAsR,EAAKrwB,GAAO,SAAUuxB,GACdA,GAAQxS,EAAIp4B,KAAK4qC,MAGlBxS,EAIX,SAAS2S,EAAO1xB,GACZ,IAAI+e,EAAM,GAMV,OAJAsR,EAAKrwB,GAAO,SAAU+M,GACbrZ,EAAKqrB,EAAKhS,IAAOgS,EAAIp4B,KAAKomB,MAG5BgS,EAIX,SAAS4S,EAAajoC,EAAGC,GACrB,IAAIo1B,EAAM,GAQV,OANAsR,EAAK3mC,GAAG,SAAUqjB,GACdsjB,EAAK1mC,GAAG,SAAUioC,GACV7kB,IAAO6kB,GAAM7S,EAAIp4B,KAAKomB,SAI3B2kB,EAAO3S,GAIlB,SAAS8S,EAAK7xB,EAAO9V,GACjB,IAAI60B,EAAM,GASV,OAPAsR,EAAKrwB,GAAO,SAAUuxB,EAAM7oC,GACxB,IAAKwB,EAASqnC,GAEV,OADAxS,EAAM/e,EAAMvR,MAAM/F,IACX,KAIRq2B,EAIX,SAAS+S,EAAQ9xB,EAAO9V,GAGpB,OAAO2nC,EAFQ7xB,EAAMvR,QAAQ+F,UAEPtK,GAAUsK,UAIpC,SAASoP,EAAOla,EAAGC,GACf,IAAK,IAAIvH,KAAOuH,EACRA,EAAEjH,eAAeN,KAAQsH,EAAEtH,GAAOuH,EAAEvH,IAG5C,OAAOsH,EAIX,SAAStG,EAAKsG,GACV,IAAIq1B,EAAM,GAEV,IAAK,IAAI38B,KAAOsH,EACRA,EAAEhH,eAAeN,IAAQ28B,EAAIp4B,KAAKvE,GAG1C,OAAO28B,EAIX,SAASgT,EAAI/xB,EAAO9V,GAChB,IAAIxB,EAAQ,EACR7D,EAAMmb,EAAM7a,OAEhB,IAAK6a,IAAUnb,EAAO,OAAO,EAE7B,KAAO6D,EAAQ7D,GAAK,CAChB,IAAsC,IAAlCqF,EAAS8V,EAAMtX,GAAQA,GAAmB,OAAO,EACrDA,GAAS,EAGb,OAAO,EAIX,SAASspC,EAAQhyB,GACb,IAAI+e,EAAM,GAMV,OAJAsR,EAAKrwB,GAAO,SAASlZ,GACjBi4B,EAAMA,EAAI5N,OAAOrqB,MAGdi4B,EAaX,SAASkT,EAA6BC,GAClC,MAKO,QALAA,EAAU,KAAM,KAAM,CACzBvD,aAAa,EACbG,qBAAsB,EACtBO,sBAAuB,EACvBD,sBAAuB,IAI/B,SAAS+C,EAAqBD,GAC1B,IAAIE,GAAS,EAMb,UADAA,GADAA,GADAA,EAASA,GAA8D,MAApDF,EAAU,EAAG,KAAM,CAAEpD,qBAAsB,MACS,OAApDoD,EAAU,EAAG,KAAM,CAAEpD,qBAAsB,MACS,QAApDoD,EAAU,EAAG,KAAM,CAAEpD,qBAAsB,OAO9DsD,GADAA,GADAA,GADAA,EAASA,GAA6F,QAAnFF,EAAU,MAAO,KAAM,CAAE9C,sBAAuB,EAAGC,sBAAuB,MACS,UAAnF6C,EAAU,MAAO,KAAM,CAAE9C,sBAAuB,EAAGC,sBAAuB,MACS,UAAnF6C,EAAU,MAAO,KAAM,CAAE9C,sBAAuB,EAAGC,sBAAuB,MACS,WAAnF6C,EAAU,MAAO,KAAM,CAAE9C,sBAAuB,EAAGC,sBAAuB,OAQ7F+C,GADAA,GADAA,GADAA,GADAA,EAASA,GAAsE,QAA5DF,EAAU,MAAO,KAAM,CAAErD,yBAA0B,MACS,QAA5DqD,EAAU,MAAO,KAAM,CAAErD,yBAA0B,MACS,QAA5DqD,EAAU,MAAO,KAAM,CAAErD,yBAA0B,MACS,UAA5DqD,EAAU,MAAO,KAAM,CAAErD,yBAA0B,MACS,UAA5DqD,EAAU,MAAO,KAAM,CAAErD,yBAA0B,OAKtEuD,GADAA,EAASA,GAA2D,UAAjDF,EAAU,IAAM,KAAM,CAAEvD,aAAa,MACa,SAAlDuD,EAAU,IAAM,KAAM,CAAEvD,aAAa,MAO5D,SAAS0D,IACL,IAEIC,EAFAvjC,EAAO,GAAGN,MAAMzN,KAAKoiB,WACrBmvB,EAAW,GA4Bf,GAxBAlC,EAAKthC,GAAM,SAAUmZ,EAAKxf,GACtB,IAAKA,EAAO,CACR,IAAK6B,EAAQ2d,GACT,KAAM,2DAGVoqB,EAAYpqB,EAGG,iBAARA,GAAmC,mBAARA,EAKnB,iBAARA,EAKP7E,EAAS6E,IACTtE,EAAO2uB,EAAUrqB,GALjBqqB,EAASC,UAAYtqB,EALrBqqB,EAASE,SAAWvqB,MAcvBoqB,IAAcA,EAAUntC,OACzB,MAAO,GAGXotC,EAASG,mBAAoB,EAE7B,IAAIC,EAAqBxnC,EAAImnC,GAAW,SAAUM,GAC9C,OAAOA,EAAI9+B,OAAOy+B,MAIlBM,EAAclB,EAAanE,EAAOkE,EAAOF,EAAMQ,EAAQW,GAAqB,UAE5EG,EAAUP,EAASO,QASvB,OAPIA,IACAD,EAAcA,EAAYpkC,MAAM,EAAGqkC,IAGvCP,EAASG,mBAAoB,EAC7BH,EAASM,YAAcA,EAEhB1nC,EAAImnC,GAAW,SAAUM,GAC5B,OAAOA,EAAI9+B,OAAOy+B,MAK1B,SAASQ,IAEL,IAAIhkC,EAAO,GAAGN,MAAMzN,KAAKoiB,WACrBmvB,EAAW3uB,EAAO,GAAIvV,KAAKyF,OAAO8iB,UAKlC8Q,EAAiBr5B,KAAKq5B,iBACtBM,EAAW35B,KAAK25B,WAGQ,mBAAjB35B,KAAK4W,UAA6C,IAAnB5W,KAAK4W,YAC3CyiB,EAAiB,EACjBM,EAAW,GAGf,IAAIgL,EAAatL,EAAiB,EAI9BuL,EAAY5/B,EAAO2C,SAASpR,KAAK4V,IAAIktB,GAAiB,gBACtDwL,EAAkB7/B,EAAO2C,SAASpR,KAAK4V,IAAIwtB,GAAW,UAG1DqI,EAAKthC,GAAM,SAAUmZ,GACE,iBAARA,GAAmC,mBAARA,EAKnB,iBAARA,EAKP7E,EAAS6E,IACTtE,EAAO2uB,EAAUrqB,GALjBqqB,EAASC,UAAYtqB,EALrBqqB,EAASE,SAAWvqB,KAc5B,IAAIirB,EAAe,CACfrW,MAAO,IACPnP,OAAQ,IACRqP,MAAO,IACPC,KAAM,IACN/J,MAAO,IACPE,QAAS,IACTG,QAAS,IACT2J,aAAc,KAGdkW,EAAY,CACZC,OAAQ,YACRvW,MAAO,WACPnP,OAAQ,QACRqP,MAAO,WACPC,KAAM,WACN/J,MAAO,WACPE,QAAS,QACTG,QAAS,QACT2J,aAAc,QACdoW,QAAS,OAIbf,EAAS/E,MAAQA,EAEjB,IAAI+F,EAAU,SAAUrvC,GACpB,OAAOwP,EAAK85B,GAAO,SAAUhpC,GACzB,OAAO4uC,EAAU5uC,GAAMuF,KAAK7F,OAIhCsvC,EAAY,IAAI/9B,OAAOtK,EAAIqiC,GAAO,SAAUhpC,GAC5C,OAAO4uC,EAAU5uC,GAAML,UACxBmH,KAAK,KAAM,KAGdinC,EAASv8B,SAAW3H,KAGpB,IAAIokC,EAAwC,mBAAtBF,EAASE,SAA0BF,EAASE,SAAStvB,MAAMovB,GAAYA,EAASE,SAOlGI,EAAcN,EAASM,YAIvBH,EAAoBH,EAASG,kBAE7BI,EAAUP,EAASO,QAGnBW,EAAW,GAEVZ,IACGtoC,EAAQgoC,EAASkB,YACjBlB,EAASkB,SAAWlB,EAASkB,SAASnoC,KAAK,KAI3CinC,EAASkB,UACTpD,EAAKkC,EAASkB,SAAS9oC,MAAM6oC,IAAY,SAAUtvC,GAC/C,IAAIM,EAAO+uC,EAAQrvC,GAEN,WAATM,GAA8B,YAATA,GAIzBivC,EAAS9sC,KAAKnC,OAM1B,IAAI+lB,EAAalX,EAAOkX,aAEnBA,IACDA,EAAa,IAIjB8lB,EAAKjtC,EAAKqtC,IAAY,SAAUruC,GACE,mBAAnBquC,EAAUruC,GAQhBmoB,EAAW,IAAMnoB,KAClBmoB,EAAW,IAAMnoB,GAAOquC,EAAUruC,IAR7BmoB,EAAWnoB,KACZmoB,EAAWnoB,GAAOquC,EAAUruC,OAaxCiuC,EAAKjtC,EAAKmnB,EAAWmpB,yBAAyB,SAAUnC,GACpDkB,EAAWA,EAAShgC,QAAQ,IAAM8+B,EAAO,IAAKhnB,EAAWmpB,uBAAuBnC,OAIpF,IAAIjD,EAAaiE,EAASjE,YAAcj7B,EAAO0Q,SAE3C4vB,EAAepB,EAASoB,aACxBC,EAAYrB,EAASqB,UACrBpB,EAAYD,EAASC,UACrBqB,EAActB,EAASsB,YACvBlF,EAAc4D,EAAS5D,YACvBmF,EAAQvB,EAASuB,MAGjBC,EAAuBxB,EAASwB,sBAAwBvB,EAAY,EACpEwB,EAAoBD,EAAuBxB,EAASC,UAAY,EAChEyB,EAAyBD,EAEzBE,EAAW3B,EAAS2B,SACpBC,GAAa,EAEbC,EAAW7B,EAAS6B,SACpBC,IAAa,EAGb3F,GAAoB6D,EAAS7D,kBAC7BM,GAAoBuD,EAASvD,kBAC7BC,GAAmBsD,EAAStD,iBAC5BL,GAAW2D,EAAS3D,SAExBF,GAAoBA,KAAsBtB,GAAuBE,GAGjE,IAAI9mC,GAAO+rC,EAAS/rC,KAEhB+D,EAAQ/D,MACRA,GAAOA,GAAK8E,KAAK,MAGR,OAAT9E,KAAkBssC,GAAWsB,GAAYL,KACzCvtC,GAAO,OAGE,OAATA,KAA0B,IAATA,IAA0B,SAATA,IAA4B,UAATA,KACrDA,GAAO,UAGE,IAATA,KACAA,GAAO,IAGX,IAAI8tC,GAAe,SAAU/C,GACzB,OAAOA,EAAKxnC,KAAKvD,KAGjB+tC,GAAS,QACTC,GAAS,QACTC,GAAQ,OACRC,GAAO,MACPC,GAAO,gBACPC,GAAS,QAETC,GAAY/B,EAAU,GAAKf,EAAI,CAACwC,GAAQE,GAAOE,IAAOL,IACtDQ,GAAY/C,EAAI,CAACyC,GAAQC,GAAOE,IAAOL,IACvCS,GAAUhD,EAAI,CAAC2C,GAAMC,IAAOL,IAC5BU,GAAYjD,EAAI,CAAC6C,GAAQD,IAAOL,IAGhCW,GAAY9pC,EAAIsnC,EAAS9nC,MAAM6oC,IAAY,SAAUtvC,EAAOwE,GAC5D,IAAIlE,EAAO+uC,EAAQrvC,GAUnB,MAR0B,MAAtBA,EAAMuK,MAAM,EAAG,KACfvK,EAAQA,EAAMuK,MAAM,GAEP,WAATjK,GAA8B,YAATA,GACrBivC,EAAS9sC,KAAKnC,IAIf,CACHkE,MAAOA,EACPvD,OAAQjB,EAAMiB,OACdkW,KAAM,GAGNnX,MAAiB,WAATM,EAAoBN,EAAMuO,QAAQ2gC,EAAUC,OAAQ,MAAQnvC,EAGpEM,KAAiB,WAATA,GAA8B,YAATA,EAAsB,KAAOA,MAK9D0wC,GAAe,CACfxsC,MAAO,EACPvD,OAAQ,EACRjB,MAAO,GACPmX,KAAM,GACN7W,KAAM,MAGNd,GAAS,GAETiwC,GACAsB,GAAUzgC,UAGd67B,EAAK4E,IAAW,SAAU/wC,GACtB,GAAIA,EAAMM,KAON,OANI0wC,GAAa1wC,MAAQ0wC,GAAa75B,OAClC3X,GAAOiD,KAAKuuC,SAGhBA,GAAehxC,GAKfyvC,EACAuB,GAAa75B,KAAOnX,EAAMA,MAAQgxC,GAAa75B,KAE/C65B,GAAa75B,MAAQnX,EAAMA,UAI/BgxC,GAAa1wC,MAAQ0wC,GAAa75B,OAClC3X,GAAOiD,KAAKuuC,IAGZvB,GACAjwC,GAAO8Q,UAKX,IAAI2gC,GAAcxD,EAAanE,EAAOkE,EAAOD,EAAQD,EAAM9tC,GAAQ,WAGnE,IAAKyxC,GAAYhwC,OACb,OAAOqsC,EAAM9tC,GAAQ,QAAQ4H,KAAK,IAOtC6pC,GAAchqC,EAAIgqC,IAAa,SAAUC,EAAY1sC,GAEjD,IAMI2sC,EANAC,EAAe5sC,EAAQ,IAAOysC,GAAYhwC,OAG1CowC,GAAc7sC,EAMd2sC,EADe,UAAfD,GAAyC,WAAfA,EACflC,EAAgBzL,GAAG2N,GAEnBnC,EAAUxL,GAAG2N,GAG5B,IAAII,EAAa5wC,KAAKiS,MAAMw+B,GACxB/D,EAAe+D,EAAWG,EAE1BtxC,EAAQwP,EAAKhQ,IAAQ,SAAUQ,GAC/B,OAAOkxC,IAAelxC,EAAMM,QAoChC,OAjCI+wC,GAAanB,GAAYiB,EAAWjB,IACpCC,IAAa,GAGbiB,GAAcpB,GAAYtvC,KAAK4V,IAAI+3B,EAASv8B,SAASyxB,GAAG2N,IAAelB,IACvEC,GAAa,GAoBboB,GAA6B,OAAhB1B,GAAwB3vC,EAAMiB,OAAS,IACpD0uC,GAAc,GAIlBZ,EAAUnT,SAAS0V,EAAYJ,GAC/BlC,EAAgBpT,SAAS0V,EAAYJ,GAE9B,CACHC,SAAUA,EACVG,WAAYA,EAGZlE,aAAcgE,EAAahE,EAAe,EAC1CgE,WAAYA,EACZC,UAAWA,EACX/wC,KAAM4wC,EAGNK,YAAavxC,EAAMiB,WAI3B,IAAIuwC,GAAc5B,EAAQlvC,KAAKiS,MAAQjS,KAAKg5B,MACxC+X,GAAW,SAAU7zC,EAAO8zC,GAC5B,IAAIC,EAASjxC,KAAKsV,IAAI,GAAI07B,GAC1B,OAAOF,GAAY5zC,EAAQ+zC,GAAUA,GAGrCC,IAAa,EACbC,IAAU,EAEVC,GAAc,SAAUZ,EAAY1sC,GACpC,IAAIutC,EAAgB,CAChBtH,YAAaA,EACbK,kBAAmBA,GACnBC,iBAAkBA,GAClBL,SAAUA,GACVF,kBAAmBA,IAiGvB,OA9FIqF,IACIC,GAAqB,GACrBoB,EAAWC,SAAW,EACtBD,EAAWI,WAAa,EACxBJ,EAAW9D,aAAe,IAE1B2E,EAAcpH,yBAA2BmF,EACzCoB,EAAWpB,kBAAoBA,IAInCK,KAAe0B,KACXX,EAAWG,WACXH,EAAWI,WAAapB,EACxBgB,EAAW9D,aAAe,IAE1B8D,EAAWI,WAAa,EACxBJ,EAAW9D,aAAe,IAI9B6C,IAAe4B,KACXX,EAAWE,YACXF,EAAWI,WAAatB,EACxBkB,EAAW9D,aAAe,IAE1B8D,EAAWI,WAAa,EACxBJ,EAAW9D,aAAe,IAI9B8D,EAAWE,YAAcF,EAAWpB,mBAAqBoB,EAAWpB,kBAAoBoB,EAAWI,WAAWnrC,WAAWlF,QAAU,EAE/HqtC,EAAY,EACZ4C,EAAWtzC,MAAQ6zC,GAASP,EAAWI,WAAYhD,GAC9B,IAAdA,EACP4C,EAAWtzC,MAAQ4zC,GAAYN,EAAWI,WAAaJ,EAAW9D,cAE9DyC,GAEIqB,EAAWtzC,MADXgyC,EACmB6B,GAASP,EAAWC,SAAUrB,EAAoBoB,EAAWI,WAAWnrC,WAAWlF,QAEnFiwC,EAAWC,SAG9BD,EAAWI,aACXxB,GAAqBoB,EAAWI,WAAWnrC,WAAWlF,UAG1D8wC,EAAclH,eAAiByD,EAG3B4C,EAAWtzC,MADXgyC,EACmBsB,EAAWI,WAAaG,GAASP,EAAW9D,aAAckB,GAE1D4C,EAAWI,WAAaJ,EAAW9D,cAK9DyC,GAAwBqB,EAAWI,YAEnCJ,EAAWtzC,MAAQ8C,KAAKg5B,MAAM+X,GAASP,EAAWI,WAAYJ,EAAWpB,kBAAoBoB,EAAWI,WAAWnrC,WAAWlF,SAE9H6uC,GAAqBoB,EAAWI,WAAWnrC,WAAWlF,QAEtDiwC,EAAWtzC,MAAQszC,EAAWI,WAIlCJ,EAAWK,YAAc,IAAM5B,GAAeiC,MAC9CG,EAAcnH,qBAAuBsG,EAAWK,YAE5CM,IAAWE,EAAcpH,yBAA2BuG,EAAWK,oBACxDQ,EAAcpH,2BAIxBiH,KAAeV,EAAWtzC,MAAQ,GAAc,KAAT0E,IAAiCkN,EAAK+/B,EAAU2B,EAAW5wC,OAASkP,EAAKm/B,EAAauC,EAAW5wC,SACzIsxC,IAAa,GAGjBV,EAAWc,eAAiB7H,EAAa+G,EAAWtzC,MAAOm0C,EAAe3H,GAE1E2H,EAActH,aAAc,EAC5BsH,EAAchH,iBAAmB,IACjCmG,EAAWe,iBAAmB9H,EAAa+G,EAAWtzC,MAAOm0C,EAAe,MAE7C,IAA3Bb,EAAWK,aAAyC,iBAApBL,EAAW5wC,OAC3C4wC,EAAWgB,iBAAmB/H,EAAa+G,EAAWtzC,MAAO,CACzDgtC,qBAAsB,EACtBH,aAAa,GACd,MAAMlgC,MAAM,EAAG,IAGf2mC,GAQX,IAHAD,GAAc1D,EADd0D,GAAchqC,EAAIgqC,GAAaa,MAIf7wC,OAAS,EAAG,CACxB,IAAIkxC,GAAW,SAAU7xC,GACrB,OAAOkP,EAAKyhC,IAAa,SAAUC,GAC/B,OAAOA,EAAW5wC,OAASA,MAI/B8xC,GAAc,SAAUC,GACxB,IAAIC,EAAmBH,GAASE,EAAO/xC,MAElCgyC,GAILnG,EAAKkG,EAAO7I,SAAS,SAAU+I,GAC3B,IAAIC,EAAmBL,GAASI,EAAOjyC,MAElCkyC,GAID3iC,SAASyiC,EAAiBL,iBAAkB,MAAQM,EAAO30C,QAC3D00C,EAAiBnB,SAAW,EAC5BmB,EAAiBhB,WAAa,EAC9BgB,EAAiBlF,aAAe,EAChCoF,EAAiBrB,UAAY,EAC7BqB,EAAiBlB,YAAc,EAC/BkB,EAAiBpF,aAAe,EAChCoF,EAAiBP,iBAAmBO,EAAiBlB,WAAWnrC,WAChE0rC,IAAU,OAKtB1F,EAAK5C,EAAS6I,IAsElB,OAlEIP,KACAD,IAAa,EACb9B,EAAoBC,EAEpBkB,GAAc1D,EADd0D,GAAchqC,EAAIgqC,GAAaa,OAI/BnD,GAAiBwB,KAAe9B,EAAS/rC,MAcrCquC,KACAM,GAActD,EAAKsD,IAAa,SAAUC,GAKtC,OAAQA,EAAWE,aAAeF,EAAWI,aAAe9hC,EAAK+/B,EAAU2B,EAAW5wC,UAK1FsuC,GAAWqC,GAAYhwC,SACvBgwC,GAAcA,GAAY1mC,MAAM,EAAGqkC,IAInCgC,IAAaK,GAAYhwC,OAAS,IAClCgwC,GAAcrD,EAAQqD,IAAa,SAAUC,GAKzC,OAAQA,EAAWI,aAAe9hC,EAAK+/B,EAAU2B,EAAW5wC,QAAU4wC,EAAWG,cAKrFR,KASAI,GAAc1D,EARd0D,GAAchqC,EAAIgqC,IAAa,SAAUC,EAAY1sC,GACjD,OAAIA,EAAQ,GAAKA,EAAQysC,GAAYhwC,OAAS,IAAMiwC,EAAWI,WACpD,KAGJJ,QAOXJ,IAAoC,IAAvBG,GAAYhwC,QAAiBgwC,GAAY,GAAGK,aAAiB1B,GAASqB,GAAY,GAAGG,YAAcH,GAAY,GAAGE,SAAWnB,IAC1IiB,GAAc,KA5ClBA,GAAc1D,EAVd0D,GAAchqC,EAAIgqC,IAAa,SAAUC,GACrC,OAAI1hC,EAAKm/B,GAAa,SAAU8D,GAC5B,OAAOvB,EAAW5wC,OAASmyC,KAEpBvB,EAGJ,SAmDX1C,EACOyC,IAIX9E,EAAK3sC,IAAQ,SAAUQ,GACnB,IAAI9B,EAAM+wC,EAAajvC,EAAMM,MAEzB4wC,EAAa1hC,EAAKyhC,IAAa,SAAUC,GACzC,OAAOA,EAAW5wC,OAASN,EAAMM,QAGrC,GAAKpC,GAAQgzC,EAAb,CAIA,IAAIrqC,EAASqqC,EAAWe,iBAAiBpqC,MAAM,KAE/ChB,EAAO,GAAKgJ,SAAShJ,EAAO,GAAI,IAE5BA,EAAO,GACPA,EAAO,GAAKiJ,WAAW,KAAOjJ,EAAO,GAAI,IAEzCA,EAAO,GAAK,KAGhB,IAAI6rC,EAAYrsB,EAAW6mB,kBAAkBhvC,EAAK2I,EAAO,GAAIA,EAAO,IAEhEqlC,EAASD,EAAkB/tC,EAAKmoB,GAEhCssB,GAAgB,EAEhBC,EAAmB,GAGvBzG,EAAK9lB,EAAWwsB,qBAAqB,SAAUxG,GAC3C,IAAIL,EAAQx8B,EAAK08B,GAAQ,SAAUF,GAC/B,OAAOA,EAAM1rC,OAAS+rC,EAAU/rC,MAAQ0rC,EAAM9tC,MAAQw0C,KAGtD1G,IACA4G,EAAiB5G,EAAM1rC,MAAQ0rC,EAAMA,MAEjCvC,EAAezpC,EAAMmX,KAAMk1B,EAAU9lC,UACrCvG,EAAMmX,KAAOnX,EAAMmX,KAAK5I,QAAQ89B,EAAU9lC,OAAQylC,EAAMA,OACxD2G,GAAgB,OAMxBjD,IAAciD,IACdzG,EAAO5hC,KAAKyhC,GAEZI,EAAKD,GAAQ,SAAUF,GACnB,OAAI4G,EAAiB5G,EAAM1rC,QAAU0rC,EAAMA,OACnCvC,EAAezpC,EAAMmX,KAAM60B,EAAMA,aAQrC,EAGAvC,EAAezpC,EAAMmX,KAAM60B,EAAMA,QAEjChsC,EAAMmX,KAAOnX,EAAMmX,KAAK5I,QAAQy9B,EAAMA,MAAO4G,EAAiB5G,EAAM1rC,QAC7D,QAHX,WAUZd,GAASyH,EAAIzH,IAAQ,SAAUQ,GAC3B,IAAKA,EAAMM,KACP,OAAON,EAAMmX,KAGjB,IAAI+5B,EAAa1hC,EAAKyhC,IAAa,SAAUC,GACzC,OAAOA,EAAW5wC,OAASN,EAAMM,QAGrC,IAAK4wC,EACD,MAAO,GAGX,IAAI3uC,EAAM,GAiCV,OA/BIktC,IACAltC,GAAOvC,EAAMmX,OAGb23B,GAAcqB,KAAerB,GAAcmB,KAC3C1tC,GAAO,KACP4tC,IAAa,EACbF,GAAa,IAGbnB,GAAcmB,IAAenB,GAAcqB,MAC3C5tC,GAAO,KACP4tC,IAAa,EACbF,GAAa,GAGbnB,IAAeoC,EAAWtzC,MAAQ,GAAc,KAAT0E,IAAekN,EAAK+/B,EAAU2B,EAAW5wC,OAASkP,EAAKm/B,EAAauC,EAAW5wC,SACtHiC,GAAO,IACPusC,GAAa,GAGE,iBAAf9uC,EAAMM,MAA2B4wC,EAAWgB,iBAC5C3vC,GAAO2uC,EAAWgB,iBAElB3vC,GAAO2uC,EAAWc,eAGjBvC,IACDltC,GAAOvC,EAAMmX,MAGV5U,MAIG6E,KAAK,IAAImH,QAAQ,eAAgB,IAAIA,QAAQ,eAAgB,KAI/E,SAASukC,IACL,IAAIpE,EAAMvkC,KAAK2H,SAEXqgC,EAAW,SAAkB7xC,GAC7B,OAAOouC,EAAIpV,MAAMh5B,IAGjByyC,EAAYvjC,EAAKrF,KAAKm/B,MAAO6I,GAE7Ba,EA1+BR,SAAkBl3B,EAAO9V,GAGrB,IAFA,IAAIxB,EAAQsX,EAAM7a,OAEXuD,GAAS,GACZ,GAAIwB,EAAS8V,EAAMtX,IAAW,OAAOsX,EAAMtX,GAs+BhCyuC,CAAS9oC,KAAKm/B,MAAO6I,GAGpC,OAAQY,GACJ,IAAK,eACD,MAAO,OACX,IAAK,UACL,IAAK,UACD,MAAO,QACX,IAAK,QACD,MAAO,QACX,IAAK,OACD,GAAIA,IAAcC,EACd,MAAO,OAEf,IAAK,QACD,OAAID,IAAcC,EACP,QAGO,OAAd7oC,KAAK7H,OACL6H,KAAK7H,KAAO,QAGT,oBACX,IAAK,SACD,GAAIywC,IAAcC,EACd,MAAO,OAEf,IAAK,QACD,OAAID,IAAcC,EACP,QAGO,OAAd7oC,KAAK7H,OACL6H,KAAK7H,KAAO,QAGT,oBACX,QAKI,OAJkB,OAAd6H,KAAK7H,OACL6H,KAAK7H,KAAO,QAGT,gCAKnB,SAAS4wC,EAAK9nC,GACV,IAAKA,EACD,KAAM,2DAGVA,EAAQ0G,SAASlC,OAASu+B,EAC1B/iC,EAAQ0G,SAASpH,GAAGkF,OAASi/B,EAE7BzjC,EAAQ0G,SAASpH,GAAGkF,OAAO8iB,SAAW,CA0BlCpwB,KAAM,KAQNitC,SAAU,KAOVX,QAAS,KAMTsB,SAAU,KAMVF,SAAU,KAQV1B,UAAW,EAMXsB,OAAO,EAKPD,YAAa,KAQbvF,WAAY,KAYZsF,WAAW,EAWXD,cAAc,EAIdhF,aAAa,EAQboF,sBAAsB,EAStBtB,SAAUuE,EAMVtI,mBAAmB,EAWnBM,kBAAmB,IAKnBC,iBAAkB,IAQlBL,SAAU,CAAC,IAGft/B,EAAQg6B,aAAa,KAAMmH,GAI/B,IAAI4G,EAA0B,SAASnwB,EAAQnD,EAAQiqB,GACnD,OAAO9mB,EAAOooB,eAAevrB,EAAQiqB,IAGzCZ,EAjiCA,WAEI,KADa,GAEFkC,eAAe,KACxB,MAAOhnC,GACL,MAAkB,eAAXA,EAAElH,KAEb,OAAO,EA0hCWk2C,IAAmCnF,EAAqBkF,GAC9EhK,EAA8BD,GAAuB6E,EAA6BoF,GAGlF,IAAIE,EAA4B,SAASrwB,EAAQnD,EAAQiqB,GACrD,GAAsB,oBAAXvmC,QAA0BA,QAAUA,OAAO0mC,MAAQ1mC,OAAO0mC,KAAKC,aACtE,OAAO3mC,OAAO0mC,KAAKC,aAAarqB,EAAQiqB,GAASl6B,OAAOoT,IAYhE,OARAomB,EAAwB6E,EAAqBoF,GAC7ChK,EAAgCD,GAAyB2E,EAA6BsF,GAGtFH,EAAK/jC,GAIE+jC,GAzrDH,EAAO,CAAC,YAAkB,0BAAP,EAAF,GAAS,+BAa1BnxC,IAEAA,EAAKqN,0BAA4BrN,EAAKoN,OAASg3B,EAAQpkC,EAAKoN,QAAUg3B,I,2WC7BnCxnC,EAAQ,GAAhCkL,G,EAAXH,U,EAAWG,qBACX7K,EAAeL,EAAQ,GAAvBK,W,EAMJL,EAAQ,GAHVqK,E,EAAAA,gBACAQ,E,EAAAA,UACAD,E,EAAAA,gBAGF7M,EAAOD,QAAU,CACf0Q,UA0GF,SAAoB/B,EAASpB,EAAMspC,GAC/B,IAAMC,EAAa,GADqB,uBAGxC,IAHwC,IAGxC,EAHwC,iBAG9BxsC,EAH8B,QAI9B7I,EAAMsQ,KAAKC,UAAU6kC,EAAQrsC,KAAI,SAAAusC,GAAC,OAAIpoC,EAAQrC,SAAShC,EAAKysC,EAAGxpC,OAEhEupC,EAAWr1C,KACZq1C,EAAWr1C,GAAO,IAGtBq1C,EAAWr1C,GAAKuE,KAAKsE,IAPzB,EAAiBiD,EAAjB,+CAAuB,IAHiB,kFAaxC,OAAO3M,OAAOwJ,OAAO0sC,GAAYtsC,KAAI,SAAA+C,GAEjC,IAAMypC,EAASzpC,EAAK,GAKpB,OAFAypC,EAAM,MAAYzpC,EAEXypC,MA7HbrmC,mBAgBF,SAA4BhC,EAASa,EAAMjC,EAAMspC,GAC7C,GAAIrnC,EAAK+C,MAAK,SAAArJ,GAAI,OAAIA,GAAQA,EAAKxD,MAAM0H,IAAwBlE,EAAKpC,UAClE,GAAoB,IAAhByG,EAAK/I,OAAc,CAEnB,IAAMuD,EAAQyH,EAAKmN,WAAU,SAAAhb,GAAC,MAAa,UAATA,EAAE+D,MACpC,GAAIqC,GAAS,EAAG,CACZ,IAAMuC,EAAM,GACZA,EAAIvC,GAAS,EACbwF,EAAO,CAACjD,QAGX,CACD,IAAKusC,EAAS,CAGV,IAAMG,EAASzpC,EAAK,GACpBypC,EAAM,MAAYzpC,EAClBA,EAAO,CACHypC,GAGRzpC,EAAOA,EAAK/C,KAAI,SAAAF,GAAG,OAa/B,SAA4BqE,EAASa,EAAMjC,GAGvC,GAAoB,IAAhBA,EAAK/I,OACL,MAAO,GAIX,IAAM8F,EAAMiD,EAAK,GAqCjB,OAlCAiC,EAAKiD,SAAQ,SAACvJ,EAAMhJ,GAGhB,QAAsB,IAAXoK,EAAIpK,IAIXgJ,EAAKrF,OAAStB,EAAW2E,gBAAkBgC,EAAKpC,OAAQ,CACxD,KAAIoC,EAAKxD,MAAM0H,GAqBX,MAAM,IAAI/I,MAAM,uBAAyB6E,EAAKxD,IApB9C,IAAMuI,EAAKb,EAAoBlE,EAAKxD,IAEpC,GAA6B,IAAzBwD,EAAKvD,SAASnB,OACd,MAAM,IAAIH,MAAJ,mBAAsB6E,EAAKxD,GAA3B,sCAGV,IAAIuxC,EAAe1pC,EAEfrE,EAAK/B,SACL8vC,EAAeA,EAAa9vC,OAAOoF,EAAgBoC,EAASzF,EAAK/B,UAGjE+B,EAAK9B,OACL6vC,EAAappC,KAAKd,EAAU4B,EAASzF,EAAK9B,QAI9C,IAAMgH,EAAOlF,EAAKvD,SAAS6E,KAAI,SAAA7I,GAAC,OAAImL,EAAgB6B,EAASsoC,EAAct1C,EAAGuH,EAAKvC,aACnF2D,EAAIpK,GAAK+N,EAAE,WAAF,IAAMG,QAOpB9D,EA1DwB4sC,CAAkBvoC,EAASa,EAAMlF,EAAG,UAGnE,OAAOiD,K,oBCnDHhL,EAAeL,EAAQ,GAAvBK,WACAyK,EAAe9K,EAAQ,GAAvB8K,WAmDR,SAASmqC,EAAkB7qC,EAAUhC,EAAK8sC,EAAa5rC,GAAkB,IAAX+B,EAAW,uDAAN,KAC3D8pC,EAAK/sC,EAAG,QAAYkB,GAIxB,QAAkB,IAAP6rC,EAAoB,CAC3B,IAAIrpC,EAYJ,QAAiB,KANbA,EAFAopC,EAAYvzC,OAAStB,EAAWgF,OAE5B+C,GAAK8sC,EAAY1xC,GAAK,EAAK4E,EAAI9F,SAAU4yC,EAAY1xC,IAAQ0xC,EAAY1xC,GAAK,GAG9E4G,EAAShC,EAAK8sC,EAAa7pC,IAI/B,MAAM,IAAIlJ,MAAM,4BAA8B+yC,EAAY5zC,QAI9D8G,EAAG,QAAYkB,GAASwC,EACxBqpC,EAAKrpC,EAGT,OAAOqpC,EA5EXp3C,EAAOD,QAAU,CACf4Q,SAeF,SAAkBtE,EAAUiB,EAAM+pC,GAuB9B,OArBA/pC,EAAKkF,SAAQ,SAAAnI,GACTA,EAAG,QAAc,MAGrBiD,EAAOA,EAAKM,MAAK,SAAC9E,EAAGC,GACjB,IAAK,IAAIwC,EAAQ,EAAGA,EAAQ8rC,EAAQ9yC,OAAQgH,IAAS,CACjD,IAAM+rC,EAAYD,EAAQ9rC,GAEpBqR,EAAOs6B,EAAiB7qC,EAAUvD,EAAGwuC,EAAW/rC,GAChDuR,EAAOo6B,EAAiB7qC,EAAUtD,EAAGuuC,EAAW/rC,GAEhDqC,EAAOb,EAAW6P,EAAME,IAASw6B,EAAUnvC,MAAQ,EAAI,GAE7D,GAAa,IAATyF,EACA,OAAOA,EAIf,OAAO,Q,4UCvCf5N,EAAOD,QAAU,CACb+Q,W,mDAGIxO,EAAeL,EAAQ,GAAvBK,WACF8d,EAAmBne,EAAQ,IACzBuJ,EAA6BvJ,EAAQ,GAArCuJ,yB,iDAWR,WAA2B6F,EAAO5J,GAAlC,kGAEU5B,EAAM,GAFhB,8BAIuB4B,EAJvB,sEAIewB,EAJf,SAKiBrF,OAAStB,EAAWsE,OALrC,uBAMkB2wC,UAAU,mCAN5B,oBASuB/rC,EATvB,UASsD4U,EAAiB/O,EAAOpI,EAAKvD,SAAS,IAT5F,yBASiGuD,EAAK5C,QAA9FR,EAAIoD,EAAKxD,KATjB,yTAYWI,GAZX,6E,wCCjBA7F,EAAOD,QAAU,CACfgR,kBAgBF,SAA4B9H,GACxB,GAAIA,EAAKrF,OAAStB,EAAWwD,UACzB,MAAMyxC,UAAU,wBAGpB,IAAM1xC,EAAM,GALkB,uBAO9B,YAAqBoD,EAAKvD,SAA1B,+CAAoC,KAAzB8xC,EAAyB,QAC1Bh3C,EAAOg3C,EAAO/xC,GAAGgE,WAAWnB,cAE9B,oCAAoCa,KAAKquC,EAAO/xC,IAChDI,EAAIrF,GAAQg3C,EAAO9xC,SAAS,GAG5BG,EAAIrF,GAAQg3C,EAAO9xC,UAdG,kFAkB9B,IAAK+xC,EAAiBnlC,MAAK,SAAAolC,GAAE,YAAqC,IAA1B7xC,EAAI6xC,EAAGpvC,kBAC3C,MAAM,IAAIlE,MAAM,2CAGpB,GAAIyB,EAAIsE,SAAWtE,EAAImJ,MAAQnJ,EAAImM,QAC/B,MAAM5N,MAAM,6CAGXyB,EAAImJ,OACLnJ,EAAImJ,KAAO,IAGVnJ,EAAImM,SACLnM,EAAImM,OAAS,IAGS,IAAtBnM,EAAImM,OAAOzN,QACXsB,EAAImM,OAAOjM,KAAK,CAAEnC,KAAMtB,EAAWsE,OAAQnB,GAAI,MAGnD,OAAOI,GArDTmL,cA6DF,SAAwBvJ,GACpB,OAAOA,EAAM8C,KAAI,SAACtB,EAAKhJ,GAEnB,GAAIgJ,EAAKrF,OAAStB,EAAWwD,WACzBmD,EAAKrF,OAAStB,EAAWkD,gBACzByD,EAAKrF,OAAStB,EAAWsE,QACzBqC,EAAKrF,OAAStB,EAAW2E,cAEzB,MAAM,IAAI7C,MAAJ,oBAAuB6E,EAAKrF,KAA5B,uBAGV,IAAMpD,EAAQyI,EAAKrF,OAAStB,EAAWwD,WAAamD,EAAKrF,OAAStB,EAAWkD,eAAhE,mBACGvF,GAAMmO,OAAOnF,EAAKxD,IAElC,MAAO,CACHjF,OACA4F,MAAO6C,EAAK7C,MACZC,QAAS4C,EAAK5C,QACdqE,KAAMzB,EAAKzC,MACXF,UAAW2C,EAAK3C,UAChBG,MAAOwC,EAAKxC,MACZ+F,OAAQvD,EAAKvD,SACbkL,QAAS,GACTkR,SAAU,EACVxE,OAAQtc,OAAO,SAAD,OAAUiI,EAAK7C,OAAS5F,IACtCohB,SAAW3Y,EAAKrF,OAAStB,EAAWwD,WAAamD,EAAKrF,OAAStB,EAAWkD,eAAkByD,EAAO,UArF7GgI,cA8FF,SAAwBxJ,GAEtB,IAAM5B,EAAM,GAFiB,uBAI7B,YAAmB4B,EAAnB,+CAA0B,KAAfwB,EAAe,QACtB,GAAIA,EAAKrF,OAAStB,EAAWsE,OACzB,MAAM2wC,UAAU,sCAGpB,IAAKtuC,EAAKpC,QAAiC,iBAAhBoC,EAAKpC,OAC5B,MAAM0wC,UAAU,WAAD,OAAYtuC,EAAKxD,GAAjB,gCAGnBI,EAAIoD,EAAKxD,IAAMwD,EAAKpC,QAbK,kFAgB7B,OAAOhB,I,IArGDvD,EAAeL,EAAQ,GAAvBK,WAGFm1C,EAAmB,CAAC,OAAO,SAAS,SAAS,cAAc,SAAS,cAAc,eAAe,e,gBCfvGz3C,EAAOD,QAUP,SAAyBoK,EAAQqC,GAC7B,IAAMmrC,EAAWxtC,EAAO,GAExB,IAAKwtC,EACD,MAAO,GAGX,IAAMC,EAAQD,EAASjyC,SAASnB,OAC1B8B,EAAUqD,MAAMkuC,GAAO99B,KAAK,GAAGvP,KAAI,SAAC4O,EAAGlZ,GAAJ,oBAAiBA,EAAI,MAExD4F,EAAMsE,EAAOI,KAAI,SAAAF,GAAG,OAAIA,EAAI3E,SAAS6E,KAAI,SAAA7I,GAAC,OAAI6K,EAA2B7K,EAAG8K,SAIlF,OAFA3G,EAAIgyC,QAAQxxC,GAELR,G,IAtBH0G,EAA+BtK,EAAQ,GAAvCsK,4B,sBCFqDtK,EAAQ,GAA7DsK,E,EAAAA,2BAA4BG,E,EAAAA,qBAEpC1M,EAAOD,QAAU,CACboR,WAGJ,SAAoB7D,EAAMpB,EAAOnI,GAAqB,IAAbyI,EAAa,uDAAN,KAC5C,QAAqB,IAAVN,IAA0BQ,EAAqBR,GACtD,MAAM,IAAI9H,MAAJ,+CAAkD8H,EAAM3I,SAElE,QAAsB,IAAXQ,IAA2B2I,EAAqB3I,GACvD,MAAM,IAAIK,MAAJ,gDAAmDL,EAAOR,SAEpE,IAAMM,EAAQE,EAASwI,EAA2BxI,EAAQyI,GAAU,EAC9DxH,EAAMkH,EAASrI,EAAQ0I,EAA2BL,EAAOM,GAAWc,EAAK/I,OAC/E,OAAO+I,EAAKO,MAAMhK,EAAOmB,M,sBCfiC/C,EAAQ,GAA9D+d,E,EAAAA,QAASE,E,EAAAA,iBAAkBrQ,E,EAAAA,WAAY4P,E,EAAAA,W,EACNxd,EAAQ,GAAzC61C,E,EAAAA,gBAAiB3oC,E,EAAAA,YACjBd,EAAiBpM,EAAQ,GAAzBoM,aACAhC,EAAapK,EAAQ,GAArBoK,SACAgR,EAAsBpb,EAAQ,GAA9Bob,kBA0ER,SAAS06B,EAAWv3C,GAChB,OAAOiN,KAAK4B,OAAOyD,MAAK,SAAA3R,GAAC,OAAIA,EAAEX,OAASA,QAAmBiD,IAAXtC,EAAEuJ,QAOtD,SAASwgC,EAAW5tB,GAAsB,IAAdC,EAAc,uDAAL,IACjC,GAAK9P,KAAK2E,MAIV,OAAOiL,EAAkB5P,KAAK2E,MAAOkL,EAAQC,EAAU9P,KAAKjB,QArFhExM,EAAOD,QAAU,CACfqR,gBAoBF,SAAyBC,EAAzB,GAAyH,IAAvFhC,EAAuF,EAAvFA,OAAQuC,EAA+E,EAA/EA,QAASlE,EAAsE,EAAtEA,QAASsqC,EAA6D,EAA7DA,WAAY9lC,EAAiD,EAAjDA,KAAMT,EAA2C,EAA3CA,OAAQD,EAAmC,EAAnCA,MAAOD,EAA4B,EAA5BA,UAAWrB,EAAiB,EAAjBA,MAAO1D,EAAU,EAAVA,OAErGkC,EAAU,CACZ2C,QAEA9B,KAAM,GACNgD,WAAY,GACZjD,SAAU,GACVD,SAEA+C,MAAOR,EAAQQ,MACfC,OAAQT,EAAQS,OAChBglC,QAASzlC,EAAQ,YACjBglC,QAAShlC,EAAQ,YACjBlE,UAEArB,SAAU,KAEVyrC,kBACA3oC,cACAd,aAAc,KAEd0pC,YACA7M,YAEAlrB,UACAE,mBACArQ,aACA4P,aAEAu4B,aACA9lC,OACAV,QAEAC,SACAF,YACArD,cAAeuD,EAAOvD,eAAiB,GAEvCgC,QAEA1D,UAQJ,OALAkC,EAAQrC,SAAWA,EAAS5K,KAAKiN,GACjCA,EAAQL,aAAeA,EAAa5M,KAAKiN,GACzCA,EAAQqpC,UAAYA,EAAUt2C,KAAKiN,GACnCA,EAAQw8B,UAAYA,EAAUzpC,KAAKiN,GAE5BA,K,y/CC3EX,IACMmP,EAAU5b,EAAQ,I,EACoBA,EAAQ,GAA5CuJ,E,EAAAA,yBAA0BL,E,EAAAA,M,iDASlC,WAA2BkG,GAA3B,wOAEU4mC,EAAY,qCAAqCjuC,KAAKqH,IAFhE,uBAKc7Q,EAAOy3C,EAAU,GACjBC,EAAO7mC,EAAM1L,UAAUsyC,EAAU,GAAG1zC,QAE1CkJ,KAAK+D,MAAMhR,GAAQ03C,EAEnBr6B,EAAQ4C,QArBC,QAqBiBhT,KAAK+D,OAVvC,mBAYe,GAZf,YAeU2mC,EAAgB,6BAA6BnuC,KAAKqH,IAf5D,wBAkBc7Q,EAAO23C,EAAc,UAEpB1qC,KAAK+D,MAAMhR,GAElBqd,EAAQ4C,QAjCC,QAiCiBhT,KAAK+D,OAtBvC,mBAwBe,GAxBf,aA2BU4mC,EAAa,mEAAmEpuC,KAAKqH,IA3B/F,oBA8Bc7Q,EAAO43C,EAAW,GAClB52C,EAAM42C,EAAW,GAEnBn2B,EAAYzhB,EAGZA,EAAKiZ,SAAS,OAAM,EACQtO,EAAM3K,EAAM,IAAK,GADzB,SAClB0hB,EADkB,KACND,EADM,MApChC,EAwC8BxU,KAAK8D,UAAU2Q,IAAezU,KAAKgE,SAAjD4P,EAxChB,EAwCgBA,WAEMg3B,YA1CtB,kCA2CkBh3B,EAAUg3B,YAAYp2B,EAAWzgB,GA3CnD,kCA4CmB,GA5CnB,cA8CkB4C,MAAM,2CA9CxB,aAkDUk0C,EAAc,4DAA4DtuC,KAAKqH,IAlDzF,oBAqDc7Q,EAAO83C,EAAY,GACnB/oC,EAAO+oC,EAAY,GAAKA,EAAY,GAAGntC,MAAM,KAAKZ,KAAI,SAAAjK,GAAC,OAAIA,EAAEsF,UAAU,KAEzEqc,EAAYzhB,EAGZA,EAAKiZ,SAAS,OAAM,EACQtO,EAAM3K,EAAM,IAAK,GADzB,SAClB0hB,EADkB,KACND,EADM,MA3DhC,EA+D8BxU,KAAK8D,UAAU2Q,IAAezU,KAAKgE,QAAjD4P,EA/DhB,EA+DgBA,WACOk3B,gBAhEvB,uBAiEkBn0C,MAAM,qCAjExB,eAoEYo0C,EAAcnnC,EAAM1L,UAAU2yC,EAAY,GAAG/zC,QAE7Ck0C,EAAY,QAEZpnC,EAAMuP,SAAS,4BACf43B,EAAcA,EAAYt0C,OAAO,EAAGs0C,EAAYj0C,OAAS,0BAA0BA,QACnFk0C,EAAY,UACLpnC,EAAMuP,SAAS,6BACtB43B,EAAcA,EAAYt0C,OAAO,EAAGs0C,EAAYj0C,OAAS,0BAA0BA,QACnFk0C,EAAY,UA7ExB,UAgF4BhrC,KAAKgR,UAAU+5B,GAhF3C,eAgFYh3B,EAhFZ,OAkFck3B,EAAWltC,EAAyBgW,EAASjS,GAlF3D,UAmFc8R,EAAUk3B,gBAAgBt2B,EAAWy2B,EAAUD,GAnF7D,kCAoFe,GApFf,aAuFUE,EAAc,gGAAgG3uC,KAAKqH,IAvF7H,wBA0Fc7Q,EAAOm4C,EAAY,GACnBvpC,EAAMupC,EAAY,GAClBhsC,EAAOgsC,EAAY,GACnBC,EAAWD,EAAY,GACvBE,EAAYF,EAAY,GAE1B12B,EAAYzhB,EAGZA,EAAKiZ,SAAS,OAAM,EACQtO,EAAM3K,EAAM,IAAK,GADzB,SAClB0hB,EADkB,KACND,EADM,MAnGhC,UAwG4BxU,KAAKgR,UAAU,UAAY9R,GAxGvD,eAwGY6U,EAxGZ,OAyGcs3B,EAAYt3B,EAAQ,GAAG,GAzGrC,UA4GiC/T,KAAKgR,UAAU,UAAYo6B,GA5G5D,WA4GYE,EA5GZ,OA6GcC,EAAWD,EAAa,GAAG,GA7GzC,EA+G8BtrC,KAAK8D,UAAU2Q,IAAezU,KAAKgE,SAAjD4P,EA/GhB,EA+GgBA,WAEM43B,YAjHtB,kCAkHkB53B,EAAU43B,YAAYh3B,GAAW,SAAAvhB,GAAC,YAAUA,EAAV,KAAc0O,EAAM0pC,OAAc,SAAAp4C,GAAC,OAAIA,EAAEk4C,IAAaI,KAlH1G,kCAmHmB,GAnHnB,cAqHkB50C,MAAM,kCArHxB,aAyHU80C,EAAc,2FAA2FlvC,KAAKqH,IAzHxH,wBA4Hc7Q,EAAO04C,EAAY,GACnBN,EAAWM,EAAY,IAAMA,EAAY,GACzCL,GAAYK,EAAY,GAE1Bj3B,GAAYzhB,EAGZA,EAAKiZ,SAAS,OAAM,GACQtO,EAAM3K,EAAM,IAAK,GADzB,WAClB0hB,GADkB,MACND,GADM,OAnIhC,UAwIiCxU,KAAKgR,UAAU,UAAYo6B,IAxI5D,WAwIYE,GAxIZ,OAyIcC,GAAWD,GAAa,GAAG,GAzIzC,GA2I8BtrC,KAAK8D,UAAU2Q,KAAezU,KAAKgE,SAAjD4P,GA3IhB,GA2IgBA,WAEM83B,gBA7ItB,kCA8IkB93B,GAAU83B,gBAAgBl3B,IAAW,SAAAvhB,GAAC,OAAIA,EAAEk4C,IAAaI,MA9I3E,kCA+ImB,GA/InB,cAiJkB50C,MAAM,kCAjJxB,YAqJQ,eAAe+E,KAAKkI,GArJ5B,uBAsJcjN,MAAM,8EAtJpB,aAyJUg1C,GAAY,gCAAgCpvC,KAAKqH,IAzJ3D,qBA4Jc7Q,GAAO44C,GAAU,GAEnBn3B,GAAYzhB,GAGZA,GAAKiZ,SAAS,OAAM,GACQtO,EAAM3K,GAAM,IAAK,GADzB,WAClB0hB,GADkB,MACND,GADM,OAjKhC,GAqK8BxU,KAAK8D,UAAU2Q,KAAezU,KAAKgE,SAAjD4P,GArKhB,GAqKgBA,WAEMg4B,UAvKtB,oCAwKkBh4B,GAAUg4B,UAAUp3B,IAxKtC,mCAyKmB,GAzKnB,eA2KkB7d,MAAM,2CA3KxB,mCA+KW,GA/KX,mD,sBAPApE,EAAOD,QAAU,CAAEie,W,4CAAYC,SAJd","file":"ijmacd-query.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","const { tokenize, TOKEN_TYPES, DEBUG_TOKEN_TYPES } = require('./tokenizer');\r\nconst { repeat } = require('../util');\r\n\r\n/** @typedef {import('../..').Token} Token */\r\n/** @typedef {import('../..').Node} Node */\r\n/** @typedef {import('../..').WindowSpec} WindowSpec */\r\n/** @typedef {import('../..').NodeTypes} NodeTypes */\r\n/** @typedef {import('../..').TokenTypes} TokenTypes */\r\n\r\nconst { NODE_TYPES } = require('../types');\r\n\r\nconst DEBUG_NODE_TYPES = Object.keys(NODE_TYPES);\r\n\r\nconst KEYWORD_CONSTANTS = /^(?:MILLENNIUM|MILLENNIA|CENTURY|CENTURIES|(?:DECADE|YEAR|QUARTER|MONTH|WEEK|DAY|HOUR|MINUTE|SECOND|MILLISECOND|MICROSECOND)S?|WEEKDAY|DOY|DOW|EPOCH|ISO|ISOWEEK|ISOYEAR|TIMEZONE(?:_HOUR|_MINUTE)?|INT|FLOAT|STRING|NUM|DATE)\\b/i;\r\n\r\nmodule.exports = {\r\n    parseTokenList: parseFromTokenList,\r\n\r\n    parse (sql) {\r\n        const preProcessors = [ stringsThatAreReallyFunctionCalls ];\r\n\r\n        const tokens = preProcessors.reduce((tokens, processor) => processor(tokens), tokenize(sql));\r\n\r\n        const postProcessors = [ castKeywordStrings, extractKeywordStrings ];\r\n\r\n        return postProcessors.reduce((ast, processor) => processor(ast), parseFromTokenList(tokens, sql));\r\n    },\r\n\r\n    NODE_TYPES,\r\n    DEBUG_NODE_TYPES,\r\n    KEYWORD_CONSTANTS,\r\n};\r\n\r\nclass TokenError extends Error {\r\n    /**\r\n     *\r\n     * @param {Token} token\r\n     * @param {string} source\r\n     * @param {TokenTypes} expectedType\r\n     * @param {string} expectedValue\r\n     */\r\n    constructor (token, source, expectedType=undefined, expectedValue=undefined) {\r\n        const tokenMessage = token ?\r\n            `Invalid token found: [${DEBUG_TOKEN_TYPES[token.type]} ${token.value}] at ${token.start}` :\r\n            \"Unexpected end of tokens\";\r\n\r\n        let message = tokenMessage;\r\n\r\n        if (typeof expectedType !== \"undefined\") {\r\n            message += `\\nExpected: [${DEBUG_TOKEN_TYPES[expectedType]}${typeof expectedValue !== \"undefined\" ? ` '${expectedValue}'`: \"\"}]`;\r\n        }\r\n\r\n        const offset = Math.max(0, token.start - 5);\r\n        message += `\\nSource:     ${source.substr(offset, 15)}`;\r\n        message += `\\nError here: ${repeat(\" \", Math.min(5, offset))}^`;\r\n\r\n        super(message);\r\n    }\r\n}\r\n\r\nclass ClauseError extends Error {}\r\n\r\n\r\n/**\r\n * Implement token exceptions\r\n * @param {Token[]} tokenList\r\n */\r\nfunction preParse (tokenList) {\r\n    for (let i = 0; i < tokenList.length; i++) {\r\n        const t = tokenList[i];\r\n\r\n        // RANGE() is a function not a keyword\r\n        if (t.type === TOKEN_TYPES.KEYWORD && t.value === \"RANGE\"\r\n            && i < tokenList.length - 1 && tokenList[i+1].type === TOKEN_TYPES.BRACKET)\r\n        {\r\n            t.type = TOKEN_TYPES.NAME;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Token[]} tokenList\r\n * @param {string} source\r\n * @returns {Node}\r\n */\r\nfunction parseFromTokenList (tokenList, source=\"\") {\r\n    let i = 0;\r\n\r\n    // Pre parsing token substitutions\r\n    preParse(tokenList);\r\n\r\n    /**\r\n     * Peek ahead but don't consume the next token\r\n     * @param {number} type\r\n     * @param {string} value\r\n     * @returns {boolean}\r\n     */\r\n    function peek (type, value=undefined) {\r\n        const current = tokenList[i];\r\n\r\n        if (!current) {\r\n            return false;\r\n        }\r\n\r\n        if ((type !== current.type) || (typeof value !== \"undefined\" && value !== current.value)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Check if the next token matches the provided type\r\n     * and consume if so.\r\n     * @param {number} type\r\n     * @param {string} value\r\n     * @returns {boolean}\r\n     */\r\n    function suspect (type, value=undefined) {\r\n        if (peek(type, value)) {\r\n\r\n            // If we're returning true, move to next token automatically\r\n            next();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Consume and return a specific type. If the next token\r\n     * is not exactly as expected this function throws.\r\n     * @param {number} type\r\n     * @param {string} value\r\n     * @returns {Token}\r\n     */\r\n    function expect (type, value=undefined) {\r\n        const current = tokenList[i];\r\n\r\n        if (!current) {\r\n            throw new TokenError(null, source, type, value);\r\n        }\r\n\r\n        if ((type !== current.type) || (typeof value !== \"undefined\" && value !== current.value)) {\r\n            throw new TokenError(current, source, type, value);\r\n        }\r\n\r\n        return tokenList[i++];\r\n    }\r\n\r\n    function current () {\r\n        return tokenList[i];\r\n    }\r\n\r\n    function next () {\r\n        return tokenList[i++];\r\n    }\r\n\r\n    function prev () {\r\n        return tokenList[--i];\r\n    }\r\n\r\n    function end () {\r\n        return i >= tokenList.length;\r\n    }\r\n\r\n    function isList () {\r\n        // This implementation will allow a leading comma in a list\r\n        suspect(TOKEN_TYPES.COMMA);\r\n        return (!end() && !peek(TOKEN_TYPES.KEYWORD) && !peek(TOKEN_TYPES.QUERY_OPERATOR) && !peek(TOKEN_TYPES.BRACKET, \")\"));\r\n    }\r\n\r\n    function descendQueryExpression () {\r\n        const { start } = current();\r\n\r\n        let root = descendStatement();\r\n\r\n        while (peek(TOKEN_TYPES.QUERY_OPERATOR)) {\r\n\r\n            const t = next();\r\n\r\n            const op = {\r\n                type: NODE_TYPES.COMPOUND_QUERY,\r\n                id: t.value,\r\n                children: [ root, descendStatement() ],\r\n            };\r\n\r\n            op.source = source.substring(start, current() && current().start).trim();\r\n\r\n            root = op;\r\n        }\r\n\r\n        return root;\r\n    }\r\n\r\n    function descendStatement () {\r\n        const { start } = current();\r\n\r\n        /** @type {Node} */\r\n        let out = {\r\n            type: NODE_TYPES.STATEMENT,\r\n            id: null,\r\n            children: [],\r\n        };\r\n\r\n        while (peek(TOKEN_TYPES.KEYWORD)) {\r\n            out.children.push(descendClause());\r\n        }\r\n\r\n        out.source = source.substring(start, current() && current().start).trim();\r\n\r\n        return out;\r\n    }\r\n\r\n    function descendClause () {\r\n        const t = expect(TOKEN_TYPES.KEYWORD);\r\n\r\n        /** @type {Node} */\r\n        let out = {\r\n            type: NODE_TYPES.CLAUSE,\r\n            id: t.value,\r\n            children: [],\r\n        };\r\n\r\n        switch (t.value) {\r\n            case \"FROM\":\r\n                while (isList()) {\r\n                    const c = current();\r\n                    /** @type {Node} */\r\n                    let child;\r\n\r\n                    // First check for a sub-query\r\n                    if (suspect(TOKEN_TYPES.BRACKET, \"(\")) {\r\n                        child = descendQueryExpression();\r\n\r\n                        expect(TOKEN_TYPES.BRACKET, \")\");\r\n                    } else {\r\n                        // It can't quite be an expression but it can be a function\r\n                        // call i.e. RANGE()\r\n                        child = descendNode();\r\n                    }\r\n                    out.children.push(child);\r\n\r\n                    if (suspect(TOKEN_TYPES.KEYWORD, \"AS\")) {\r\n                        child.alias = expect(TOKEN_TYPES.NAME).value\r\n\r\n                        // Column rename\r\n                        if (suspect(TOKEN_TYPES.BRACKET, \"(\")) {\r\n                            child.headers = [];\r\n\r\n                            while(isList()) {\r\n                                const id = expect(TOKEN_TYPES.NAME).value;\r\n                                child.headers.push(id);\r\n                            }\r\n\r\n                            expect(TOKEN_TYPES.BRACKET, \")\");\r\n                        }\r\n                    }\r\n\r\n                    if (suspect(TOKEN_TYPES.KEYWORD, \"ON\")) {\r\n                        child.predicate = descendExpression();\r\n                        child.source += ` ON ${child.predicate.source}`;\r\n\r\n                    } else if (suspect(TOKEN_TYPES.KEYWORD, \"USING\")) {\r\n                        const name = expect(TOKEN_TYPES.NAME);\r\n                        child.using = name.value;\r\n                        child.source += ` USING ${name.value}`;\r\n                    }\r\n\r\n                    child.inner = true;\r\n                    if (suspect(TOKEN_TYPES.KEYWORD, \"LEFT\")) {\r\n                        child.inner = false;\r\n                    } else {\r\n                        suspect(TOKEN_TYPES.KEYWORD, \"INNER\");\r\n                    }\r\n\r\n                    child.source = source.substring(c.start, current() && current().start).trim();\r\n                }\r\n            break;\r\n            case \"SELECT\":\r\n                if (suspect(TOKEN_TYPES.KEYWORD, \"DISTINCT\")) {\r\n                    out.distinct = true;\r\n                }\r\n\r\n                while (isList()) {\r\n                    const c = current();\r\n                    const child = descendExpression();\r\n                    out.children.push(child);\r\n\r\n                    if (suspect(TOKEN_TYPES.KEYWORD, \"AS\")) {\r\n                        const alias = expect(TOKEN_TYPES.NAME);\r\n\r\n                        child.alias = alias.value;\r\n                        child.source += ` AS ${alias.value}`;\r\n                    }\r\n\r\n                    child.source = source.substring(c.start, current() && current().start).trim();\r\n                }\r\n            break;\r\n            case \"ORDER BY\":\r\n                while (isList()) {\r\n                    // Consume each item in the list following the keyword\r\n                    out.children.push(descendOrder());\r\n                }\r\n            break;\r\n            case \"GROUP BY\":\r\n                while (isList()) {\r\n                    // Consume each item in the list following the keyword\r\n                    out.children.push(descendExpression());\r\n                }\r\n            break;\r\n            case \"WHERE\":\r\n            case \"HAVING\":\r\n            case \"LIMIT\":\r\n            case \"OFFSET\":\r\n                // Single expression child\r\n                out.children.push(descendExpression());\r\n            break;\r\n            case \"WITH\":\r\n                while (isList()) {\r\n                    const c = current();\r\n                    const id = expect(TOKEN_TYPES.NAME).value;\r\n\r\n                    /** @type {Node} */\r\n                    const child = { type: NODE_TYPES.SYMBOL, id };\r\n                    out.children.push(child);\r\n\r\n                    if (suspect(TOKEN_TYPES.BRACKET, \"(\")) {\r\n                        child.headers = [];\r\n\r\n                        while(isList()) {\r\n                            const id = expect(TOKEN_TYPES.NAME).value;\r\n                            child.headers.push(id);\r\n                        }\r\n\r\n                        expect(TOKEN_TYPES.BRACKET, \")\");\r\n                    }\r\n\r\n                    expect(TOKEN_TYPES.KEYWORD, \"AS\");\r\n                    expect(TOKEN_TYPES.BRACKET, \"(\");\r\n\r\n                    child.children = [ descendQueryExpression() ];\r\n\r\n                    expect(TOKEN_TYPES.BRACKET, \")\");\r\n\r\n                    child.source = source.substring(c.start, current() && current().start).trim();\r\n                }\r\n            break;\r\n            case \"WINDOW\":\r\n                while (isList()) {\r\n                    const c = current();\r\n                    const id = expect(TOKEN_TYPES.NAME).value;\r\n\r\n                    /** @type {Node} */\r\n                    const child = { type: NODE_TYPES.SYMBOL, id };\r\n\r\n                    expect(TOKEN_TYPES.KEYWORD, \"AS\");\r\n                    expect(TOKEN_TYPES.BRACKET, \"(\");\r\n\r\n                    child.window = descendWindow();\r\n\r\n                    expect(TOKEN_TYPES.BRACKET, \")\");\r\n\r\n                    out.children.push(child);\r\n\r\n                    child.source = source.substring(c.start, current() && current().start).trim();\r\n                }\r\n            break;\r\n            case \"VALUES\":\r\n                while (isList()) {\r\n                    const c = current();\r\n                    const child = { type: NODE_TYPES.LIST, id: null, children: [] };\r\n                    out.children.push(child);\r\n\r\n                    expect(TOKEN_TYPES.BRACKET, \"(\");\r\n                    while (isList()) {\r\n                        child.children.push(descendExpression());\r\n                    }\r\n                    expect(TOKEN_TYPES.BRACKET, \")\");\r\n\r\n                    child.source = source.substring(c.start, current() && current().start).trim();\r\n                }\r\n            break;\r\n            case \"EXPLAIN\":\r\n                if (suspect(TOKEN_TYPES.NAME, \"ANALYSE\")) {\r\n                    out.children.push({ type: NODE_TYPES.SYMBOL, id: \"ANALYSE\" });\r\n                }\r\n                else if (suspect(TOKEN_TYPES.NAME, \"AST\")) {\r\n                    out.children.push({ type: NODE_TYPES.SYMBOL, id: \"AST\" });\r\n                } else {\r\n                    out.children.push({ type: NODE_TYPES.SYMBOL, id: \"QUERY\" });\r\n                }\r\n            break;\r\n            case \"CREATE TABLE\":\r\n            case \"DROP TABLE\":\r\n            case \"INSERT INTO\": \r\n            case \"DELETE FROM\": {\r\n                const id = expect(TOKEN_TYPES.NAME).value;\r\n                out.children.push({ type: NODE_TYPES.SYMBOL, id });\r\n            }\r\n            break;\r\n            case \"UPDATE\": {\r\n                const id = expect(TOKEN_TYPES.NAME).value;\r\n                // Abuse alias field to save table name\r\n                out.alias = id;\r\n\r\n                expect(TOKEN_TYPES.KEYWORD, \"SET\");\r\n\r\n                while (isList()) {\r\n                    const name = expect(TOKEN_TYPES.NAME).value;\r\n\r\n                    expect(TOKEN_TYPES.OPERATOR, \"=\");\r\n\r\n                    const value = descendExpression();\r\n\r\n                    out.children.push({\r\n                        type: NODE_TYPES.OPERATOR,\r\n                        id: \"=\",\r\n                        children: [\r\n                            { type: NODE_TYPES.SYMBOL, id: name },\r\n                            value,\r\n                        ],\r\n                    });\r\n                }\r\n            }\r\n            break;\r\n            default:\r\n                throw new TokenError(t, source, TOKEN_TYPES.KEYWORD);\r\n        }\r\n\r\n        out.source = source.substring(t.start, current() && current().start).trim();\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @returns {Node}\r\n     */\r\n    function descendNode () {\r\n        /** @type {Node} */\r\n        let out;\r\n        const t = current();\r\n\r\n        switch (t.type) {\r\n            case TOKEN_TYPES.NAME:\r\n                next();\r\n\r\n                if (suspect(TOKEN_TYPES.BRACKET, \"(\")) {\r\n                    // Open bracket signifies a function call\r\n\r\n                    out = { type: NODE_TYPES.FUNCTION_CALL, id: t.value, children: [] };\r\n\r\n                    if (suspect(TOKEN_TYPES.KEYWORD, \"DISTINCT\")) {\r\n                        out.distinct = true;\r\n                    }\r\n\r\n                    while (isList()) {\r\n\r\n                        // Loop through adding each parameter\r\n                        out.children.push(descendExpression());\r\n\r\n                        if (\r\n                            // Consume a comma if needed\r\n                            !suspect(TOKEN_TYPES.COMMA) &&\r\n\r\n                            // This is special treatment for\r\n                            //      `EXTRACT(x FROM y)`\r\n                            //      `CAST(x AS y)`\r\n                            //      `CAST(x AS y FORMAT z)`\r\n                            // They can be treated like a comma.\r\n                            !suspect(TOKEN_TYPES.KEYWORD)\r\n                        )\r\n                        {\r\n                            // We didn't have a comma (or FROM/AS) so we can't have\r\n                            // any more function parameters\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    expect(TOKEN_TYPES.BRACKET, \")\");\r\n\r\n                    if (suspect(TOKEN_TYPES.KEYWORD, \"FILTER\")) {\r\n\r\n                        expect(TOKEN_TYPES.BRACKET, \"(\");\r\n\r\n                        expect(TOKEN_TYPES.KEYWORD, \"WHERE\");\r\n\r\n                        out.filter = descendExpression();\r\n\r\n                        expect(TOKEN_TYPES.BRACKET, \")\");\r\n                    }\r\n\r\n                    if (suspect(TOKEN_TYPES.KEYWORD, \"WITHIN GROUP\")) {\r\n\r\n                        expect(TOKEN_TYPES.BRACKET, \"(\");\r\n\r\n                        expect(TOKEN_TYPES.KEYWORD, \"ORDER BY\");\r\n\r\n                        out.order = descendOrder();\r\n\r\n                        expect(TOKEN_TYPES.BRACKET, \")\");\r\n                    }\r\n\r\n                    if (suspect(TOKEN_TYPES.KEYWORD, \"OVER\")) {\r\n\r\n                        const bracket = suspect(TOKEN_TYPES.BRACKET, \"(\");\r\n\r\n                        if (peek(TOKEN_TYPES.NAME)) {\r\n                            out.window = next().value;\r\n                            bracket && expect(TOKEN_TYPES.BRACKET, \")\");\r\n                        }\r\n                        else {\r\n                            bracket || expect(TOKEN_TYPES.BRACKET, \"(\");\r\n                            out.window = descendWindow();\r\n                            expect(TOKEN_TYPES.BRACKET, \")\");\r\n                        }\r\n\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                out = { type: NODE_TYPES.SYMBOL, id: t.value };\r\n                break;\r\n            case TOKEN_TYPES.STRING:\r\n                next();\r\n                out = { type: NODE_TYPES.STRING, id: t.value };\r\n                break;\r\n            case TOKEN_TYPES.NUMBER:\r\n                next();\r\n                out = { type: NODE_TYPES.NUMBER, id: +t.value };\r\n                break;\r\n            case TOKEN_TYPES.CONSTANT:\r\n                next();\r\n                out = { type: NODE_TYPES.CONSTANT, id: t.value };\r\n                break;\r\n            case TOKEN_TYPES.PARAM:\r\n                next();\r\n                out = { type: NODE_TYPES.PARAM, id: t.value };\r\n                break;\r\n            case TOKEN_TYPES.OPERATOR:\r\n                next();\r\n                out = { type: NODE_TYPES.OPERATOR, id: t.value, children: [] };\r\n                break;\r\n            case TOKEN_TYPES.BRACKET:\r\n                next();\r\n\r\n                if (peek(TOKEN_TYPES.KEYWORD)) {\r\n                    out = descendQueryExpression();\r\n                    expect(TOKEN_TYPES.BRACKET, \")\");\r\n                    break;\r\n                }\r\n\r\n                out = { type: NODE_TYPES.LIST, id: null, children: [] };\r\n\r\n                while(isList()) {\r\n                    out.children.push(descendExpression());\r\n                }\r\n\r\n                expect(TOKEN_TYPES.BRACKET, \")\");\r\n\r\n                break;\r\n            case TOKEN_TYPES.COMMA:\r\n                throw new Error(`ParseError: Unexpected comma at ${t.start}`);\r\n            default:\r\n                throw new TokenError(t, source);\r\n        }\r\n\r\n        out.source = source.substring(t.start, current() && current().start).trim();\r\n\r\n        return out;\r\n    }\r\n\r\n    function descendExpression () {\r\n        const { start } = current();\r\n\r\n        const nodes = [];\r\n\r\n        while (!end() && !peek(TOKEN_TYPES.BRACKET, \")\")) {\r\n            try {\r\n                nodes.push(descendNode());\r\n            } catch (e) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (nodes.length === 0) {\r\n            throw Error(\"Expected an expression but didn't find one\");\r\n        }\r\n\r\n        if (nodes.length === 1) {\r\n            return nodes[0];\r\n        }\r\n\r\n        markBAnd(nodes);\r\n\r\n        bubbleOperators(nodes);\r\n\r\n        stripBAnd(nodes);\r\n\r\n        let index = 0;\r\n\r\n        /**\r\n         *\r\n         * @param {Node[]} nodes\r\n         * @returns {Node}\r\n         */\r\n        function assembleExpressionTree (nodes) {\r\n            const root = nodes[index];\r\n\r\n            if (!root || root.type !== NODE_TYPES.OPERATOR) {\r\n                throw Error(\"Expecting an operator\");\r\n            }\r\n\r\n            // // Unary prefix\r\n            // if (t.value === \"NOT\") {}\r\n\r\n            let left = nodes[++index];\r\n\r\n            if (left.type === NODE_TYPES.OPERATOR) {\r\n                left = assembleExpressionTree(nodes);\r\n            } else if (left.type === NODE_TYPES.LIST) {\r\n                // If we have a list here it's not actually a list\r\n                // it's really a subexpression in brackets.\r\n                // That subexpression has already been correctly parsed.\r\n                left = left.children[0];\r\n                left.source = `(${left.source})`;\r\n            }\r\n\r\n            root.children[0] = left;\r\n\r\n            // Unary postfix\r\n            if (root.id === \"IS NULL\" ||\r\n                root.id === \"IS NOT NULL\")\r\n            {\r\n                return root;\r\n            }\r\n\r\n            let right = nodes[++index];\r\n\r\n            if (right.type === NODE_TYPES.OPERATOR) {\r\n                right = assembleExpressionTree(nodes);\r\n            } else if (right.type === NODE_TYPES.LIST && (root.id !== \"IN\" && root.id !== \"NOT IN\")) {\r\n                // Most of the time 'LISTs' are just bracketed sub-expressions\r\n                // but the IN operators can take a list\r\n                right = right.children[0];\r\n                right.source = `(${right.source})`;\r\n            }\r\n\r\n            root.children[1] = right;\r\n\r\n            root.source = `${root.children[0].source} ${root.source} ${root.children.length > 1 ? root.children[1].source:''}`;\r\n\r\n            if (root.id === \"BETWEEN\") {\r\n                // Between has a third child node\r\n                let farRight = nodes[++index];\r\n\r\n                if (farRight.type === NODE_TYPES.OPERATOR) {\r\n                    farRight = assembleExpressionTree(nodes);\r\n                } else if (farRight.type === NODE_TYPES.LIST) {\r\n                    farRight = farRight.children[0];\r\n                }\r\n\r\n                root.children[2] = farRight;\r\n\r\n                root.source += ` AND ${farRight.source}`;\r\n            }\r\n\r\n            return root;\r\n        }\r\n\r\n        const root = assembleExpressionTree(nodes);\r\n\r\n        root.source = source.substring(start, current() && current().start).trim();\r\n\r\n        return root;\r\n    }\r\n\r\n    /**\r\n     * @returns {Node}\r\n     */\r\n    function descendOrder () {\r\n        const out = descendExpression();\r\n\r\n        if (suspect(TOKEN_TYPES.KEYWORD, \"DESC\")) {\r\n            out.desc = true;\r\n        } else {\r\n            // We can just skip over ASC\r\n            suspect(TOKEN_TYPES.KEYWORD, \"ASC\");\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @returns {WindowSpec}\r\n     */\r\n    function descendWindow() {\r\n        /** @type {WindowSpec} */\r\n        const window = {};\r\n\r\n        if (suspect(TOKEN_TYPES.KEYWORD, \"PARTITION BY\")) {\r\n            window.partition = descendExpression();\r\n        }\r\n\r\n        if (suspect(TOKEN_TYPES.KEYWORD, \"ORDER BY\")) {\r\n            window.order = descendOrder();\r\n        }\r\n\r\n        // These probably should be keywords rather than names.\r\n        // However when they're added to the tokenizer it clashes with\r\n        // the RANGE() table valued function.\r\n        if (peek(TOKEN_TYPES.KEYWORD, \"ROWS\") ||\r\n            peek(TOKEN_TYPES.KEYWORD, \"RANGE\") ||\r\n            peek(TOKEN_TYPES.KEYWORD, \"GROUPS\")\r\n        ) {\r\n            // @ts-ignore\r\n            window.frameUnit = next().value.toLowerCase();\r\n\r\n            expect(TOKEN_TYPES.OPERATOR, \"BETWEEN\");\r\n\r\n            if (suspect(TOKEN_TYPES.KEYWORD, \"UNBOUNDED\")) {\r\n                window.preceding = Number.POSITIVE_INFINITY;\r\n                expect(TOKEN_TYPES.KEYWORD, \"PRECEDING\");\r\n\r\n            } else if (suspect(TOKEN_TYPES.KEYWORD, \"CURRENT ROW\")) {\r\n                window.preceding = 0;\r\n\r\n            } else {\r\n                window.preceding = +expect(TOKEN_TYPES.NUMBER).value;\r\n                expect(TOKEN_TYPES.KEYWORD, \"PRECEDING\");\r\n            }\r\n\r\n            expect(TOKEN_TYPES.OPERATOR, \"AND\");\r\n\r\n            if (suspect(TOKEN_TYPES.KEYWORD, \"UNBOUNDED\")) {\r\n                window.following = Number.POSITIVE_INFINITY;\r\n                expect(TOKEN_TYPES.KEYWORD, \"FOLLOWING\");\r\n\r\n            } else if (suspect(TOKEN_TYPES.KEYWORD, \"CURRENT ROW\")) {\r\n                window.following = 0;\r\n\r\n            } else {\r\n                window.following = +expect(TOKEN_TYPES.NUMBER).value;\r\n                expect(TOKEN_TYPES.KEYWORD, \"FOLLOWING\");\r\n            }\r\n        }\r\n\r\n        return window;\r\n    }\r\n\r\n    return descendQueryExpression();\r\n}\r\n\r\n/**\r\n * The 'AND' following a 'BETWEEN' should have higher\r\n * binding power than normal ANDs. In order to process\r\n * properly we can just strip out the first AND after\r\n * every BETWEEN.\r\n * @param {Node[]} nodes\r\n */\r\nfunction markBAnd (nodes) {\r\n    let pending = false;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const n = nodes[i];\r\n        if (!n) break;\r\n\r\n        if (n.id === \"BETWEEN\") {\r\n            pending = true;\r\n        } else if (pending && n.id === \"AND\") {\r\n            n.id = \"BAND\";\r\n            pending = false;\r\n        }\r\n    }\r\n}\r\n\r\nfunction stripBAnd (nodes) {\r\n    for (const i in nodes) {\r\n        if (nodes[i].id === \"BAND\") {\r\n            nodes.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Node[]} nodes\r\n */\r\nfunction bubbleOperators (nodes) {\r\n    for (let i = nodes.length - 1; i > 0; i--) {\r\n        const n = nodes[i];\r\n\r\n        if (n.type !== NODE_TYPES.OPERATOR) {\r\n            continue;\r\n        }\r\n\r\n        for (let j = i; j > 0; j--) {\r\n            const a = nodes[j];\r\n            const b = nodes[j-1];\r\n\r\n            if (b.type === NODE_TYPES.OPERATOR && getPrecedence(b) < getPrecedence(a)) {\r\n                // i--;\r\n                break;\r\n            }\r\n\r\n            nodes[j-1] = a;\r\n            nodes[j] = b;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Get operator precedence\r\n * Higher number is tighter binding\r\n * @param {Node} node\r\n */\r\nfunction getPrecedence (node) {\r\n    switch (node.id) {\r\n        case \"AND\":\r\n            return 10;\r\n        case \"OR\":\r\n            return 15;\r\n        case \"BETWEEN\":\r\n        case \"BAND\":\r\n        case \">\":\r\n        case \"<\":\r\n        case \"=\":\r\n        case \"!=\":\r\n        case \"<=\":\r\n        case \">=\":\r\n        case \"IS NULL\":\r\n        case \"IS NOT NULL\":\r\n        case \"IN\":\r\n        case \"NOT IN\":\r\n        case \"LIKE\":\r\n        case \"NOT LIKE\":\r\n        case \"REGEXP\":\r\n        case \"NOT REGEXP\":\r\n            return 20;\r\n        case \"||\":\r\n            return 25;\r\n        case \"+\":\r\n        case \"-\":\r\n            return 30;\r\n        case \"*\":\r\n        case \"/\":\r\n            return 40;\r\n        case \"??\":\r\n            return 50;\r\n        default:\r\n            return 100;\r\n    }\r\n}\r\n\r\n// The tokenizer recognizes certain \"keywords\" as strings\r\n// however that might not be correct.\r\n// An example of this is when the token is followed by an\r\n// open bracket because it means it must be a function call.\r\nfunction stringsThatAreReallyFunctionCalls (tokens) {\r\n    for (let i = 0; i < tokens.length - 1; i++) {\r\n        if (tokens[i].type === TOKEN_TYPES.STRING &&\r\n            tokens[i+1].type === TOKEN_TYPES.BRACKET &&\r\n            tokens[i+1].value === \"(\")\r\n        {\r\n            tokens[i].type = TOKEN_TYPES.NAME;\r\n        }\r\n    }\r\n    return tokens;\r\n}\r\n\r\n\r\n/**\r\n * CAST (X AS ____)\r\n * @param {Node} ast \r\n */\r\nfunction castKeywordStrings (ast) {\r\n    ast = walk(ast, node => {\r\n        if (node.type === NODE_TYPES.FUNCTION_CALL && /^CAST$/i.test(node.id)) {\r\n            const c2 = node.children[1];\r\n            if (/^(INT|REAL|FLOAT|NUM|DATE|STRING)$/.test(c2.id)) {\r\n                c2.type = NODE_TYPES.STRING;\r\n            }\r\n        }\r\n        return node;\r\n    });\r\n    return ast;\r\n}\r\n\r\n/**\r\n * EXTRACT (____ FROM )\r\n * @param {Node} ast \r\n */\r\nfunction extractKeywordStrings (ast) {\r\n    ast = walk(ast, node => {\r\n        if (node.type === NODE_TYPES.FUNCTION_CALL && /^EXTRACT$/i.test(node.id)) {\r\n            const c1 = node.children[0];\r\n            if (KEYWORD_CONSTANTS.test(c1.id)) {\r\n                c1.type = NODE_TYPES.STRING;\r\n            }\r\n        }\r\n        return node;\r\n    });\r\n    return ast;\r\n}\r\n\r\nfunction walk (node, callback) {\r\n    node = callback(node);\r\n    if (node.children) {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            node.children[i] = walk(node.children[i], callback);\r\n        }\r\n    }\r\n    return node;\r\n}","module.exports = {\r\n  scalar,\r\n  getColumnTypes,\r\n  repeat,\r\n  isNullDate,\r\n  isValidDate,\r\n  deepClone,\r\n  matchAll,\r\n  matchInBrackets,\r\n  queryResultToObjectArray,\r\n  toUTF8Array,\r\n  split,\r\n  zip,\r\n};\r\n\r\n/**\r\n * Only let scalar values through.\r\n *\r\n * If passed an object or array returns undefined\r\n * @param {any} data\r\n * @return {number|string|boolean|Date}\r\n */\r\nfunction scalar (data) {\r\n  if (data === null || typeof data === \"undefined\") {\r\n      return null;\r\n  }\r\n  if (data.toString() === \"[object Object]\") {\r\n      return; // undefined\r\n  }\r\n  if (Array.isArray(data)) {\r\n      return; // undefined\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction getColumnTypes (row) {\r\n\r\n    if (row) {\r\n        return Object\r\n            .entries(row)\r\n            .filter(([name, value]) => typeof scalar(value) !== \"undefined\")\r\n            .map(([name, value]) => ({ name, type: value instanceof Date ? \"date\" : typeof value }));\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\n/**\r\n*\r\n* @param {string} char\r\n* @param {number} n\r\n*/\r\nfunction repeat (char, n) {\r\n  return Array(n + 1).join(char);\r\n}\r\n\r\n/**\r\n* Returns true iff param is Date object AND is invalid\r\n* @param {any} date\r\n* @returns {boolean}\r\n*/\r\nfunction isNullDate (date) {\r\n  // if this has already passed through `moment.format` it might appear as 'Invalid Date'\r\n  return date === \"Invalid date\" || date instanceof Date && isNaN(+date);\r\n}\r\n\r\n/**\r\n* Returns true iff param is Date object AND is valid\r\n* @param {any} date\r\n* @returns {boolean}\r\n*/\r\nfunction isValidDate (date) {\r\n  return date instanceof Date && !isNaN(+date);\r\n}\r\n\r\n/**\r\n* Clone an object semi-deeply.\r\n*\r\n* All the objects on the specified path need to be deep cloned.\r\n* Everything else can be shallow cloned.\r\n*\r\n* @param {any} result\r\n* @param {string} path\r\n* @returns {any}\r\n*/\r\nfunction deepClone (result, path) {\r\n  // Top level clone only\r\n  if (path.length === 0) return { ...result };\r\n\r\n  // Could be deeper... more accurate\r\n  // At the moment it actually only clones one level deep\r\n  const pathParts = path.split(\".\");\r\n  return { ...result, [pathParts[0]]: { ...result[pathParts[0]] } };\r\n}\r\n\r\n/**\r\n * @param {string} string\r\n * @param {RegExp} regex\r\n * @returns {RegExpExecArray[]}\r\n */\r\nfunction matchAll(string, regex) {\r\n\t/** @type {RegExpExecArray[]} */\r\n\tconst out = [];\r\n\r\n\tlet match;\r\n\r\n\tdo {\r\n\t\tmatch = regex.exec(string);\r\n\r\n\t\tif (match) {\r\n\t\t\tout.push(match);\r\n\t\t}\r\n\t} while (match || !regex.global);\r\n\r\n\treturn out;\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} input\r\n * @returns {string}\r\n */\r\nfunction matchInBrackets (input) {\r\n  const brackets = matchAll(input, /[\\(\\)]/g);\r\n\r\n  if (brackets.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  let depth = 0;\r\n  for (const bracket of brackets) {\r\n    if (bracket[0] === \"(\") {\r\n      depth++;\r\n    } else {\r\n      depth--;\r\n    }\r\n\r\n    if (depth === 0) {\r\n      return input.substring(brackets[0].index + 1, bracket.index);\r\n    }\r\n  }\r\n\r\n  throw Error(\"Unmatched bracket\");\r\n}\r\n\r\n/**\r\n*\r\n* @param {any[][]} result\r\n* @returns {any[]}\r\n*/\r\nfunction queryResultToObjectArray (result, newHeaders = null) {\r\n  const originalHeaders = result.shift();\r\n\r\n  return result.map(r => zip(newHeaders || originalHeaders, r));\r\n}\r\n\r\n/**\r\n*\r\n* @param {string[]} keys\r\n* @param {any[]} values\r\n* @returns {{ [key: string]: any }}\r\n*/\r\nfunction zip (keys, values) {\r\n  const out = {};\r\n  for (let i = 0; i < keys.length; i++) {\r\n      out[keys[i]] = values[i];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} str\r\n * @returns {number[]}\r\n */\r\nfunction toUTF8Array (str) {\r\n  /** @type {number[]} */\r\n  var utf8 = [];\r\n  for (var i=0; i < str.length; i++) {\r\n      var charcode = str.charCodeAt(i);\r\n      if (charcode < 0x80) utf8.push(charcode);\r\n      else if (charcode < 0x800) {\r\n          utf8.push(0xc0 | (charcode >> 6),\r\n                    0x80 | (charcode & 0x3f));\r\n      }\r\n      else if (charcode < 0xd800 || charcode >= 0xe000) {\r\n          utf8.push(0xe0 | (charcode >> 12),\r\n                    0x80 | ((charcode>>6) & 0x3f),\r\n                    0x80 | (charcode & 0x3f));\r\n      }\r\n      // surrogate pair\r\n      else {\r\n          i++;\r\n          // UTF-16 encodes 0x10000-0x10FFFF by\r\n          // subtracting 0x10000 and splitting the\r\n          // 20 bits of 0x0-0xFFFFF into two halves\r\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\r\n                    | (str.charCodeAt(i) & 0x3ff))\r\n          utf8.push(0xf0 | (charcode >>18),\r\n                    0x80 | ((charcode>>12) & 0x3f),\r\n                    0x80 | ((charcode>>6) & 0x3f),\r\n                    0x80 | (charcode & 0x3f));\r\n      }\r\n  }\r\n  return utf8;\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} input\r\n * @param {string} splitter\r\n * @param {number} limit\r\n */\r\nfunction split (input, splitter, limit) {\r\n    const index = input.indexOf(splitter);\r\n\r\n    if (index === -1) {\r\n        return [input];\r\n    }\r\n\r\n    if (limit > 2) {\r\n        throw Error(\"Split above 2 not implemented.\");\r\n    }\r\n\r\n    return [ input.substr(0, index), input.substr(index + 1) ];\r\n}","const evaluateQuery = require('./evaluate-query');\r\n\r\nclass SymbolError extends Error { }\r\n\r\nmodule.exports = {\r\n    evaluate,\r\n    getRowEvaluator,\r\n    evaluateConstantExpression,\r\n    isConstantExpression,\r\n    aggregateValues,\r\n    rowSorter,\r\n    comparator,\r\n    SymbolError,\r\n};\r\n\r\nconst { NODE_TYPES, KEYWORD_CONSTANTS } = require('../prepare/parser');\r\n\r\nconst {\r\n    OPERATORS,\r\n    VALUE_FUNCTIONS,\r\n    WINDOW_FUNCTIONS,\r\n    AGGREGATE_FUNCTIONS,\r\n    TABLE_VALUED_FUNCTIONS,\r\n    isStrictNull,\r\n} = require('./const');\r\n\r\nconst { isValidDate } = require('../util');\r\n\r\n/**\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').ParsedTable} ParsedTable\r\n * @typedef {import('../..').WindowSpec} WindowSpec\r\n * @typedef {import('../..').ResultRow} ResultRow\r\n * @typedef {import('../..').QueryCallbacks} QueryCallbacks\r\n * @typedef {import('../..').QueryContext} QueryContext\r\n */\r\n\r\n /** @typedef {string|number|boolean|Date} Primitive */\r\n\r\n/**\r\n * Execute an expresion from AST nodes\r\n * @this {QueryContext}\r\n * @param {ResultRow} row\r\n * @param {Node} node\r\n * @param {ResultRow[]} [rows]\r\n * @returns {Primitive|Primitive[]}\r\n */\r\nfunction evaluate (row, node, rows=null) {\r\n    switch (node.type) {\r\n        case NODE_TYPES.STATEMENT: {\r\n            throw Error(\"Statements can only be evaluated as one of the explicit column values.\");\r\n            // evaluating queries requires promisifying a lot of code \r\n            // const outerContext = { context: this, row, rows };\r\n            // return await evaluateQuery(this.query, node, outerContext, this.params);\r\n        }\r\n        case NODE_TYPES.FUNCTION_CALL: {\r\n            const fnName = node.id;\r\n\r\n            // First check if we're evaluating a window function\r\n            if (node.window) {\r\n                let group = [ ...rows ];\r\n                const window = typeof node.window === \"string\" ? this.windows[node.window] : node.window;\r\n\r\n                if (window.partition) {\r\n                    const partitionVal = this.evaluate(row, window.partition, group);\r\n                    group = group.filter(r => OPERATORS['='](this.evaluate(r, window.partition, group), partitionVal));\r\n                }\r\n\r\n                if (window.order) {\r\n                    group.sort(rowSorter(this.evaluate, window.order));\r\n                }\r\n\r\n                const index = group.indexOf(row);\r\n\r\n                if (window.frameUnit) {\r\n\r\n                    if (!window.order) {\r\n                        throw Error(\"Frames can only be specified with an ORDER BY clause\");\r\n                    }\r\n\r\n                    if (window.frameUnit === \"rows\") {\r\n                        const start = Math.max(index - window.preceding, 0);\r\n                        group = group.slice(start, index + window.following + 1);\r\n\r\n                    } else if (window.frameUnit === \"range\") {\r\n                        const currentVal = +this.evaluate(row, window.order, rows);\r\n                        const min = currentVal - window.preceding;\r\n                        const max = currentVal + window.following;\r\n\r\n                        group = group.filter(r => {\r\n                            const v = this.evaluate(r, window.order, rows);\r\n                            return min <= v && v <= max;\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if (node.id in WINDOW_FUNCTIONS) {\r\n                    if (!window.order) {\r\n                        throw Error(\"Window functions require ORDER BY in OVER clause\");\r\n                    }\r\n\r\n                    /** @type {(index: number, order: Primitive[], rows: ResultRow[], evaluator, ...nodes: Node[]) => Primitive} */\r\n                    const fn = WINDOW_FUNCTIONS[node.id];\r\n\r\n                    const orderVals = group.map(getRowEvaluator(this, window.order, rows));\r\n                    return fn(index, orderVals, group, this.evaluate, ...node.children);\r\n                }\r\n\r\n                if (node.id in AGGREGATE_FUNCTIONS) {\r\n                    if (node.children.length === 0) {\r\n                        throw new Error(`Function ${node.id} requires at least one paramater.`);\r\n                    }\r\n\r\n                    /** @type {(values: any[]) => Primitive} */\r\n                    const fn = AGGREGATE_FUNCTIONS[node.id];\r\n\r\n                    // Aggregate values could have '*' as a child (paramater) node\r\n                    // so they get run through a special function first\r\n                    return fn(aggregateValues(this, group, node.children[0], node.distinct));\r\n                }\r\n\r\n                throw Error(`${node.id} is not a window function`);\r\n            }\r\n\r\n            if (fnName in AGGREGATE_FUNCTIONS) {\r\n                if (row['group']) {\r\n                    // Aggregate functions are evaluated after grouping.\r\n                    //\r\n                    // Normally the main query will fill in the aggregates\r\n                    // in a separate step rather than here.\r\n                    //\r\n                    // There is a special case meaning we end up here instead\r\n                    // though, namely a brand new aggregate function named\r\n                    // in a HAVING clase. It gets evaluated here.\r\n\r\n                    /** @type {(values: any[]) => Primitive} */\r\n                    const fn = AGGREGATE_FUNCTIONS[fnName];\r\n\r\n                    return fn(aggregateValues(this, row['group'], node.children[0]));\r\n                }\r\n                return;\r\n            }\r\n\r\n            /** @type {(...args) => Primitive} */\r\n            const fn = (typeof this.userFunctions !== \"undefined\" && this.userFunctions[fnName]) || VALUE_FUNCTIONS[fnName];\r\n\r\n            if (!fn) {\r\n                if (fnName in TABLE_VALUED_FUNCTIONS) {\r\n                    throw new Error(`Tried to call a table-valued-function as a value function: ${fnName}`);\r\n                }\r\n                throw new Error(`Tried to call a non-existant function (${fnName})`);\r\n            }\r\n\r\n            // We need to wrap each function call paramater in try/catch in case\r\n            // we have some function like COALESCE\r\n            const args = node.children.map(c => {\r\n                try {\r\n                    return this.evaluate(row, c, rows);\r\n                } catch (e) {\r\n                    return null;\r\n                }\r\n            });\r\n\r\n            try {\r\n                return fn(...args);\r\n            } catch (e) {\r\n                return null;\r\n            }\r\n\r\n        }\r\n        case NODE_TYPES.SYMBOL: {\r\n            const id = String(node.id);\r\n            try {\r\n                // resolveValue won't be defined for constant expressions\r\n                // if it is defined then do normal symbol resolution\r\n                if (this.resolveValue instanceof Function) {\r\n                    return this.resolveValue(row, id, rows);\r\n                }\r\n\r\n                throw new Error(`Symbol detected in Constant Expression: \"${node.id}\"`);\r\n            } catch (e) {\r\n                // If no symbol in the result set matched then it might be one of these keywords\r\n                if (id.match(KEYWORD_CONSTANTS)) {\r\n                    return id.toUpperCase();\r\n                }\r\n\r\n                // if not, rethrow the exception\r\n                throw e;\r\n            }\r\n        }\r\n        case NODE_TYPES.STRING: {\r\n            // We need to check for date here and convert if necessary\r\n            if (/^\\d{4}-\\d{2}-\\d{2}/.test(String(node.id))) {\r\n                const d = new Date(node.id);\r\n                if (isValidDate(d)) {\r\n                    return d;\r\n                }\r\n            }\r\n\r\n            return String(node.id);\r\n        }\r\n        case NODE_TYPES.NUMBER: {\r\n            return +node.id;\r\n        }\r\n        case NODE_TYPES.CONSTANT: {\r\n            if (node.id === \"TRUE\") return true;\r\n            if (node.id === \"FALSE\") return false;\r\n            if (node.id === \"NULL\") return null;\r\n            if (node.id === \"NOW\") return new Date;\r\n            if (node.id === \"PI\") return Math.PI;\r\n            throw Error(\"Unrecognised constant: \" + node.id);\r\n        }\r\n        case NODE_TYPES.PARAM: {\r\n            if (typeof this.params === \"undefined\" || this.params === null || typeof this.params[node.id] === \"undefined\")\r\n                throw Error(\"Named parameter not found '\" + node.id + \"'\");\r\n            return this.params[node.id];\r\n        }\r\n        case NODE_TYPES.OPERATOR: {\r\n            // Special treatment for AND and OR because we don't need to evaluate all\r\n            // operands beforehand\r\n            if (node.id === \"AND\") {\r\n                return Boolean(this.evaluate(row, node.children[0], rows) && this.evaluate(row, node.children[1], rows));\r\n            }\r\n            if (node.id === \"OR\") {\r\n                return Boolean(this.evaluate(row, node.children[0], rows) || this.evaluate(row, node.children[1], rows));\r\n            }\r\n\r\n            /** @type {(...operands) => string|number|boolean} */\r\n            const op = OPERATORS[node.id];\r\n\r\n            if (!op) {\r\n                throw new Error(`Unsupported operator '${node.id}'`);\r\n            }\r\n\r\n            return op(...node.children.map(c => this.evaluate(row, c, rows)));\r\n        }\r\n        case NODE_TYPES.CLAUSE: {\r\n            if (node.id === \"WHERE\" || node.id === \"ON\") {\r\n                if (node.children.length > 0) {\r\n                    return Boolean(this.evaluate(row, node.children[0], rows));\r\n                } else {\r\n                    throw new Error(`Empty predicate clause: ${node.id}`);\r\n                }\r\n            }\r\n            throw Error(`Cannot evaluate ${node.id} clause`);\r\n        }\r\n        case NODE_TYPES.LIST: {\r\n            return node.children.map(c => this.evaluate(row, c, rows));\r\n        }\r\n        default: {\r\n            throw new Error(`Can't execute node type ${node.type}: ${node.id}`);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a row evaluator (suitable for use in .map() or .filter())\r\n * which turns SymbolErrors into nulls\r\n * @param {QueryContext} context\r\n * @param {Node} node\r\n * @param {ResultRow[]} rows\r\n * @returns {(row: ResultRow) => any}\r\n */\r\nfunction getRowEvaluator(context, node, rows=null) {\r\n    return row => {\r\n        try {\r\n            return context.evaluate(row, node, rows);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof SymbolError) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction evaluateConstantExpression(node, params=null) {\r\n    const dummyContext = { evaluate, params };\r\n    return evaluate.call(dummyContext, null, node);\r\n}\r\n\r\n/**\r\n * Generate a comparator for the purpose of sorting\r\n * @param {Node} order\r\n * @param {ResultRow[]} [rows]\r\n * @returns {(a: ResultRow, b: ResultRow) => number}\r\n */\r\nfunction rowSorter(evaluator, order, rows=null) {\r\n    return (ra, rb) => comparator(evaluator(ra, order, rows), evaluator(rb, order, rows)) * (order.desc ? -1 : 1);\r\n}\r\n/**\r\n * Compares two values of the same type\r\n * @param {any} a\r\n * @param {any} b\r\n */\r\nfunction comparator (a, b) {\r\n    if (a instanceof Date) {\r\n        a = +a;\r\n    }\r\n\r\n    if (b instanceof Date) {\r\n        b = +b;\r\n    }\r\n\r\n    // Coerce into numbers if we can\r\n    if (isFinite(a) && isFinite(b)) {\r\n        return +a - +b;\r\n    }\r\n\r\n    return String(a).localeCompare(b);\r\n}\r\n\r\n/**\r\n * Map rows to values following the rules for aggregate functions.\r\n * @param {QueryContext} context\r\n * @param {ResultRow[]} rows\r\n * @param {Node} expr\r\n * @param {boolean} distinct\r\n * @returns {any[]}\r\n */\r\nfunction aggregateValues (context, rows, expr, distinct = false) {\r\n  // COUNT(*) includes all rows, NULLS and all\r\n  // we don't need to evaluate anything and can just bail early\r\n  if (expr.id === \"*\") {\r\n      return rows.map(r => true);\r\n  }\r\n\r\n  let values = rows.map(getRowEvaluator(context, expr, rows));\r\n\r\n  // All aggregate functions ignore null except COUNT(*)\r\n  // We'll use our convenient 'IS NOT NULL' function to do the\r\n  // filtering for us.\r\n  values = values.filter(v => !isStrictNull(v));\r\n\r\n  if (distinct) {\r\n      values = Array.from(new Set(values));\r\n  }\r\n\r\n  return values;\r\n}\r\n\r\n/**\r\n * Determines whether or not an expression is purely constant.\r\n * @param {Node} expr\r\n * @returns {boolean}\r\n */\r\nfunction isConstantExpression (expr) {\r\n    if (expr.type === NODE_TYPES.NUMBER ||\r\n        expr.type === NODE_TYPES.STRING ||\r\n        expr.type === NODE_TYPES.CONSTANT ||\r\n        expr.type === NODE_TYPES.PARAM)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    if (expr.type === NODE_TYPES.FUNCTION_CALL ||\r\n        expr.type === NODE_TYPES.OPERATOR)\r\n    {\r\n        return expr.children.every(c => isConstantExpression(c));\r\n    }\r\n\r\n    return false;\r\n}","const PendingValue = Symbol(\"Pending Value\");\r\n\r\nmodule.exports = {\r\n    PendingValue,\r\n    resolvePath,\r\n    resolveValue,\r\n    setTableAliases,\r\n    getTableAliasMap,\r\n};\r\nconst { SymbolError } = require('./evaluate');\r\nconst { getRowData } = require('../prepare/joins');\r\nconst { populateValue } = require('./process');\r\n\r\n/**\r\n * @typedef {import('../..')} Query\r\n * @typedef {import('../..').QueryContext} QueryContext\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').ResultRow} ResultRow\r\n * @typedef {import('../..').ParsedTable} ParsedTable\r\n */\r\n\r\n/**\r\n * Resolve a col into a concrete value (constant or from object)\r\n * @this {QueryContext}\r\n * @param {ResultRow} row\r\n * @param {string} col\r\n * @param {ResultRow[]} [rows]\r\n * @returns {string|number|boolean|Date}\r\n */\r\nfunction resolveValue (row, col, rows=null) {\r\n    const { tables, colAlias, cols } = this;\r\n\r\n    // If row is null, there's nothing we can do\r\n    if (row === null) {\r\n        throw Error(\"Resolve Value Error: NULL Row\");\r\n    }\r\n\r\n    // First check if we have an exact alias match,\r\n    // this trumps other methods in name collisions\r\n    if (typeof colAlias[col] !== \"undefined\") {\r\n        const i = colAlias[col];\r\n\r\n        // We've struck upon an alias but perhaps the value hasn't been\r\n        // evaluated yet.\r\n        // Let's see if we can be helpful and fill it in now if needed.\r\n        //\r\n        // Note: the row value must be exactly undefined, PendingValue is not good enough\r\n        if (typeof row[i] === \"undefined\") {\r\n            // await populateValue.call(this, row, i, cols[i], rows);\r\n\r\n            /*\r\n                Without await we have to evaluate the columns in the natural\r\n                order they depend on each other.\r\n                i.e. they have to be specified in the right order for us in the\r\n                original query\r\n            */\r\n            populateValue(this, row, i, cols[i], rows);\r\n        }\r\n\r\n        if (typeof row[i] !== \"undefined\" && row[i] !== PendingValue) {\r\n            return row[i];\r\n        }\r\n    }\r\n\r\n    const tableAlias = getTableAliasMap(tables);\r\n\r\n    let head = col;\r\n    let tail;\r\n    while(head.length > 0) {\r\n\r\n        // FROM Table AS t SELECT t.value\r\n        if (head in tableAlias) {\r\n            const t = tableAlias[head];\r\n\r\n            const data = getRowData(row, t);\r\n\r\n            // resolveValue() is called when searching for a join\r\n            // if we're at that stage getRowData(row, t) will be\r\n            // empty so we need to throw a SymbolError.\r\n            if (typeof data === \"undefined\") {\r\n                throw new SymbolError(\"[Pre-Join] Unable to resolve symbol: \" + col);\r\n            }\r\n\r\n            return resolvePath(data, tail);\r\n        }\r\n\r\n        // FROM Table SELECT Table.value\r\n        const matching = tables.filter(t => t.name === head);\r\n        if (matching.length > 0) {\r\n            const t = matching[0];\r\n            return resolvePath(getRowData(row, t), tail);\r\n        }\r\n\r\n        head = head.substr(0, head.lastIndexOf(\".\"));\r\n        tail = col.substr(head.length + 1);\r\n    }\r\n\r\n    // We will try each of the tables in turn\r\n    for (const table of tables) {\r\n        const data = getRowData(row, table);\r\n\r\n        if (typeof data === \"undefined\") {\r\n            continue;\r\n        }\r\n\r\n        // i.e. LEFT JOIN where right table is NULL\r\n        if (data === null) {\r\n            return null;\r\n        }\r\n\r\n        const val = resolvePath(data, col);\r\n\r\n        if (typeof val !== \"undefined\") {\r\n            return val;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * If we've got this far we've exhausted our own context but maybe\r\n     * we're actually being evaluated inside an outer context?\r\n     * This is our last shot.\r\n     */\r\n    if (this.outer) {\r\n        const val = this.outer.context.resolveValue(this.outer.row, col, this.outer.rows);\r\n\r\n        if (typeof val !== \"undefined\") {\r\n            return val;\r\n        }\r\n    }\r\n\r\n    // SymbolErrors help non-strict WHERE filtering\r\n    throw new SymbolError(\"Unable to resolve symbol: \" + col);\r\n}\r\n\r\n/**\r\n * Traverse a dotted path to resolve a deep value\r\n * @param {any} data\r\n * @param {string} path\r\n * @returns {any}\r\n */\r\nfunction resolvePath(data, path) {\r\n  if (typeof data === \"undefined\" || data === null) {\r\n      return null;\r\n      // throw new Error(\"Trying to resolve a path on a null object: \" + path)\r\n  }\r\n\r\n  if (typeof path === \"undefined\") {\r\n      return data;\r\n      // throw new Error(\"No path provided\");\r\n  }\r\n\r\n  // Check if the object key name exists with literal dots\r\n  // nb. this can only search one level deep\r\n  if (path in data) {\r\n      return data[path];\r\n  }\r\n\r\n  // resolve dotted path\r\n  let val = data;\r\n  for (const name of path.split(\".\")) {\r\n      val = val[name];\r\n      if (typeof val === \"undefined\") {\r\n          val = null;\r\n          break;\r\n      }\r\n  }\r\n\r\n  if (val !== null && typeof val !== \"undefined\") {\r\n      return val;\r\n  }\r\n\r\n  return; // undefined\r\n}\r\n\r\n/**\r\n * Make sure each table has a unique alias\r\n * @param {ParsedTable[]} tables\r\n */\r\nfunction setTableAliases (tables) {\r\n  /** @type {{ [alias: string]: ParsedTable }} */\r\n  const tableAlias = {};\r\n\r\n  for (const t of tables) {\r\n      let n = t.alias || t.name;\r\n      let i = 1;\r\n      while (n in tableAlias) {\r\n          n = `${t.alias || t.name}_${i++}`;\r\n      }\r\n      t.alias = n;\r\n      tableAlias[n] = t;\r\n  }\r\n}\r\n\r\n/**\r\n* Creates a map from alias to table\r\n* @param {ParsedTable[]} tables\r\n* @returns {{ [alias: string]: ParsedTable }}\r\n*/\r\nfunction getTableAliasMap (tables) {\r\n  /** @type {{ [alias: string]: ParsedTable }} */\r\n  const tableAlias = {};\r\n\r\n  for (const t of tables) {\r\n      let n = t.alias;\r\n      tableAlias[n] = t;\r\n  }\r\n\r\n  return tableAlias;\r\n}","\r\nconst NODE_TYPES = {\r\n    UNKNOWN: 0,\r\n    STATEMENT: 1,\r\n    CLAUSE: 2,\r\n    FUNCTION_CALL: 3,\r\n    SYMBOL: 4,\r\n    STRING: 5,\r\n    NUMBER: 6,\r\n    OPERATOR: 7,\r\n    LIST: 8,\r\n    COMPOUND_QUERY: 9,\r\n    CONSTANT: 10,\r\n    PARAM: 11,\r\n};\r\n\r\n/**\r\n* TOKENS\r\n* @enum {number}\r\n*/\r\nconst TOKEN_TYPES = {\r\n   UNKNOWN: 0,\r\n   BRACKET: 1,\r\n   COMMA: 2,\r\n   KEYWORD: 3,\r\n   NAME: 4,\r\n   STRING: 5,\r\n   NUMBER: 6,\r\n   OPERATOR: 7,\r\n   QUERY_OPERATOR: 8,\r\n   CONSTANT: 9,\r\n   PARAM: 10,\r\n};\r\n\r\n\r\nmodule.exports = { NODE_TYPES, TOKEN_TYPES };","module.exports = evaluateQuery;\r\n\r\nconst { scalar } = require('../util');\r\nconst { getRows, processColumns, populateValues } = require('./process');\r\nconst { setTableAliases } = require('./resolve');\r\nconst { filterRows } = require('../finalise/filter');\r\nconst { groupRows, populateAggregates } = require ('./aggregates');\r\nconst { sortRows } = require('../finalise/sort');\r\nconst { explain } = require('../explain');\r\nconst { distinctResults } = require('./compound');\r\nconst { getCTEsMap } = require('../prepare/subquery');\r\nconst { nodeToQueryObject, nodesToTables, getWindowsMap } = require('../prepare/prepare');\r\nconst evaluateValues = require('./evaluate-values');\r\nconst { applyLimit } = require('../finalise/limit');\r\nconst { getQueryContext } = require('../prepare/context');\r\n\r\n/**\r\n * @typedef {import('../..')} Query\r\n * @typedef {import('../..').Schema} Schema\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').ParsedTable} ParsedTable\r\n * @typedef {import('../..').WindowSpec} WindowSpec\r\n * @typedef {import('../..').ResultRow} ResultRow\r\n * @typedef {import('../..').QueryCallbacks} QueryCallbacks\r\n * @typedef {import('../..').QueryContext} QueryContext\r\n */\r\n\r\n/**\r\n * @typedef OuterContext\r\n * @prop {QueryContext} context \r\n * @prop {ResultRow} row \r\n * @prop {ResultRow[]} rows\r\n */\r\n\r\n/**\r\n * @param {Query} query\r\n * @param {Node} statementNode\r\n * @param {OuterContext} [outer]\r\n * @param {{ [name: string]: any }} [params]\r\n * @return {Promise<any[]>}\r\n */\r\nasync function evaluateQuery (query, statementNode, outer = null, params = null) {\r\n    const { providers, views } = query;\r\n\r\n    // TODO: Only uses first provider\r\n    const key = Object.keys(providers)[0];\r\n    /** @type {Schema} */\r\n    const schema = providers[key] || {};\r\n    schema.name = key;\r\n\r\n    const output_buffer = [];\r\n    const output = row => output_buffer.push(row);\r\n\r\n    const clauses = nodeToQueryObject(statementNode);\r\n\r\n    if (typeof clauses.explain !== \"undefined\" && clauses.explain.id === \"AST\") {\r\n        const ast = { ...statementNode };\r\n        ast.source = ast.source.replace(\"EXPLAIN AST \", \"\");\r\n        ast.children = ast.children.filter(c => c.id !== \"EXPLAIN\");\r\n        return [['AST'], [JSON.stringify(ast, null, 4)]];\r\n    }\r\n\r\n    if (clauses.values) {\r\n        // VALUES clause trumps everything else\r\n        return evaluateValues(clauses.values, params);\r\n    }\r\n\r\n    const select = clauses.select;\r\n    const rawCols = select;\r\n\r\n    /** @type {ParsedTable[]} */\r\n    const tables = nodesToTables(clauses.from);\r\n    /** @type {{ [name: string]: any[] }} */\r\n    const CTEs = clauses.with ? await getCTEsMap(query, clauses.with) : {};\r\n    /** @type {{ [name: string]: WindowSpec }} */\r\n    const windows = clauses.window ? getWindowsMap(clauses.window) : {};\r\n\r\n    /** @type {QueryContext} */\r\n    const context = getQueryContext(query, {\r\n        tables,\r\n        clauses,\r\n        windows,\r\n        CTEs,\r\n        schema,\r\n        providers,\r\n        views,\r\n        outer,\r\n        params,\r\n    });\r\n\r\n    const evaluate = context.evaluate;\r\n\r\n    /** @type {ResultRow[]} */\r\n    let rows;\r\n\r\n    // Set auto aliases i.e. avoid duplicates\r\n    setTableAliases(tables);\r\n\r\n    if (tables.length === 0) {\r\n        // If there is no table specified create one token row\r\n        // so that we can return constants etc.\r\n        rows = [\r\n            []\r\n        ];\r\n    } else {\r\n        rows = await getRows(context);\r\n    }\r\n\r\n    /*************\r\n     * EXPLAIN\r\n     ************/\r\n\r\n    if (typeof clauses.explain !== \"undefined\") {\r\n        const analyse = clauses.explain.id == \"ANALYSE\";\r\n        return explain(tables, analyse);\r\n    }\r\n\r\n    /******************\r\n     * Filtering\r\n     *****************/\r\n\r\n    // One last filter, this time strict because there shouldn't be\r\n    // anything slipping through since we have all the data now.\r\n    rows = filterRows(context, rows, clauses.where);\r\n\r\n    /******************\r\n     * Columns\r\n     ******************/\r\n    processColumns(context, rawCols, rows);\r\n\r\n    /*****************\r\n     * Column Values\r\n     *****************/\r\n    await populateValues(context, context.cols, rows);\r\n\r\n    /*************\r\n     * Grouping\r\n     *************/\r\n    if (clauses['group by']) {\r\n        rows = groupRows(context, rows, clauses['group by']);\r\n    }\r\n\r\n    /**********************\r\n     * Aggregate Functions\r\n     *********************/\r\n    // Now see if there are any aggregate functions to apply\r\n    rows = populateAggregates(context, context.cols, rows, clauses['group by']);\r\n\r\n    /*******************\r\n     * query.Having Filtering\r\n     ******************/\r\n    if (clauses.having) {\r\n        rows = filterRows(context, rows, clauses.having);\r\n    }\r\n\r\n    /*******************\r\n     * Distinct\r\n     *******************/\r\n    if (statementNode.children.some(c => c.id === \"SELECT\" && c.distinct)) {\r\n        rows = distinctResults(rows);\r\n    }\r\n\r\n    /****************\r\n     * Sorting\r\n     ***************/\r\n    if (clauses['order by']) {\r\n        // Parse the orderBy clause into an array of objects\r\n        rows = sortRows(evaluate, rows, clauses['order by']);\r\n    }\r\n\r\n    /******************\r\n     * Limit and Offset\r\n     ******************/\r\n    rows = applyLimit(rows, clauses.limit, clauses.offset, params);\r\n\r\n    /*****************\r\n     * Output\r\n     ****************/\r\n\r\n    output(context.colHeaders);\r\n    rows.forEach(r => output(r.map(scalar)));\r\n    // Print to stderr\r\n    // console.warn(`${initialResultCount} results initally retrieved. ${rows.length} rows returned.`);\r\n\r\n    return output_buffer;\r\n}\r\n","const { queryResultToObjectArray, zip } = require('../util');\r\n\r\nconst moment = require('moment');\r\nconst momentDurationFormatSetup = require('moment-duration-format');\r\n// @ts-ignore\r\nmomentDurationFormatSetup(moment);\r\n\r\nconst { isNullDate, toUTF8Array } = require('../util');\r\n\r\nconst DAYS_OF_WEEK = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\n\r\nconst VALUE_FUNCTIONS = {\r\n    // Conditional functions\r\n    COALESCE: (...vs) => vs.find(OPERATORS['IS NOT NULL']),\r\n\r\n    // Number functions - Also all from Math.*\r\n    RAND: Math.random,\r\n    CAST (v, type, format=undefined) {\r\n        if (/^int|^float|^real/i.test(type) && v instanceof Date) return +v;\r\n        if (/^int/i.test(type)) return parseInt(v);\r\n        if (/^float|^real/i.test(type)) return parseFloat(v);\r\n        if (/^num/i.test(type)) return +v;\r\n        if (/^date$/i.test(type)) return moment(v).utc().format(format);\r\n        return String(v);\r\n    },\r\n    HEX: v => `0x${(+v).toString(16)}`,\r\n    BIN: v => `0b${(+v).toString(2)}`,\r\n\r\n    // String functions\r\n    SUBSTR: (v, from, length) => isStrictNull(v) ? null : String(v).substr(from, length),\r\n    REPLACE: (v, from, to) => isStrictNull(v) ? null : String(v).split(from).join(to),\r\n    REVERSE: v => isStrictNull(v) ? null : String(v).split(\"\").reverse().join(\"\"),\r\n    LOWER: v => isStrictNull(v) ? null : String(v).toLowerCase(),\r\n    UPPER: v => isStrictNull(v) ? null : String(v).toUpperCase(),\r\n    CONCAT: (...vs) => vs.join(\"\"),\r\n    CHAR: String.fromCodePoint,\r\n    UNICODE: s => isStrictNull(s) ? null : String(s).codePointAt(0),\r\n    JSON_STRINGIFY: JSON.stringify,\r\n    TO_UTF8_HEX: v => toUTF8Array(v).map(n => n.toString(16).padStart(2, \"0\")).join(\" \"),\r\n    LPAD: (v, n, c=\"\") => String(v).padStart(n, c),\r\n    RPAD: (v, n, c=\"\") => String(v).padEnd(n, c),\r\n    TRIM: (v) => isStrictNull(v) ? null : String(v).trim(),\r\n\r\n    REGEXP_EXTRACT (value, regexp) {\r\n        try {\r\n            const re = RegExp(regexp);\r\n            const match = re.exec(value);\r\n            return match ? (match[1] || match[0]) : null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    // Date functions\r\n    WEEKDAY: v => DAYS_OF_WEEK[v],\r\n    DATE: d => moment(d).format(\"YYYY-MM-DD\"),\r\n    TIME: d => moment(d).format(\"HH:mm:ss\"),\r\n    DATETIME: d => moment(d).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    CURRENT_DATE: () => new Date(),\r\n    // @ts-ignore\r\n    DURATION: m => moment.duration(m, \"milliseconds\").format(),\r\n    DATE_ADD: (date, v, part) => moment(date).add(v, part).toDate(),\r\n    DATE_DIFF: (dateA, dateB, part) => moment(dateA).diff(dateB, part),\r\n    AGE: (date, part) => moment().diff(date, part),\r\n    EXTRACT (part, v) {\r\n        const m = moment(v);\r\n        switch (part) {\r\n            case 'CENTURY':\r\n            case 'CENTURIES': return Math.ceil(m.year() / 100);\r\n            case 'DAY':\r\n            case 'DAYS': return m.date();\r\n            // Should be ceil, no? Postgres uses floor\r\n            case 'DECADE':\r\n            case 'DECADES': return Math.floor(m.year() / 10);\r\n            case 'DOW': return m.day();\r\n            case 'DOY': return m.dayOfYear();\r\n            case 'EPOCH': return Math.floor(+m / 1000);\r\n            case 'HOUR':\r\n            case 'HOURS': return m.hour();\r\n            case 'ISO': return m.toISOString();\r\n            case 'ISODOW': return m.isoWeekday();\r\n            case 'ISOYEAR': return m.isoWeekYear();\r\n            case 'MICROSECOND':\r\n            case 'MICROSECONDS': return m.second() * 1000000 + m.millisecond() * 1000;\r\n            case 'MILLENNIA':\r\n            case 'MILLENNIUM': return Math.ceil(m.year() / 1000);\r\n            case 'MILLISECOND':\r\n            case 'MILLISECONDS': return m.second() * 1000 + m.millisecond();\r\n            case 'MINUTE':\r\n            case 'MINUTES': return m.minute();\r\n            case 'MONTH':\r\n            case 'MONTHS': return m.month() + 1;\r\n            case 'QUARTER':\r\n            case 'QUARTERS': return m.quarter();\r\n            case 'SECOND':\r\n            case 'SECONDS': return m.second() + m.millisecond() / 1000;\r\n            case 'TIMEZONE': return m.utcOffset() * 60;\r\n            case 'TIMEZONE_HOUR': return Math.floor(m.utcOffset() / 60);\r\n            case 'TIMEZONE_MINUTE': return m.utcOffset() % 60;\r\n            case 'WEEK':\r\n            case 'WEEKS': return m.isoWeek();\r\n            case 'WEEKDAY': return DAYS_OF_WEEK[m.day()];\r\n            case 'YEAR':\r\n            case 'YEARS': return m.year();\r\n        }\r\n    },\r\n\r\n    // Geo Functions\r\n    /**\r\n     * Haversine formula for calculating distance between two points.\r\n     *\r\n     * Assumes a spherical Earth.\r\n     * @see https://www.movable-type.co.uk/scripts/latlong.html\r\n     * @param {number} lat1 Latitude of first point in degrees\r\n     * @param {number} lon1 Longitude of first point in degrees\r\n     * @param {number} lat2 Latitude of second point in degrees\r\n     * @param {number} lon2 Longitude of second point in degrees\r\n     * @returns {number} Distance in metres\r\n     */\r\n    DISTANCE (lat1, lon1, lat2, lon2) {\r\n        const R = 6371e3; // Mean Earth radius in metres\r\n        const φ1 = toRadians(lat1);\r\n        const φ2 = toRadians(lat2);\r\n        const Δφ = toRadians(lat2-lat1);\r\n        const Δλ = toRadians(lon2-lon1);\r\n\r\n        const a =   Math.sin(Δφ/2) * Math.sin(Δφ/2) +\r\n                    Math.cos(φ1) * Math.cos(φ2) *\r\n                    Math.sin(Δλ/2) * Math.sin(Δλ/2);\r\n\r\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n\r\n        return R * c;\r\n\r\n        function toRadians (deg) {\r\n            return deg * (Math.PI/180)\r\n        }\r\n    },\r\n};\r\n\r\n// Alias\r\nVALUE_FUNCTIONS.TO_CODE_POINT = VALUE_FUNCTIONS.UNICODE;\r\nVALUE_FUNCTIONS.FROM_CODE_POINT = VALUE_FUNCTIONS.CHAR;\r\n\r\n// Copy all Math functions\r\nfor (const name of Object.getOwnPropertyNames(Math)) {\r\n    if (Math[name] instanceof Function) {\r\n        VALUE_FUNCTIONS[name.toUpperCase()] = Math[name];\r\n    }\r\n}\r\n\r\nconst AGGREGATE_FUNCTIONS = {\r\n    /** @type {(a: any[]) => number} */\r\n    COUNT: a => a.filter(x => x !== false).length, // Include 0, \"\", NULL; Exclude false\r\n    /** @type {(a: number[]) => number} */\r\n    SUM: a => a.reduce((total,val) => total + (+val), 0), // Be sure to coerce into number\r\n    /** @type {(a: number[]) => number} */\r\n    AVG: a => AGGREGATE_FUNCTIONS.SUM(a) / a.length,\r\n    /** @type {(a: number[]) => number} */\r\n    MIN: a => Math.min(...a),\r\n    /** @type {(a: number[]) => number} */\r\n    MAX: a => Math.max(...a),\r\n    /** @type {(a: string[], s?: string) => string} */\r\n    LISTAGG: (a,s) => {\r\n        if (Array.isArray(s)) s = s[0];\r\n        return a.join(s);\r\n    },\r\n    /** @type {(a: any[]) => string} */\r\n    JSON_ARRAYAGG: JSON.stringify,\r\n    /** @type {(a: string[], b: any[]) => string} */\r\n    JSON_OBJECTAGG: (a,b) => JSON.stringify(zip(a, b)),\r\n    /** @type {(a: number[]) => number} */\r\n    STDDEV_POP: a => Math.sqrt(AGGREGATE_FUNCTIONS.VAR_POP(a)),\r\n    /** @type {(a: number[]) => number} */\r\n    STDDEV_SAMP: a => Math.sqrt(AGGREGATE_FUNCTIONS.VAR_SAMP(a)),\r\n    /** @type {(a: number[]) => number} */\r\n    VAR_POP: a => VAR_SUM(a) / a.length,\r\n    /** @type {(a: number[]) => number} */\r\n    VAR_SAMP: a => (a.length === 1) ? 0 : VAR_SUM(a) / (a.length - 1),\r\n    /** @type {(a: number[], b: number[]) => number} */\r\n    COVAR_POP (a, b) {\r\n        const meanA = AGGREGATE_FUNCTIONS.AVG(a);\r\n        const meanB = AGGREGATE_FUNCTIONS.AVG(b);\r\n        const avgOfProducts = AGGREGATE_FUNCTIONS.AVG(a.map((_, i) => a[i] * b[i]));\r\n        return avgOfProducts - meanA * meanB;\r\n    },\r\n    /** @type {(a: number[], b: number[]) => number} */\r\n    COVAR_SAMP (a, b) {\r\n        if (a.length === 1) return 0;\r\n        const meanA = AGGREGATE_FUNCTIONS.AVG(a);\r\n        const meanB = AGGREGATE_FUNCTIONS.AVG(b);\r\n        const sumOfProducts = AGGREGATE_FUNCTIONS.SUM(a.map((_, i) => a[i] * b[i]));\r\n        return (sumOfProducts / (a.length - 1)) - meanA * meanB;\r\n    },\r\n};\r\n\r\n/* Alias */\r\nAGGREGATE_FUNCTIONS.STDDEV = AGGREGATE_FUNCTIONS.STDDEV_SAMP;\r\n\r\n/**\r\n *\r\n * @param {number[]} a\r\n */\r\nfunction VAR_SUM (a) {\r\n    const mean = AGGREGATE_FUNCTIONS.AVG(a);\r\n    return AGGREGATE_FUNCTIONS.SUM(a.map(v => Math.pow(v - mean, 2)));\r\n}\r\n\r\nconst isStrictNull = a => typeof a === \"undefined\" || a === null || Number.isNaN(a) || isNullDate(a);\r\nconst isNull = a => a === \"\" || isStrictNull(a);\r\n\r\nconst OPERATORS = {\r\n    '+': (a,b) => +a + +b,\r\n    '-': (a,b) => +a - +b,\r\n    '*': (a,b) => +a * +b,\r\n    '/': (a,b) => +a / +b,\r\n    /** Concatenate */\r\n    '||': (a,b) => isStrictNull(a) || isStrictNull(b) ? null : `${a}${b}`,\r\n    /** Compares two values to see if they are equal by collation rules */\r\n    '=' (a,b) {\r\n        if (typeof a !== typeof b) return false;\r\n\r\n        if (typeof a === \"object\") {\r\n            // Assume it is like a date and try to compare numerically\r\n            return +a === +b;\r\n        }\r\n\r\n        return a === b;\r\n    },\r\n    '!=': (a,b) => !OPERATORS['='](a, b),\r\n    '<': (a,b) => a < b,\r\n    '>': (a,b) => a > b,\r\n    '<=': (a,b) => a <= b,\r\n    '>=': (a,b) => a >= b,\r\n    '%': (a,b) => a % b,\r\n    '??': VALUE_FUNCTIONS['COALESCE'],\r\n    'NOT': a => !a,\r\n    'IS NULL': isNull,\r\n    'IS NOT NULL': a => !isNull(a),\r\n    'LIKE': (a,b) => new RegExp(\"^\" + b.replace(/\\?/g, \".\").replace(/%/g, \".*\") + \"$\").test(a),\r\n    'NOT LIKE': (a,b) => !OPERATORS['LIKE'](a, b),\r\n    'REGEXP': (a,b) => new RegExp(b, \"i\").test(a),\r\n    'NOT REGEXP': (a,b) => !OPERATORS['REGEXP'](a, b),\r\n    'AND': (a,b) => Boolean(a && b),\r\n    'OR': (a,b) => Boolean(a || b),\r\n    'IN': (v, a) => a.includes(v),\r\n    'NOT IN': (v, a) => !OPERATORS['IN'](v, a),\r\n    'BETWEEN': (x, a, b) => a <= x && x < b,\r\n};\r\n\r\nconst TABLE_VALUED_FUNCTIONS = {\r\n    /** @type {(start: number, end?: number, step?: number) => { value: number }[]} */\r\n    RANGE (start, end=undefined, step=1) {\r\n        if (typeof end === \"undefined\") {\r\n            end = start;\r\n            start = 0;\r\n        }\r\n\r\n        const diff = Math.abs(end - start);\r\n        step = Math.abs(step);\r\n        const count = Math.ceil(diff / step);\r\n\r\n        return start < end ?\r\n            Array(count).fill(0).map((n,i) => ({ value: start + i * step })) :\r\n            Array(count).fill(0).map((n,i) => ({ value: start - i * step }));\r\n    },\r\n\r\n    /**\r\n     * Load JSON\r\n     * @type {(url: string) => Promise}\r\n     */\r\n    async LOAD (url) {\r\n        const r = await fetch(url);\r\n        return r.ok ? r.json() : (console.error(`${r.statusText}: ${url}`), null);\r\n    },\r\n\r\n    /**\r\n     * Load data from an HTML table\r\n     * @type {(url: string) => Promise}\r\n     */\r\n    async HTML (url) {\r\n        const r = await fetch(url);\r\n        const dom = new DOMParser().parseFromString(await r.text(), \"text/html\");\r\n        const fragment = new URL(url).hash.replace(\"#\", \"\") || \"1\";\r\n\r\n        const table = isNumeric(fragment) ? dom.getElementsByTagName(\"table\")[+fragment-1] : dom.getElementById(fragment);\r\n\r\n        if (!(table instanceof HTMLTableElement)) {\r\n            throw Error(`Could not find table ${fragment} in ${url}`)\r\n        }\r\n\r\n        return queryResultToObjectArray(Array.from(table.getElementsByTagName(\"tr\")).map(tr =>\r\n            Array.from(tr.querySelectorAll(\"th,td\")).map(td => td.textContent)\r\n        ));\r\n    },\r\n};\r\n\r\nfunction isNumeric (n) { return +n == n; }\r\n\r\n/** @typedef {import('../..').ResultRow} ResultRow */\r\n/** @typedef {import('../..').Node} Node */\r\n/** @typedef {(index: number, values: number[], rows?: ResultRow[], executor?: (row: ResultRow, node: Node) => any, ...other: any) => any} WindowFunction */\r\n\r\n/**\r\n * @type {{ [name: string]: WindowFunction }}\r\n */\r\nconst WINDOW_FUNCTIONS = {\r\n    ROW_NUMBER (index) {\r\n        return index + 1;\r\n    },\r\n\r\n    RANK (index, values) {\r\n        let prevVal = values[index];\r\n        while (OPERATORS[\"=\"](values[--index], prevVal)) {}\r\n        return index + 2;\r\n    },\r\n\r\n    DENSE_RANK (index, values) {\r\n        let rank = 0;\r\n        let prevVal = values[index];\r\n        while (--index >= 0) {\r\n            if (OPERATORS[\"!=\"](values[index], prevVal)) rank++;\r\n            prevVal = values[index];\r\n        }\r\n        return rank + 1;\r\n    },\r\n\r\n    PERCENT_RANK (index, values) {\r\n        if (values.length === 1) return 0;\r\n        return (WINDOW_FUNCTIONS.RANK(index, values) - 1) / (values.length - 1);\r\n    },\r\n\r\n    CUME_DIST (index, values) {\r\n        const n = values[index];\r\n        const cum = values.filter(v => v <= n).length;\r\n        return cum / values.length;\r\n    },\r\n\r\n    NTILE (index, values, rows, evaluator, nExpr) {\r\n        const n = evaluator(rows[index], nExpr);\r\n        const bucketSize = values.length / n;\r\n        return Math.floor(index / bucketSize) + 1;\r\n    },\r\n\r\n    LAG (index, values, rows, evaluator, expr, offsetExpr = 1) {\r\n        const offset = (typeof offsetExpr === \"number\") ? offsetExpr : Number(evaluator(rows[index], offsetExpr));\r\n        return rowValue(index - offset, rows, evaluator, expr);\r\n    },\r\n\r\n    LEAD (index, values, rows, evaluator, expr, offsetExpr = 1) {\r\n        const offset = (typeof offsetExpr === \"number\") ? offsetExpr : Number(evaluator(rows[index], offsetExpr));\r\n        return rowValue(index + offset, rows, evaluator, expr);\r\n    },\r\n\r\n    FIRST_VALUE (index, values, rows, evaluator, expr) {\r\n        return evaluator(rows[0], expr);\r\n    },\r\n\r\n    LAST_VALUE (index, values, rows, evaluator, expr) {\r\n        return evaluator(rows[rows.length - 1], expr);\r\n    },\r\n\r\n    NTH_VALUE (index, values, rows, evaluator, expr, nExpr) {\r\n        const n = (typeof nExpr === \"number\") ? nExpr : Number(evaluator(rows[index], nExpr));\r\n        return rowValue(n - 1 /* 1 based indexing */, rows, evaluator, expr);\r\n    },\r\n\r\n    CUME_SUM (index, values) {\r\n        const n = values[index];\r\n        return AGGREGATE_FUNCTIONS.SUM(values.filter(v => v <= n));\r\n    },\r\n\r\n    CUME_FRAC (index, values) {\r\n        const val = WINDOW_FUNCTIONS.CUME_SUM(index, values);\r\n        return val / AGGREGATE_FUNCTIONS.SUM(values);\r\n    },\r\n\r\n    PERCENTILE_DISC (index, values, rows, evaluator, nExpr) {\r\n        const n = (typeof nExpr === \"number\") ? nExpr : Number(evaluator(rows[index], nExpr));\r\n        const i = values.findIndex((v,i) => WINDOW_FUNCTIONS.CUME_DIST(i, values) > n);\r\n        return values[i];\r\n    },\r\n\r\n    PERCENTILE_CONT (index, values, rows, evaluator, nExpr) {\r\n        const n = (typeof nExpr === \"number\") ? nExpr : Number(evaluator(rows[index], nExpr));\r\n        const i = values.findIndex((v,i) => WINDOW_FUNCTIONS.CUME_DIST(i, values) > n);\r\n        const valA = values[i - 1];\r\n        const distA = WINDOW_FUNCTIONS.CUME_DIST(i - 1, values);\r\n        const valB = values[i];\r\n        const distB = WINDOW_FUNCTIONS.CUME_DIST(i, values);\r\n        const t = 1 - (distB - n) / (distB - distA);\r\n        return valA + t * (valB - valA);\r\n    },\r\n\r\n    FREQ (index, values) {\r\n        const n = values[index];\r\n        return values.filter(v => v === n).length / values.length;\r\n    },\r\n\r\n    MAP (index, values, rows, evaluator, expr) {\r\n        return rows.map(r => evaluator(r, expr));\r\n    }\r\n}\r\n\r\n/**\r\n * Adds index bounds check before evaluating\r\n * @param {number} index\r\n * @param {ResultRow[]} rows\r\n * @param {(row: ResultRow, expr: Node) => any} evaluator\r\n * @param {Node} expr\r\n */\r\nfunction rowValue (index, rows, evaluator, expr) {\r\n    if (index < 0 || index >= rows.length) return null;\r\n    return evaluator(rows[index], expr);\r\n}\r\n\r\nmodule.exports = {\r\n    VALUE_FUNCTIONS,\r\n    AGGREGATE_FUNCTIONS,\r\n    OPERATORS,\r\n    TABLE_VALUED_FUNCTIONS,\r\n    WINDOW_FUNCTIONS,\r\n    isStrictNull,\r\n};","const { NODE_TYPES } = require('../types');\r\nconst { SymbolError, evaluateConstantExpression } = require('../evaluate/evaluate');\r\n\r\nmodule.exports = {\r\n  filterRow,\r\n  filterRows,\r\n  traverseWhereTree\r\n};\r\n\r\n/**\r\n * @typedef {import('../..')} Query\r\n * @typedef {import('../..').QueryContext} QueryContext\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').ResultRow} ResultRow\r\n * @typedef {import('../..').ParsedTable} ParsedTable\r\n */\r\n\r\n/**\r\n * Function to filter rows based on WHERE clause\r\n * @param {QueryContext} context\r\n * @param {ResultRow[]} rows\r\n * @param {Node} condition\r\n * @return {ResultRow[]}\r\n */\r\nfunction filterRows (context, rows, condition, strict = true) {\r\n    if (condition) {\r\n        return rows.filter(r => filterRow(context, r, condition, rows, strict));\r\n    }\r\n    return rows;\r\n}\r\n\r\nfunction filterRow(context, row, condition, rows, strict) {\r\n    // Optimisation.\r\n    // If we're not in strict mode we can return a fail earlier if either\r\n    // side of an AND operator returns exactly false rather than optimistically\r\n    // catching SymbolErrors and returning true\r\n    if (!strict && condition.type === NODE_TYPES.OPERATOR && condition.id === \"AND\") {\r\n        return filterRow(context, row, condition.children[0], rows, false) && filterRow(context, row, condition.children[1], rows, false);\r\n    }\r\n\r\n    try {\r\n        return context.evaluate(row, condition, rows);\r\n    }\r\n    catch (e) {\r\n        if (e instanceof SymbolError) {\r\n            // If we got a symbol error it means we don't have enough\r\n            // symbols yet. If we're not strict we need to return true\r\n            // to carry on. If we are strict then the row fails.\r\n            return !strict;\r\n        }\r\n        else {\r\n            throw e;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Node} node\r\n * @param {string} symbol\r\n * @param {string|string[]} operator\r\n * @returns {string|number}\r\n */\r\nfunction traverseWhereTree (node, symbol, operator=\"=\", params=null) {\r\n  if (node.type !== NODE_TYPES.OPERATOR) {\r\n      return; // undefined\r\n  }\r\n\r\n  if (operator === null || node.id === operator ||\r\n      (Array.isArray(operator) && operator.includes(String(node.id))))\r\n  {\r\n      let operand1 = node.children[0];\r\n      let operand2 = node.children[1];\r\n\r\n      if (operand2.type === NODE_TYPES.SYMBOL) {\r\n          [ operand1, operand2 ] = [ operand2, operand1 ];\r\n      }\r\n\r\n      if (operand1.type === NODE_TYPES.SYMBOL &&\r\n          operand1.id === symbol)\r\n      {\r\n          // We've found the right node\r\n          try {\r\n              // Now try to evaluate it as a constant expression\r\n              return evaluateConstantExpression(operand2);\r\n          } catch (e) {\r\n              return; // undefined\r\n          }\r\n      }\r\n  }\r\n  else if (node.id === \"AND\") {\r\n      const child1 = traverseWhereTree(node.children[0], symbol, operator, params);\r\n      if (typeof child1 !== \"undefined\") {\r\n          return child1;\r\n      }\r\n\r\n      const child2 = traverseWhereTree(node.children[1], symbol, operator, params);\r\n      return child2;\r\n  } else {\r\n      return; // undefined\r\n  }\r\n}\r\n","const Parser = require('./prepare/parser');\r\nconst persist = require('./persist');\r\nconst evaluateQuery = require('./evaluate/evaluate-query');\r\nconst evaluateCompoundQuery = require('./evaluate/evaluate-compound');\r\nconst { NODE_TYPES, DEBUG_NODE_TYPES } = require('./prepare/parser');\r\nconst { performDDL, VIEW_KEY } = require('./ddl');\r\n\r\n/**\r\n * @typedef {import('..').Schema} Schema\r\n * @typedef {import('..').Node} Node\r\n */\r\n\r\nclass Query {\r\n    constructor () {\r\n        /** @type {{ [name: string]: Schema }} */\r\n        this.providers = {};\r\n\r\n        /** @type {Schema} */\r\n        this.schema = null;\r\n\r\n        /** @type {{ [name: string]: string }} */\r\n        this.views = persist.getItem(VIEW_KEY) || {};\r\n    }\r\n\r\n    /**\r\n     * @param {Schema} schema\r\n     * @param {string} [name]\r\n     */\r\n    addProvider (schema, name=undefined) {\r\n        const providerCount = Object.keys(this.providers).length;\r\n        name = name || schema.name || `SCHEMA_${providerCount + 1}`;\r\n\r\n        this.providers[name] = schema;\r\n        schema.name = name;\r\n\r\n        if (!this.schema) {\r\n            this.schema = schema;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {string} query\r\n     * @returns {Promise<any[][]>}\r\n     */\r\n    async run (query) {\r\n        if (await performDDL.call(this, query)) {\r\n            // TODO: Should probably come up with a method of returning useful information\r\n            // such as inserted row count;\r\n            const EMPTY_RESULT = [];\r\n            return EMPTY_RESULT;\r\n        }\r\n\r\n        /**************\r\n         * Matrix\r\n         **************/\r\n\r\n        if (/^TRANSPOSE/.test(query)) {\r\n            const subQuery = await this.run(query.replace(/TRANSPOSE\\s*/, \"\"));\r\n\r\n            const out = [];\r\n\r\n            if (subQuery.length > 0) {\r\n                const headers = subQuery[0];\r\n                const dummyArray = Array(subQuery.length - 1).fill(\"\");\r\n\r\n                for (let i = 0; i < headers.length; i++) {\r\n                    out.push([headers[i], ...dummyArray.map((x, j) => subQuery[j+1][i])]);\r\n                }\r\n\r\n            }\r\n            return out;\r\n        }\r\n\r\n        // If we got to this point we're executing a \"SELECT\"\r\n        return this.runSelect(query);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string|Node} query \r\n     * @param {object} [params] \r\n     */\r\n    runSelect (query, params) {        \r\n        const parsedQuery = typeof query === \"string\" ? Parser.parse(query) : query;\r\n\r\n        if (parsedQuery.type === NODE_TYPES.COMPOUND_QUERY) {\r\n            return evaluateCompoundQuery(this, parsedQuery, params);\r\n        }\r\n\r\n        if (parsedQuery.type === NODE_TYPES.STATEMENT) {\r\n            return evaluateQuery(this, parsedQuery, null, params);\r\n        }\r\n\r\n        throw new Error(`Cannot evaluate node type ${DEBUG_NODE_TYPES[parsedQuery.type]} as Query`);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string[]} queries\r\n     * @returns {Promise<any[][][]>}\r\n     */\r\n    runQueries (queries) {\r\n        return Promise.all(queries.map(q => this.run(q)));\r\n    }\r\n}\r\n\r\nmodule.exports = Query;\r\n","module.exports = {\r\n    findJoin,\r\n    applyJoin,\r\n    setJoin,\r\n    setJoinPredicate,\r\n    getRowData,\r\n    setRowData,\r\n};\r\n\r\nconst { parseExpression } = require('./parser');\r\n\r\nconst { filterRow } = require('../finalise/filter');\r\n\r\nconst { resolvePath } = require('../evaluate/resolve');\r\n\r\n/**\r\n * @typedef {import('../..')} Query\r\n * @typedef {import('../..').QueryContext} QueryContext\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').ResultRow} ResultRow\r\n * @typedef {import('../..').ParsedTable} ParsedTable\r\n */\r\n\r\n/**\r\n * Given a set of rows, try to identify where a table can be joined.\r\n *\r\n * It will look at data on the table object and search the rows to try\r\n * and auto join if possible. Once it has found the join location it\r\n * will set the join path on the table object.\r\n *\r\n * It will return a boolean indicating its success.\r\n * @param {ParsedTable[]} tables\r\n * @param {ParsedTable} table\r\n * @param {ResultRow[]} rows\r\n * @returns {boolean}\r\n */\r\nfunction findJoin (tables, table, rows) {\r\n    if (Array.isArray(table.join)) {\r\n        // If we have an explicit join, check it first.\r\n\r\n        // First check of explicit join check is in data object.\r\n        // This may already have been set for us by a beforeJoin callback.\r\n        for (const row of rows) {\r\n            const data = getRowData(row, table);\r\n\r\n            if (typeof data !== \"undefined\" && data !== null) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // If we get to this point no data has been set for us on the rows\r\n        // But if we have a predicate which was set in beforeJoin()\r\n        // we will do a primary table join.\r\n        // For that we need to unset `table.join` so that the higher up\r\n        // functions know the data doesn't exist on the rows yet\r\n        if (table.predicate) {\r\n            return false;\r\n        }\r\n    } else if (table.join) {\r\n        const t = table.join;\r\n\r\n        for (const r of rows) {\r\n            const path = findPath(tables, r, t);\r\n\r\n            if (typeof path !== \"undefined\"){\r\n                table.join = path;\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // AUTO JOIN! (natural join, comma join, implicit join?)\r\n    // We will find the path automatically\r\n    const t = table.name;\r\n    const t_lower = table.name.toLowerCase();\r\n\r\n    for (const r of rows) {\r\n        const path = findPath(tables, r, t);\r\n\r\n        if (typeof path !== \"undefined\"){\r\n            table.join = path;\r\n            return true;\r\n        }\r\n\r\n        const path_lower = findPath(tables, r, t_lower);\r\n\r\n        if (typeof path_lower !== \"undefined\"){\r\n            table.join = path_lower;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /*\r\n    * This will search for the plural of the table name and\r\n    * if that is an array we can do a one-to-many join.\r\n    */\r\n    const ts = `${t}s`;\r\n\r\n    for (const r of rows) {\r\n        const join = findPath(tables, r, ts);\r\n\r\n        if (typeof join !== \"undefined\") {\r\n            const data = getRowData(r, join[0]);\r\n\r\n            const array = resolvePath(data, ts);\r\n\r\n            if (Array.isArray(array)) {\r\n                table.join = join;\r\n                return true;\r\n            }\r\n\r\n            throw new Error(\"Unable to join, found a plural but not an array: \" + ts);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\n/**\r\n * This function first makes sure every row has a data object\r\n * for this table.\r\n *\r\n * Then if the data object is an array, it will split the row as necessary.\r\n *\r\n * Finally this function will update ROWIDs\r\n * @param {QueryContext} context\r\n * @param {ParsedTable} table\r\n * @param {ResultRow[]} rows\r\n * @returns {ResultRow[]}\r\n */\r\nfunction applyJoin (context, table, rows) {\r\n    const newRows = [];\r\n    let one2many = false;\r\n\r\n    for (let row of rows) {\r\n        // Check to make sure we have data object saved,\r\n        // if not fill in the data object of each row now\r\n        if (typeof getRowData(row, table) === \"undefined\") {\r\n            if (Array.isArray(table.join)) {\r\n                const joinData = getRowData(row, table.join[0]);\r\n                const data = resolvePath(joinData, table.join[1]);\r\n                setRowData(row, table, data);\r\n            } else {\r\n                throw Error(\"Join has not been prepared\");\r\n            }\r\n        }\r\n\r\n        const data = getRowData(row, table);\r\n\r\n        if (Array.isArray(data)) {\r\n            // We've been joined on an array! Wahooo!!\r\n            // The number of results has just been multiplied!\r\n\r\n            // For EXPLAIN\r\n            one2many = true;\r\n\r\n            if (!data || data.length === 0) {\r\n\r\n                /*\r\n                * If this is an inner join, we do nothing.\r\n                * In the case it is not an INNER JOIN (i.e it is a LEFT JOIN),\r\n                * we need to add a null row.\r\n                */\r\n                if (!table.inner) {\r\n                    // Update the ROWID to indicate there was no row in this particular table\r\n                    row['ROWID'] += \".-1\";\r\n                    setRowData(row, table, null);\r\n\r\n                    newRows.push(row);\r\n                }\r\n\r\n                continue;\r\n            }\r\n\r\n            let added = 0;\r\n            data.forEach((sr, si) => {\r\n                // Clone the row\r\n                const newRow = cloneRow(row);\r\n                setRowData(newRow, table, sr);\r\n\r\n                // Set the ROWID again, this time including the subquery id too\r\n                Object.defineProperty(newRow, 'ROWID', { value: `${row['ROWID']}.${si}`, writable: true });\r\n\r\n                // If we _do_ have a predicate we only push the new row if it passes the filter test\r\n                if (!table.predicate || filterRow(context, newRow, table.predicate, newRows, true)) {\r\n                    newRows.push(newRow);\r\n                    added++;\r\n                }\r\n            });\r\n\r\n            /*\r\n             * The predicate must have ruled out all the rows if `added` === 0\r\n             * If this is an inner join, we do nothing.\r\n             * In the case it is not an INNER JOIN (i.e it is a LEFT JOIN),\r\n             * we need to add a null row.\r\n             */\r\n            if (added === 0 && !table.inner) {\r\n                // Update the ROWID to indicate there was no row in this particular table\r\n                row['ROWID'] += \".-1\";\r\n                setRowData(row, table, null);\r\n\r\n                newRows.push(row);\r\n            }\r\n\r\n        } else {\r\n            // Update all the row IDs for one-to-one JOIN\r\n            row['ROWID'] += \".0\";\r\n\r\n            newRows.push(row);\r\n        }\r\n    }\r\n\r\n    if (one2many) {\r\n        table.explain += ` one-to-many`;\r\n    }\r\n\r\n    return newRows;\r\n}\r\n\r\nfunction setJoin (table, targetTable) {\r\n    table.join = [targetTable, table.name];\r\n}\r\n\r\n/**\r\n * @param {ParsedTable} table\r\n * @param {string} predicate\r\n */\r\nfunction setJoinPredicate (table, predicate) {\r\n    table.predicate = parseExpression(predicate);\r\n}\r\n\r\n/**\r\n *\r\n * @param {ResultRow} row\r\n * @param {ParsedTable} table\r\n */\r\nfunction getRowData (row, table) {\r\n  // @ts-ignore\r\n  return row['data'][table.symbol];\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param {ResultRow} row\r\n * @param {ParsedTable} table\r\n */\r\nfunction setRowData (row, table, data) {\r\n  // @ts-ignore\r\n  row['data'][table.symbol] = data;\r\n}\r\n\r\nfunction cloneRow(row) {\r\n    const newRow = [...row];\r\n    newRow['data'] = { ...row['data'] };\r\n    return newRow;\r\n}\r\n\r\n/**\r\n * Traverse a sample object to determine absolute path\r\n * up to, but not including, given name.\r\n * Uses explicit join list.\r\n * @param {ParsedTable[]} tables\r\n * @param {ResultRow} row\r\n * @param {string} name\r\n * @returns {[ParsedTable,string]}\r\n */\r\nfunction findPath (tables, row, name) {\r\n    for (const table of tables) {\r\n\r\n        const data = getRowData(row, table);\r\n\r\n        if (typeof data === \"undefined\" || data === null) {\r\n            // Could be missing data because of a LEFT JOIN on null row\r\n            continue;\r\n        }\r\n\r\n        // Check if the parent object has a property matching\r\n        // the secondary table i.e. Tutor => result.tutor\r\n        if (typeof resolvePath(data, name) !== \"undefined\") {\r\n            return [table,name];\r\n        }\r\n\r\n        if (name.includes(\".\")) {\r\n            const head = name.substr(0, name.indexOf(\".\"));\r\n            const tail = name.substr(name.indexOf(\".\") + 1);\r\n\r\n            if (head === table.alias) {\r\n                if (typeof resolvePath(data, tail) !== \"undefined\") {\r\n                    return [table,tail];\r\n                } else {\r\n                    throw Error(\"It looks like you tried to join on a table alias but the property wasn't found\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","module.exports = evaluateCompound;\r\n\r\nconst evaluateQuery = require('./evaluate-query');\r\nconst { NODE_TYPES, DEBUG_NODE_TYPES } = require('../prepare/parser');\r\nconst { COMPOUND_OPERATORS } = require('./compound');\r\n\r\n/**\r\n * @typedef {import('../..')} Query\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').NodeTypes} NodeTypes\r\n * @typedef {import('../..').ResultRow} ResultRow\r\n */\r\n\r\n/**\r\n *\r\n * @param {Query} query\r\n * @param {Node} node\r\n * @param {object} [params]\r\n * @returns {Promise<ResultRow[]>}\r\n */\r\nasync function evaluateCompound (query, node, params=null) {\r\n  if (node.type === NODE_TYPES.STATEMENT) {\r\n    return evaluateQuery(query, node, null, params);\r\n  }\r\n\r\n  if (node.type !== NODE_TYPES.COMPOUND_QUERY) {\r\n    throw new Error(`Cannot evaluate node type ${DEBUG_NODE_TYPES[node.type]} as COMPOUND_QUERY`);\r\n  }\r\n\r\n  const [ resultsL, resultsR ] = await Promise.all(node.children.map(c => evaluateCompound(query, c, params)));\r\n\r\n  return COMPOUND_OPERATORS[node.id](resultsL, resultsR);\r\n}","if (process.env.APP_ENV === \"browser\") {\r\n  module.exports = {\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    getItem (key) {\r\n      return JSON.parse(localStorage.getItem(key));\r\n    },\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @param {any} value\r\n     */\r\n    setItem (key, value) {\r\n      return localStorage.setItem(key, JSON.stringify(value));\r\n    },\r\n  };\r\n} else {\r\n  const fs = require('fs');\r\n  const pkg = require('../package.json');\r\n\r\n  const dir = `${process.env.IL_DATA_DIR || \".\" + pkg.name}/persist`;\r\n  const filename = key => `${dir}/${key}.json`;\r\n\r\n  fs.mkdirSync(dir, { recursive: true });\r\n\r\n  module.exports = {\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    getItem (key) {\r\n      try {\r\n        return JSON.parse(fs.readFileSync(filename(key), { encoding: \"utf8\" }));\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @param {any} value\r\n     */\r\n    setItem (key, value) {\r\n      fs.writeFileSync(filename(key), JSON.stringify(value));\r\n    },\r\n  };\r\n}","module.exports = {\r\n  getRows,\r\n  getPrimaryResults,\r\n  processColumns,\r\n  populateValues,\r\n  populateValue,\r\n};\r\n\r\n/**\r\n * @typedef {import('../..')} Query\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').ResultRow} ResultRow\r\n * @typedef {import('../..').ParsedTable} ParsedTable\r\n * @typedef {import('../..').QueryContext} QueryContext\r\n */\r\n\r\nconst Query = require('../query');\r\nconst { NODE_TYPES } = require('../prepare/parser');\r\nconst { informationSchema } = require('../providers/information');\r\nconst { TABLE_VALUED_FUNCTIONS } = require('../evaluate/const');\r\nconst { findJoin, applyJoin, setRowData, getRowData,  } = require('../prepare/joins');\r\nconst { filterRows } = require('../finalise/filter');\r\nconst { setAnalysis } = require('../explain');\r\nconst { getTableAliasMap, PendingValue } = require('../evaluate/resolve');\r\nconst { scalar, queryResultToObjectArray, split } = require('../util');\r\nconst { evaluateConstantExpression, SymbolError, isConstantExpression } = require('../evaluate/evaluate');\r\nconst evaluateStatement = require('../evaluate/evaluate-query');\r\nconst evaluateCompound = require('../evaluate/evaluate-compound');\r\n\r\n/**\r\n * @param {QueryContext} context\r\n */\r\nasync function getRows(context) {\r\n    const { tables, where, query } = context;\r\n    const { schema: { callbacks } } = query;\r\n    let rows;\r\n\r\n    for (let table of tables) {\r\n        const start = Date.now();\r\n        let startupTime;\r\n\r\n        if (!rows) {\r\n            /** @type {Array} */\r\n            let results;\r\n\r\n            results = await getPrimaryResults(context, table);\r\n            startupTime = Date.now() - start;\r\n\r\n            if (!results) {\r\n                throw Error(\"Couldn't get Primary Results\");\r\n            }\r\n\r\n            if (!Array.isArray(results)) {\r\n                results = [ results ];\r\n            }\r\n\r\n            // console.log(`Initial data set: ${results.length} items`);\r\n\r\n            // Populate initial rows\r\n            rows = results.map((r,i) => {\r\n                /** @type {ResultRow} */\r\n                const row = [];\r\n\r\n                // Set initial data object\r\n                row.data = {};\r\n                setRowData(row, table, r);\r\n\r\n                // Define a ROWID\r\n                Object.defineProperty(row, 'ROWID', { value: String(i), writable: true });\r\n\r\n                return row;\r\n            });\r\n        }\r\n        else {\r\n            if (callbacks.beforeJoin) {\r\n                await callbacks.beforeJoin.call(context, table, rows);\r\n            }\r\n\r\n            startupTime = Date.now() - start;\r\n\r\n            if (table.name in TABLE_VALUED_FUNCTIONS) {\r\n                const fn = TABLE_VALUED_FUNCTIONS[table.name];\r\n                const isConstant = table.params.every(p => isConstantExpression(p));\r\n\r\n                // If the function call is purely constant, just evaluate it once\r\n                const constantResults = isConstant && await fn(...table.params.map(p => evaluateConstantExpression(p, context.params)));\r\n\r\n                await Promise.all(rows.map(async row => {\r\n                    const results = constantResults || await fn(...table.params.map(p => context.evaluate(row, p, rows)));\r\n\r\n                    setRowData(row, table, results);\r\n                }));\r\n            }\r\n            else if (table.subquery) {\r\n                const results = queryResultToObjectArray(await evaluateCompound(query, table.subquery), table.subquery.headers);\r\n\r\n                table.explain += \" cross-join\";\r\n\r\n                for (const row of rows) {\r\n                    setRowData(row, table, results);\r\n                }\r\n            }\r\n            else {\r\n                const findResult = findJoin(tables, table, rows);\r\n\r\n                if (!findResult) {\r\n                    // All attempts at joining failed, instead we're going to do a\r\n                    // CROSS JOIN!\r\n                    const results = await getPrimaryResults(context, table);\r\n\r\n                    table.explain += \" cross-join\";\r\n\r\n                    for (const row of rows) {\r\n                        setRowData(row, table, results);\r\n                    }\r\n                }\r\n            }\r\n\r\n            rows = applyJoin(context, table, rows);\r\n        }\r\n\r\n        const initialCount = rows.length;\r\n\r\n        // Filter out any rows we can early to avoid extra processing\r\n        rows = filterRows(context, rows, where, false);\r\n\r\n        table.rowCount = rows.length;\r\n\r\n        if (callbacks.afterJoin) {\r\n            await callbacks.afterJoin.call(context, table, rows);\r\n        }\r\n\r\n        const totalTime = Date.now() - start;\r\n        setAnalysis(table, startupTime, totalTime, initialCount, rows.length);\r\n    }\r\n\r\n    return rows;\r\n}\r\n\r\n/**\r\n * @param {QueryContext} context\r\n * @param {ResultRow[]} rows\r\n */\r\nfunction processColumns (context, rawCols, rows) {\r\n    const { tables, cols, colHeaders, colAlias } = context;\r\n\r\n    const tableAlias = getTableAliasMap(tables);\r\n\r\n    for (const node of rawCols) {\r\n\r\n        const nodeId = String(node.id);\r\n\r\n        // Special Treatment for *\r\n        if (node.type === NODE_TYPES.SYMBOL && nodeId.endsWith(\"*\")) {\r\n            if (rows.length === 0) {\r\n                // We don't have any results so we can't determine the cols\r\n                cols.push(node);\r\n                colHeaders.push(node.id);\r\n                continue;\r\n            }\r\n\r\n            const tName = nodeId.substring(0, nodeId.indexOf(\".\"));\r\n\r\n            // Add all the scalar columns for required tables\r\n            for (const table of (node.id === \"*\" ? tables : [ tableAlias[tName] ])) {\r\n                if (typeof table === \"undefined\") {\r\n                    continue;\r\n                }\r\n\r\n                let tableObj;\r\n\r\n                // We need to find a non-null row to extract columns from\r\n                for (const tmpR of rows) {\r\n                    tableObj = getRowData(tmpR, table);\r\n                    if (tableObj) break;\r\n                }\r\n\r\n                if (!tableObj) {\r\n                    // No results to extract column data from\r\n\r\n                    // If we're not the root table, then add placeholder headers\r\n                    if (table.join != \"\") {\r\n                        cols.push(null);\r\n                        colHeaders.push(`${table.alias || table.name}.*`);\r\n                    }\r\n\r\n                    continue;\r\n                }\r\n\r\n                // only add \"primitive\" columns\r\n                let newCols = Object.keys(tableObj).filter(k => typeof scalar(tableObj[k]) !== \"undefined\");\r\n\r\n                cols.push(...newCols.map(c => ({ type: NODE_TYPES.SYMBOL, id: `${table.alias}.${c}` })));\r\n\r\n                if (tables.length > 1) {\r\n                    newCols = newCols.map(c => `${table.alias || table.name}.${c}`);\r\n                }\r\n                colHeaders.push(...newCols);\r\n            }\r\n        } else {\r\n            cols.push(node);\r\n            colHeaders.push(node.alias || node.source || `Col ${cols.length}`);\r\n\r\n            if (node.alias && typeof colAlias[node.alias] !== \"undefined\") {\r\n                throw new Error(\"Alias already in use: \" + node.alias);\r\n            }\r\n        }\r\n\r\n        colHeaders.forEach((col, i) => {\r\n            if (typeof colAlias[col] === \"undefined\") {\r\n                colAlias[col] = i;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * @param {QueryContext} context\r\n * @param {ParsedTable} table\r\n * @returns {Promise<any[]>}\r\n */\r\nasync function getPrimaryResults(context, table) {\r\n    const { views, CTEs, query, params } = context;\r\n\r\n    let schemaName;\r\n    let tableName = table.name;\r\n\r\n    if (table.name.includes(\".\")) {\r\n        [schemaName, tableName] = split(table.name, \".\", 2);\r\n    }\r\n\r\n    if (table.subquery) {\r\n        return queryResultToObjectArray(await evaluateCompound(query, table.subquery, params), table.subquery.headers);\r\n    }\r\n\r\n    if (table.name in CTEs) {\r\n        return CTEs[table.name];\r\n    }\r\n\r\n    if (table.name in views) {\r\n        return queryResultToObjectArray(await context.query.run(views[table.name]), table.headers);\r\n    }\r\n\r\n    if (schemaName === \"information_schema\") {\r\n        return informationSchema(context, tableName);\r\n    }\r\n\r\n    if (table.name in TABLE_VALUED_FUNCTIONS) {\r\n        return TABLE_VALUED_FUNCTIONS[table.name](...table.params.map(c => evaluateConstantExpression(c, context.params)));\r\n    }\r\n\r\n    const { callbacks } = context.providers[schemaName] || context.schema;\r\n\r\n    if (typeof callbacks.primaryTable === \"undefined\") {\r\n        throw new Error(\"PrimaryTable callback not defined\");\r\n    }\r\n\r\n    // Just in case we've stripped off a schema name\r\n    table.name = tableName;\r\n\r\n    return callbacks.primaryTable.call(context, table) || [];\r\n}\r\n\r\n/**\r\n * @param {QueryContext} context\r\n * @param {Node[]} cols\r\n * @param {ResultRow[]} rows\r\n */\r\nasync function populateValues (context, cols, rows) {\r\n    for(const row of rows) {\r\n        // @ts-ignore\r\n        for(const [i, node] of cols.entries()) {\r\n            await populateValue(context, row, i, node, rows);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @param {QueryContext} context\r\n * @param {ResultRow} row\r\n * @param {number} colNum\r\n * @param {Node} node\r\n * @param {ResultRow[]} rows\r\n */\r\nasync function populateValue (context, row, colNum, node, rows) {\r\n    // Check to see if column's already been filled in\r\n    if (typeof row[colNum] !== \"undefined\" && row[colNum] !== PendingValue) {\r\n        return;\r\n    }\r\n\r\n    if (node === null) {\r\n        // This occurs when there were no rows to extract properties from as columns\r\n        //  e.g. Tutor.*\r\n        row[colNum] = null;\r\n        return;\r\n    }\r\n\r\n    if (node.id === \"ROWID\") {\r\n        row[colNum] = row['ROWID'];\r\n        return;\r\n    }\r\n\r\n    if (node.type === NODE_TYPES.STATEMENT) {\r\n        // We need to pass in the outer query context so that any symbols\r\n        // the inner query doesn't understand can be handled by our resolver\r\n        const results = await evaluateStatement(context.query, node, { context, row, rows });\r\n\r\n        if (results && results.length >= 2) {\r\n            row[colNum] = results[1][0];\r\n        } else {\r\n            row[colNum] = null;\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Use PendingValue flag to avoid infinite recursion\r\n        row[colNum] = PendingValue;\r\n        row[colNum] = context.evaluate(row, node, rows);\r\n    } catch (e) {\r\n        if (e instanceof SymbolError) {\r\n            row[colNum] = null;\r\n        } else {\r\n            throw e;\r\n        }\r\n    }\r\n}\r\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","module.exports = {\r\n    explain,\r\n    setAnalysis,\r\n};\r\n\r\nfunction explain (tables, analyse) {\r\n    const out = [];\r\n\r\n    if (analyse) {\r\n        // Build Tree\r\n        const analyses = tables.map(t => t.analyse);\r\n        let curr = analyses.shift();\r\n\r\n        for (const analyse of analyses) {\r\n            curr = {\r\n                \"Node Type\": \"Nested Loop\",\r\n                \"Startup Cost\": curr[\"Startup Cost\"] + analyse[\"Startup Cost\"],\r\n                \"Total Cost\": curr[\"Total Cost\"] + analyse[\"Total Cost\"],\r\n                \"Plans\": [curr, analyse],\r\n                \"Actual Startup Time\": curr[\"Startup Cost\"] + analyse[\"Startup Cost\"],\r\n                \"Actual Total Time\": curr[\"Actual Total Time\"] + analyse[\"Actual Total Time\"],\r\n                \"Actual Rows\": curr[\"Actual Rows\"],\r\n                \"Actual Loops\": 1,\r\n            };\r\n        }\r\n\r\n        out.push([\"QUERY PLAN\"]);\r\n        // for (const table of parsedTables) {\r\n        //     const a = table.analyse;\r\n        //     out.push([`Seq Scan on ${a[\"Relation Name\"]} ${a[\"Alias\"] !== a[\"Relation Name\"] ? a[\"Alias\"] : \"\"} (cost=${a[\"Startup Cost\"].toFixed(2)}..${a[\"Total Cost\"].toFixed(2)} rows=${a[\"Plan Rows\"]} width=${a[\"Plan Width\"]})`]);\r\n        // }\r\n        out.push([JSON.stringify([{\"Plan\": curr, \"Total Runtime\": curr[\"Actual Total Time\"]}])]);\r\n    }\r\n    else {\r\n        out.push([ \"index\", ...Object.keys(tables[0]) ]);\r\n        // @ts-ignore\r\n        for (const [i,table] of tables.entries()) {\r\n            out.push([ i, ...Object.values(table).map(formatExplainCol) ]);\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nfunction formatExplainCol (col) {\r\n    if (typeof col === \"undefined\" || col === null) return null;\r\n    if (Array.isArray(col)) return `${col[0].alias}.${col[1]}`; // Join\r\n    if (col.source) return col.source;\r\n    if (typeof col === \"object\") return JSON.stringify(col);\r\n    return col;\r\n}\r\n\r\nfunction setAnalysis(table, startupTime, totalTime, planRows, actualRows) {\r\n    table.analyse = {\r\n        \"Node Type\": \"Seq Scan\",\r\n        \"Relation Name\": table.name,\r\n        \"Alias\": table.alias || table.name,\r\n        \"Startup Cost\": startupTime,\r\n        \"Total Cost\": totalTime,\r\n        \"Plan Rows\": planRows,\r\n        \"Plan Width\": 1,\r\n        \"Actual Startup Time\": startupTime,\r\n        \"Actual Total Time\": totalTime,\r\n        \"Actual Rows\": actualRows,\r\n        \"Actual Loops\": 1,\r\n    };\r\n}","module.exports = {\r\n  COMPOUND_OPERATORS: {\r\n    INTERSECT: intersectResults,\r\n    EXCEPT: exceptResults,\r\n    UNION: unionResults,\r\n    \"UNION ALL\": unionAllResults,\r\n  },\r\n  distinctResults,\r\n};\r\n\r\n/** @typedef {import('../..').ResultRow} ResultRow */\r\n\r\n/**\r\n * @param {ResultRow[][]} resultsL\r\n * @param {ResultRow[][]} resultsR\r\n * @returns {ResultRow[][]}\r\n */\r\nfunction intersectResults (resultsL, resultsR) {\r\n  const headerRow = resultsL[0];\r\n\r\n  const dL = distinctMap(resultsL.slice(1));\r\n  const dR = distinctMap(resultsR.slice(1));\r\n\r\n  const out = [headerRow];\r\n\r\n  for (const [key, row] of dL) {\r\n    if (dR.has(key)) {\r\n      out.push(row);\r\n    }\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * @param {ResultRow[][]} resultsL\r\n * @param {ResultRow[][]} resultsR\r\n * @returns {ResultRow[][]}\r\n */\r\nfunction exceptResults (resultsL, resultsR) {\r\n  const headerRow = resultsL[0];\r\n\r\n  const dL = distinctMap(resultsL.slice(1));\r\n  const dR = distinctMap(resultsR.slice(1));\r\n\r\n  const out = [headerRow];\r\n\r\n  for (const [key, row] of dL) {\r\n    if (!dR.has(key)) {\r\n      out.push(row);\r\n    }\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * @param {ResultRow[][]} resultsL\r\n * @param {ResultRow[][]} resultsR\r\n * @returns {ResultRow[][]}\r\n */\r\nfunction unionResults (resultsL, resultsR) {\r\n  const headerRow = resultsL[0];\r\n\r\n  const dL = distinctMap(resultsL.slice(1));\r\n  const dR = distinctMap(resultsR.slice(1));\r\n\r\n  for (const [key, row] of dR) {\r\n    if (!dL.has(key)) {\r\n      dL.set(key, row);\r\n    }\r\n  }\r\n\r\n  return [headerRow, ...dL.values()];\r\n}\r\n\r\n/**\r\n * @param {ResultRow[][]} resultsL\r\n * @param {ResultRow[][]} resultsR\r\n * @returns {ResultRow[][]}\r\n */\r\nfunction unionAllResults (resultsL, resultsR) {\r\n  return [ ...resultsL, ...resultsR.slice(1) ];\r\n}\r\n\r\n/**\r\n * @param {ResultRow[][]} results\r\n * @returns {ResultRow[][]}\r\n */\r\nfunction distinctResults (results) {\r\n  return Array.from(distinctMap(results).values());\r\n}\r\n\r\n/**\r\n * We're doing super cheap distinct mapping. It only looks at the first\r\n * column! This really only works if the data has an ID or similar in\r\n * the first column of restults.\r\n * The implementation keeps the first row it finds for each first-column-value.\r\n * @param {ResultRow[][]} results\r\n * @returns {Map<ResultRow, ResultRow[]> }}\r\n */\r\nfunction distinctMap (results) {\r\n  const outMap = new Map();\r\n  for (const row of results) {\r\n    if (!outMap.has(row[0])) {\r\n      outMap.set(row[0], row);\r\n    }\r\n  }\r\n  return outMap;\r\n}","const { TOKEN_TYPES } = require('../types');\r\nconst DEBUG_TOKEN_TYPES = Object.keys(TOKEN_TYPES);\r\n\r\n/** @typedef {import('../..').Token} Token */\r\n\r\nmodule.exports = {\r\n    /**\r\n     * @param {string} string\r\n     * @return {Token[]}\r\n     */\r\n    tokenize (string) {\r\n        const len = string.length;\r\n        let i = 0;\r\n\r\n        /** @type {Token[]} */\r\n        const out = [];\r\n\r\n        function prevToken() {\r\n            return out[out.length - 1];\r\n        }\r\n\r\n        while (i < len) {\r\n            const c = string[i];\r\n            if (/\\s/.test(c)) {\r\n                i++;\r\n            } else if (c === \"(\" || c === \")\") {\r\n                out.push({ type: TOKEN_TYPES.BRACKET, value: c, start: i });\r\n                i++;\r\n            } else if (c === \",\") {\r\n                out.push({ type: TOKEN_TYPES.COMMA, start: i });\r\n                i++;\r\n            } else if (c === \"'\") {\r\n                let end = string.indexOf(\"'\", i + 1);\r\n                if (end < 0) {\r\n                    throw new Error(\"Unterminated String: \" + string.substring(i));\r\n                }\r\n                while (string[end-1] === \"\\\\\") {\r\n                    end = string.indexOf(\"'\", end + 1);\r\n                }\r\n                const str = string.substring(i + 1, end).replace(/\\\\'/g, \"'\");\r\n                out.push({ type: TOKEN_TYPES.STRING, value: str, start: i });\r\n                i = end + 1;\r\n            } else if (c === \"\\\"\") {\r\n                const end = string.indexOf(\"\\\"\", i + 1);\r\n                if (end < 0) {\r\n                    throw new Error(\"Unterminated Name: \" + string.substring(i));\r\n                }\r\n                const str = string.substring(i + 1, end);\r\n                out.push({ type: TOKEN_TYPES.NAME, value: str, start: i });\r\n                i = end + 1;\r\n            } else if (/^[-\\d]/.test(c)) {\r\n                const r = /^(?:0x[0-9a-f]+|-?\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i;\r\n                const ss = string.substr(i);\r\n                const m = r.exec(ss);\r\n\r\n                if (m) {\r\n                    let value = m[0];\r\n                    // Two numbers back-to-back probably means something like '5-2'\r\n                    if (prevToken().type === TOKEN_TYPES.NUMBER && value[0] === \"-\") {\r\n                        out.push({ type: TOKEN_TYPES.OPERATOR, value: \"-\", start: i });\r\n                        value = value.substr(1);\r\n                        i++;\r\n                    }\r\n\r\n                    out.push({ type: TOKEN_TYPES.NUMBER, value, start: i });\r\n                    i += value.length;\r\n                }\r\n                else if (c === \"-\") {\r\n                    out.push({ type: TOKEN_TYPES.OPERATOR, value: \"-\", start: i });\r\n                    i += 1;\r\n                }\r\n                else throw new Error(`Unrecognised number: '${ss.substr(0, 10)}' at ${i}`);\r\n            } else if (c === \":\") {\r\n                const re = /[a-z0-9_]+/gi;\r\n                re.lastIndex = i;\r\n                const match = re.exec(string);\r\n                if (!match) throw Error(\"Tokenizer thought it was getting a param\");\r\n                out.push({ type: TOKEN_TYPES.PARAM, value: match[0], start: i });\r\n                i += match[0].length + 1;\r\n            } else {\r\n                const ss = string.substr(i);\r\n\r\n                let m = /^(?:SELECT|FROM|WHERE|ORDER BY|LIMIT|GROUP BY|OFFSET|HAVING|EXPLAIN|WITH|WINDOW|VALUES|CREATE TABLE|DROP TABLE|INSERT INTO|DELETE FROM|UPDATE|SET|AS|USING|ON|LEFT|INNER|OVER|PARTITION BY|DISTINCT|FILTER|WITHIN GROUP|ASC|DESC|ROWS|RANGE|GROUPS|UNBOUNDED|PRECEDING|FOLLOWING|CURRENT ROW|FORMAT)\\b/i.exec(ss);\r\n                if (m) {\r\n                    out.push({ type: TOKEN_TYPES.KEYWORD, value: m[0].toUpperCase(), start: i });\r\n                    i += m[0].length;\r\n                    continue;\r\n                }\r\n\r\n                m = /^(?:UNION(?: ALL)?|INTERSECT|EXCEPT)\\b/i.exec(ss);\r\n                if (m) {\r\n                    out.push({ type: TOKEN_TYPES.QUERY_OPERATOR, value: m[0].toUpperCase(), start: i });\r\n                    i += m[0].length;\r\n                    continue;\r\n                }\r\n\r\n                // subtract is dealt with as part of the number parsing\r\n                m = /^([<>+=!*\\/|%?]+|IS(?: NOT)? NULL\\b|(?:NOT )?LIKE\\b|(?:NOT )?REGEXP\\b|(?:NOT )?IN\\b|NOT\\b|AND\\b|OR\\b|BETWEEN\\b)/i.exec(ss);\r\n                if (m) {\r\n                    let type = TOKEN_TYPES.OPERATOR;\r\n\r\n                    if (m[0] === \"*\" &&\r\n                        // SELECT *; COUNT(*) etc.\r\n                        (prevToken().type === TOKEN_TYPES.KEYWORD ||\r\n                        (prevToken().type === TOKEN_TYPES.BRACKET && prevToken().value === \"(\") ||\r\n                        prevToken().type === TOKEN_TYPES.COMMA)\r\n                    ) {\r\n                        type = TOKEN_TYPES.NAME;\r\n                    }\r\n\r\n                    out.push({ type, value: m[0], start: i });\r\n                    i += m[0].length;\r\n                    continue;\r\n                }\r\n\r\n                m = /^(TRUE|FALSE|NULL|NOW|PI)/i.exec(ss);\r\n                if (m) {\r\n                    out.push({ type: TOKEN_TYPES.CONSTANT, value: m[0].toUpperCase(), start: i });\r\n                    i += m[0].length;\r\n                    continue;\r\n                }\r\n\r\n                m = /^([a-z_][a-z0-9_\\.\\*]*)/i.exec(ss);\r\n                //                      ^ Asterisk as in: Table.*\r\n                if (m) {\r\n                    out.push({ type: TOKEN_TYPES.NAME, value: m[0], start: i });\r\n                    i += m[0].length;\r\n                    continue;\r\n                }\r\n\r\n                throw new Error(`Unrecognised input: '${ss.substr(0, 10)}' at ${i}`);\r\n            }\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    TOKEN_TYPES,\r\n    DEBUG_TOKEN_TYPES,\r\n}","const {\r\n  VALUE_FUNCTIONS,\r\n  AGGREGATE_FUNCTIONS,\r\n  WINDOW_FUNCTIONS,\r\n  TABLE_VALUED_FUNCTIONS\r\n} = require('../evaluate/const');\r\n\r\nconst Query = require('../query');\r\n\r\nmodule.exports = {\r\n  informationSchema,\r\n};\r\n\r\n/** @typedef {import('../..')} Query */\r\n/** @typedef {import('../..').QueryContext} QueryContext */\r\n\r\n/**\r\n * @param {QueryContext} context\r\n * @param {*} schema\r\n */\r\nasync function informationSchema(context, schema) {\r\n    if (schema in infoTables) {\r\n        return infoTables[schema](context);\r\n    }\r\n\r\n    throw new Error(`Unkown information_schema view: ${schema}`);\r\n}\r\n\r\n\r\nconst infoTables = {\r\n    async tables ({ providers, views }) {\r\n        const results = [];\r\n        let table_type = \"BASE TABLE\";\r\n\r\n        results.push(...Object.keys(infoTables).map(table_name => ({\r\n            table_schema: \"information_schema\",\r\n            table_name,\r\n            table_type: \"SYSTEM VIEW\",\r\n        })));\r\n\r\n        for (const schema of Object.values(providers)) {\r\n            const { callbacks } = schema;\r\n            if (typeof callbacks.getTables === \"function\") {\r\n                const tables = await callbacks.getTables();\r\n                results.push(...tables.map(table_name => ({\r\n                    table_schema: schema.name,\r\n                    table_name,\r\n                    table_type\r\n                })));\r\n            }\r\n        }\r\n\r\n        table_type = \"VIEW\";\r\n        for (const table_name in views) {\r\n            results.push({\r\n                table_schema: \"\",\r\n                table_name,\r\n                table_type\r\n            });\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n    /**\r\n     * @param {QueryContext} context\r\n     */\r\n    async columns (context) {\r\n        const { views, schema } = context;\r\n        const { callbacks } = schema;\r\n\r\n        const results = [];\r\n        const whereName = context.findWhere(\"table_name\");\r\n\r\n        if (typeof callbacks.getTables === \"function\" &&\r\n            typeof callbacks.getColumns === \"function\") {\r\n            const tables = callbacks.getTables();\r\n\r\n            for (const table_name of tables) {\r\n                if (!whereName || table_name === whereName) {\r\n                    const cols = await callbacks.getColumns(table_name);\r\n                    results.push(...cols.map(({ name, type }, i) => ({\r\n                        table_schema: schema.name,\r\n                        table_name,\r\n                        column_name: name,\r\n                        ordinal_position: i + 1,\r\n                        data_type: type,\r\n                    })));\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const table_name in views) {\r\n            if (!whereName || table_name === whereName) {\r\n                const rows = await context.query.run(views[table_name]);\r\n\r\n                const headers = rows[0];\r\n                for (let i = 0; i < headers.length; i++) {\r\n                    results.push({\r\n                        table_schema: schema.name,\r\n                        table_name,\r\n                        column_name: headers[i],\r\n                        ordinal_position: i + 1,\r\n                        data_type: rows.length > 1 ? typeof rows[1][i] : null,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n    views ({ schema, views }) {\r\n        const results = [];\r\n\r\n        for (const table_name in views) {\r\n            results.push({\r\n                table_schema: schema.name,\r\n                table_name,\r\n                view_definition: views[table_name]\r\n            });\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n    routines ({ schema: { name: schema_name, userFunctions } }) {\r\n        const results = [];\r\n\r\n        function formatRoutine(routine_name, fn, data_type = null, routine_type = \"FUNCTION\", routine_schema=\"system\" ) {\r\n            const definition = String(fn);\r\n            const nativeMatch = /function ([a-zA-Z0-9]+)\\(\\) { \\[native code\\] }/.exec(definition);\r\n\r\n            return {\r\n                routine_schema,\r\n                routine_name,\r\n                routine_type,\r\n                data_type,\r\n                routine_body: \"EXTERNAL\",\r\n                routine_definition: nativeMatch ? null : definition,\r\n                external_name: nativeMatch ? nativeMatch[1] : routine_name,\r\n                external_language: nativeMatch ? \"c\" : \"js\",\r\n            };\r\n        }\r\n\r\n        for (const name in VALUE_FUNCTIONS) {\r\n            results.push(formatRoutine(name, VALUE_FUNCTIONS[name]));\r\n        }\r\n\r\n        for (const name in AGGREGATE_FUNCTIONS) {\r\n            results.push(formatRoutine(name, AGGREGATE_FUNCTIONS[name], null, \"AGGREGATE FUNCTION\"));\r\n        }\r\n\r\n        for (const name in TABLE_VALUED_FUNCTIONS) {\r\n            results.push(formatRoutine(name, TABLE_VALUED_FUNCTIONS[name], \"table\", \"TABLE VALUED FUNCTION\"));\r\n        }\r\n\r\n        for (const name in WINDOW_FUNCTIONS) {\r\n            results.push(formatRoutine(name, WINDOW_FUNCTIONS[name], null, \"WINDOW FUNCTION\"));\r\n        }\r\n\r\n        for (const name in userFunctions) {\r\n            results.push(formatRoutine(name, userFunctions[name], null, undefined, schema_name));\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n    routine_columns ({ findWhere, schema }) {\r\n        const results = [];\r\n        const whereName = findWhere(\"table_name\");\r\n\r\n        for (const table_name in TABLE_VALUED_FUNCTIONS) {\r\n            if (!whereName || table_name === whereName) {\r\n                results.push({\r\n                    table_schema: schema.name,\r\n                    table_name,\r\n                    column_name: \"value\",\r\n                    ordinal_position: 1,\r\n                    data_type: null,\r\n                });\r\n            }\r\n        }\r\n\r\n        return results;\r\n    },\r\n\r\n    schemata (query) {\r\n        return [\r\n            { schema_name: \"information_schema\" },\r\n            ...Object.keys(query.providers).map(schema_name => ({ schema_name })),\r\n        ]\r\n    },\r\n};","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/*! Moment Duration Format v2.2.2\n *  https://github.com/jsmreese/moment-duration-format\n *  Date: 2018-02-16\n *\n *  Duration format plugin function for the Moment.js library\n *  http://momentjs.com/\n *\n *  Copyright 2018 John Madhavan-Reese\n *  Released under the MIT license\n */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['moment'], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but only CommonJS-like\n        // enviroments that support module.exports, like Node.\n        try {\n            module.exports = factory(require('moment'));\n        } catch (e) {\n            // If moment is not available, leave the setup up to the user.\n            // Like when using moment-timezone or similar moment-based package.\n            module.exports = factory;\n        }\n    }\n\n    if (root) {\n        // Globals.\n        root.momentDurationFormatSetup = root.moment ? factory(root.moment) : factory;\n    }\n})(this, function (moment) {\n    // `Number#tolocaleString` is tested on plugin initialization.\n    // If the feature test passes, `toLocaleStringWorks` will be set to `true` and the\n    // native function will be used to generate formatted output. If the feature\n    // test fails, the fallback format function internal to this plugin will be\n    // used.\n    var toLocaleStringWorks = false;\n\n    // `Number#toLocaleString` rounds incorrectly for select numbers in Microsoft\n    // environments (Edge, IE11, Windows Phone) and possibly other environments.\n    // If the rounding test fails and `toLocaleString` will be used for formatting,\n    // the plugin will \"pre-round\" number values using the fallback number format\n    // function before passing them to `toLocaleString` for final formatting.\n    var toLocaleStringRoundingWorks = false;\n\n    // `Intl.NumberFormat#format` is tested on plugin initialization.\n    // If the feature test passes, `intlNumberFormatRoundingWorks` will be set to\n    // `true` and the native function will be used to generate formatted output.\n    // If the feature test fails, either `Number#tolocaleString` (if\n    // `toLocaleStringWorks` is `true`), or the fallback format function internal\n    //  to this plugin will be used.\n    var intlNumberFormatWorks = false;\n\n    // `Intl.NumberFormat#format` rounds incorrectly for select numbers in Microsoft\n    // environments (Edge, IE11, Windows Phone) and possibly other environments.\n    // If the rounding test fails and `Intl.NumberFormat#format` will be used for\n    // formatting, the plugin will \"pre-round\" number values using the fallback number\n    // format function before passing them to `Intl.NumberFormat#format` for final\n    // formatting.\n    var intlNumberFormatRoundingWorks = false;\n\n    // Token type names in order of descending magnitude.\n    var types = \"escape years months weeks days hours minutes seconds milliseconds general\".split(\" \");\n\n    var bubbles = [\n        {\n            type: \"seconds\",\n            targets: [\n                { type: \"minutes\", value: 60 },\n                { type: \"hours\", value: 3600 },\n                { type: \"days\", value: 86400 },\n                { type: \"weeks\", value: 604800 },\n                { type: \"months\", value: 2678400 },\n                { type: \"years\", value: 31536000 }\n            ]\n        },\n        {\n            type: \"minutes\",\n            targets: [\n                { type: \"hours\", value: 60 },\n                { type: \"days\", value: 1440 },\n                { type: \"weeks\", value: 10080 },\n                { type: \"months\", value: 44640 },\n                { type: \"years\", value: 525600 }\n            ]\n        },\n        {\n            type: \"hours\",\n            targets: [\n                { type: \"days\", value: 24 },\n                { type: \"weeks\", value: 168 },\n                { type: \"months\", value: 744 },\n                { type: \"years\", value: 8760 }\n            ]\n        },\n        {\n            type: \"days\",\n            targets: [\n                { type: \"weeks\", value: 7 },\n                { type: \"months\", value: 31 },\n                { type: \"years\", value: 365 }\n            ]\n        },\n        {\n            type: \"months\",\n            targets: [\n                { type: \"years\", value: 12 }\n            ]\n        }\n    ];\n\n    // stringIncludes\n    function stringIncludes(str, search) {\n        if (search.length > str.length) {\n          return false;\n        }\n\n        return str.indexOf(search) !== -1;\n    }\n\n    // repeatZero(qty)\n    // Returns \"0\" repeated `qty` times.\n    // `qty` must be a integer >= 0.\n    function repeatZero(qty) {\n        var result = \"\";\n\n        while (qty) {\n            result += \"0\";\n            qty -= 1;\n        }\n\n        return result;\n    }\n\n    function stringRound(digits) {\n        var digitsArray = digits.split(\"\").reverse();\n        var i = 0;\n        var carry = true;\n\n        while (carry && i < digitsArray.length) {\n            if (i) {\n                if (digitsArray[i] === \"9\") {\n                    digitsArray[i] = \"0\";\n                } else {\n                    digitsArray[i] = (parseInt(digitsArray[i], 10) + 1).toString();\n                    carry = false;\n                }\n            } else {\n                if (parseInt(digitsArray[i], 10) < 5) {\n                    carry = false;\n                }\n\n                digitsArray[i] = \"0\";\n            }\n\n            i += 1;\n        }\n\n        if (carry) {\n            digitsArray.push(\"1\");\n        }\n\n        return digitsArray.reverse().join(\"\");\n    }\n\n    // cachedNumberFormat\n    // Returns an `Intl.NumberFormat` instance for the given locale and configuration.\n    // On first use of a particular configuration, the instance is cached for fast\n    // repeat access.\n    function cachedNumberFormat(locale, options) {\n        // Create a sorted, stringified version of `options`\n        // for use as part of the cache key\n        var optionsString = map(\n            keys(options).sort(),\n            function(key) {\n                return key + ':' + options[key];\n            }\n        ).join(',');\n\n        // Set our cache key\n        var cacheKey = locale + '+' + optionsString;\n\n        // If we don't have this configuration cached, configure and cache it\n        if (!cachedNumberFormat.cache[cacheKey]) {\n            cachedNumberFormat.cache[cacheKey] = Intl.NumberFormat(locale, options);\n        }\n\n        // Return the cached version of this configuration\n        return cachedNumberFormat.cache[cacheKey];\n    }\n    cachedNumberFormat.cache = {};\n\n    // formatNumber\n    // Formats any number greater than or equal to zero using these options:\n    // - userLocale\n    // - useToLocaleString\n    // - useGrouping\n    // - grouping\n    // - maximumSignificantDigits\n    // - minimumIntegerDigits\n    // - fractionDigits\n    // - groupingSeparator\n    // - decimalSeparator\n    //\n    // `useToLocaleString` will use `Intl.NumberFormat` or `toLocaleString` for formatting.\n    // `userLocale` option is passed through to the formatting function.\n    // `fractionDigits` is passed through to `maximumFractionDigits` and `minimumFractionDigits`\n    // Using `maximumSignificantDigits` will override `minimumIntegerDigits` and `fractionDigits`.\n    function formatNumber(number, options, userLocale) {\n        var useToLocaleString = options.useToLocaleString;\n        var useGrouping = options.useGrouping;\n        var grouping = useGrouping && options.grouping.slice();\n        var maximumSignificantDigits = options.maximumSignificantDigits;\n        var minimumIntegerDigits = options.minimumIntegerDigits || 1;\n        var fractionDigits = options.fractionDigits || 0;\n        var groupingSeparator = options.groupingSeparator;\n        var decimalSeparator = options.decimalSeparator;\n\n        if (useToLocaleString && userLocale) {\n            var localeStringOptions = {\n                minimumIntegerDigits: minimumIntegerDigits,\n                useGrouping: useGrouping\n            };\n\n            if (fractionDigits) {\n                localeStringOptions.maximumFractionDigits = fractionDigits;\n                localeStringOptions.minimumFractionDigits = fractionDigits;\n            }\n\n            // toLocaleString output is \"0.0\" instead of \"0\" for HTC browsers\n            // when maximumSignificantDigits is set. See #96.\n            if (maximumSignificantDigits && number > 0) {\n                localeStringOptions.maximumSignificantDigits = maximumSignificantDigits;\n            }\n\n            if (intlNumberFormatWorks) {\n                if (!intlNumberFormatRoundingWorks) {\n                    var roundingOptions = extend({}, options);\n                    roundingOptions.useGrouping = false;\n                    roundingOptions.decimalSeparator = \".\";\n                    number = parseFloat(formatNumber(number, roundingOptions), 10);\n                }\n\n                return cachedNumberFormat(userLocale, localeStringOptions).format(number);\n            } else {\n                if (!toLocaleStringRoundingWorks) {\n                    var roundingOptions = extend({}, options);\n                    roundingOptions.useGrouping = false;\n                    roundingOptions.decimalSeparator = \".\";\n                    number = parseFloat(formatNumber(number, roundingOptions), 10);\n                }\n\n                return number.toLocaleString(userLocale, localeStringOptions);\n            }\n        }\n\n        var numberString;\n\n        // Add 1 to digit output length for floating point errors workaround. See below.\n        if (maximumSignificantDigits) {\n            numberString = number.toPrecision(maximumSignificantDigits + 1);\n        } else {\n            numberString = number.toFixed(fractionDigits + 1);\n        }\n\n        var integerString;\n        var fractionString;\n        var exponentString;\n\n        var temp = numberString.split(\"e\");\n\n        exponentString = temp[1] || \"\";\n\n        temp = temp[0].split(\".\");\n\n        fractionString = temp[1] || \"\";\n        integerString = temp[0] || \"\";\n\n        // Workaround for floating point errors in `toFixed` and `toPrecision`.\n        // (3.55).toFixed(1); --> \"3.5\"\n        // (123.55 - 120).toPrecision(2); --> \"3.5\"\n        // (123.55 - 120); --> 3.549999999999997\n        // (123.55 - 120).toFixed(2); --> \"3.55\"\n        // Round by examing the string output of the next digit.\n\n        // *************** Implement String Rounding here ***********************\n        // Check integerString + fractionString length of toPrecision before rounding.\n        // Check length of fractionString from toFixed output before rounding.\n        var integerLength = integerString.length;\n        var fractionLength = fractionString.length;\n        var digitCount = integerLength + fractionLength;\n        var digits = integerString + fractionString;\n\n        if (maximumSignificantDigits && digitCount === (maximumSignificantDigits + 1) || !maximumSignificantDigits && fractionLength === (fractionDigits + 1)) {\n            // Round digits.\n            digits = stringRound(digits);\n\n            if (digits.length === digitCount + 1) {\n                integerLength = integerLength + 1;\n            }\n\n            // Discard final fractionDigit.\n            if (fractionLength) {\n                digits = digits.slice(0, -1);\n            }\n\n            // Separate integer and fraction.\n            integerString = digits.slice(0, integerLength);\n            fractionString = digits.slice(integerLength);\n        }\n\n        // Trim trailing zeroes from fractionString because toPrecision outputs\n        // precision, not significant digits.\n        if (maximumSignificantDigits) {\n            fractionString = fractionString.replace(/0*$/, \"\");\n        }\n\n        // Handle exponent.\n        var exponent = parseInt(exponentString, 10);\n\n        if (exponent > 0) {\n            if (fractionString.length <= exponent) {\n                fractionString = fractionString + repeatZero(exponent - fractionString.length);\n\n                integerString = integerString + fractionString;\n                fractionString = \"\";\n            } else {\n                integerString = integerString + fractionString.slice(0, exponent);\n                fractionString = fractionString.slice(exponent);\n            }\n        } else if (exponent < 0) {\n            fractionString = (repeatZero(Math.abs(exponent) - integerString.length) + integerString + fractionString);\n\n            integerString = \"0\";\n        }\n\n        if (!maximumSignificantDigits) {\n            // Trim or pad fraction when not using maximumSignificantDigits.\n            fractionString = fractionString.slice(0, fractionDigits);\n\n            if (fractionString.length < fractionDigits) {\n                fractionString = fractionString + repeatZero(fractionDigits - fractionString.length);\n            }\n\n            // Pad integer when using minimumIntegerDigits\n            // and not using maximumSignificantDigits.\n            if (integerString.length < minimumIntegerDigits) {\n                integerString = repeatZero(minimumIntegerDigits - integerString.length) + integerString;\n            }\n        }\n\n        var formattedString = \"\";\n\n        // Handle grouping.\n        if (useGrouping) {\n            temp = integerString;\n            var group;\n\n            while (temp.length) {\n                if (grouping.length) {\n                    group = grouping.shift();\n                }\n\n                if (formattedString) {\n                    formattedString = groupingSeparator + formattedString;\n                }\n\n                formattedString = temp.slice(-group) + formattedString;\n\n                temp = temp.slice(0, -group);\n            }\n        } else {\n            formattedString = integerString;\n        }\n\n        // Add decimalSeparator and fraction.\n        if (fractionString) {\n            formattedString = formattedString + decimalSeparator + fractionString;\n        }\n\n        return formattedString;\n    }\n\n    // durationLabelCompare\n    function durationLabelCompare(a, b) {\n        if (a.label.length > b.label.length) {\n            return -1;\n        }\n\n        if (a.label.length < b.label.length) {\n            return 1;\n        }\n\n        // a must be equal to b\n        return 0;\n    }\n\n    // durationGetLabels\n    function durationGetLabels(token, localeData) {\n        var labels = [];\n\n        each(keys(localeData), function (localeDataKey) {\n            if (localeDataKey.slice(0, 15) !== \"_durationLabels\") {\n                return;\n            }\n\n            var labelType = localeDataKey.slice(15).toLowerCase();\n\n            each(keys(localeData[localeDataKey]), function (labelKey) {\n                if (labelKey.slice(0, 1) === token) {\n                    labels.push({\n                        type: labelType,\n                        key: labelKey,\n                        label: localeData[localeDataKey][labelKey]\n                    });\n                }\n            });\n        });\n\n        return labels;\n    }\n\n    // durationPluralKey\n    function durationPluralKey(token, integerValue, decimalValue) {\n        // Singular for a value of `1`, but not for `1.0`.\n        if (integerValue === 1 && decimalValue === null) {\n            return token;\n        }\n\n        return token + token;\n    }\n\n    var engLocale = {\n        durationLabelsStandard: {\n            S: 'millisecond',\n            SS: 'milliseconds',\n            s: 'second',\n            ss: 'seconds',\n            m: 'minute',\n            mm: 'minutes',\n            h: 'hour',\n            hh: 'hours',\n            d: 'day',\n            dd: 'days',\n            w: 'week',\n            ww: 'weeks',\n            M: 'month',\n            MM: 'months',\n            y: 'year',\n            yy: 'years'\n        },\n        durationLabelsShort: {\n            S: 'msec',\n            SS: 'msecs',\n            s: 'sec',\n            ss: 'secs',\n            m: 'min',\n            mm: 'mins',\n            h: 'hr',\n            hh: 'hrs',\n            d: 'dy',\n            dd: 'dys',\n            w: 'wk',\n            ww: 'wks',\n            M: 'mo',\n            MM: 'mos',\n            y: 'yr',\n            yy: 'yrs'\n        },\n        durationTimeTemplates: {\n            HMS: 'h:mm:ss',\n            HM: 'h:mm',\n            MS: 'm:ss'\n        },\n        durationLabelTypes: [\n            { type: \"standard\", string: \"__\" },\n            { type: \"short\", string: \"_\" }\n        ],\n        durationPluralKey: durationPluralKey\n    };\n\n    // isArray\n    function isArray(array) {\n        return Object.prototype.toString.call(array) === \"[object Array]\";\n    }\n\n    // isObject\n    function isObject(obj) {\n        return Object.prototype.toString.call(obj) === \"[object Object]\";\n    }\n\n    // findLast\n    function findLast(array, callback) {\n        var index = array.length;\n\n        while (index -= 1) {\n            if (callback(array[index])) { return array[index]; }\n        }\n    }\n\n    // find\n    function find(array, callback) {\n        var index = 0;\n\n        var max = array && array.length || 0;\n\n        var match;\n\n        if (typeof callback !== \"function\") {\n            match = callback;\n            callback = function (item) {\n                return item === match;\n            };\n        }\n\n        while (index < max) {\n            if (callback(array[index])) { return array[index]; }\n            index += 1;\n        }\n    }\n\n    // each\n    function each(array, callback) {\n        var index = 0,\n            max = array.length;\n\n        if (!array || !max) { return; }\n\n        while (index < max) {\n            if (callback(array[index], index) === false) { return; }\n            index += 1;\n        }\n    }\n\n    // map\n    function map(array, callback) {\n        var index = 0,\n            max = array.length,\n            ret = [];\n\n        if (!array || !max) { return ret; }\n\n        while (index < max) {\n            ret[index] = callback(array[index], index);\n            index += 1;\n        }\n\n        return ret;\n    }\n\n    // pluck\n    function pluck(array, prop) {\n        return map(array, function (item) {\n            return item[prop];\n        });\n    }\n\n    // compact\n    function compact(array) {\n        var ret = [];\n\n        each(array, function (item) {\n            if (item) { ret.push(item); }\n        });\n\n        return ret;\n    }\n\n    // unique\n    function unique(array) {\n        var ret = [];\n\n        each(array, function (_a) {\n            if (!find(ret, _a)) { ret.push(_a); }\n        });\n\n        return ret;\n    }\n\n    // intersection\n    function intersection(a, b) {\n        var ret = [];\n\n        each(a, function (_a) {\n            each(b, function (_b) {\n                if (_a === _b) { ret.push(_a); }\n            });\n        });\n\n        return unique(ret);\n    }\n\n    // rest\n    function rest(array, callback) {\n        var ret = [];\n\n        each(array, function (item, index) {\n            if (!callback(item)) {\n                ret = array.slice(index);\n                return false;\n            }\n        });\n\n        return ret;\n    }\n\n    // initial\n    function initial(array, callback) {\n        var reversed = array.slice().reverse();\n\n        return rest(reversed, callback).reverse();\n    }\n\n    // extend\n    function extend(a, b) {\n        for (var key in b) {\n            if (b.hasOwnProperty(key)) { a[key] = b[key]; }\n        }\n\n        return a;\n    }\n\n    // keys\n    function keys(a) {\n        var ret = [];\n\n        for (var key in a) {\n            if (a.hasOwnProperty(key)) { ret.push(key); }\n        }\n\n        return ret;\n    }\n\n    // any\n    function any(array, callback) {\n        var index = 0,\n            max = array.length;\n\n        if (!array || !max) { return false; }\n\n        while (index < max) {\n            if (callback(array[index], index) === true) { return true; }\n            index += 1;\n        }\n\n        return false;\n    }\n\n    // flatten\n    function flatten(array) {\n        var ret = [];\n\n        each(array, function(child) {\n            ret = ret.concat(child);\n        });\n\n        return ret;\n    }\n\n    function toLocaleStringSupportsLocales() {\n        var number = 0;\n        try {\n            number.toLocaleString('i');\n        } catch (e) {\n            return e.name === 'RangeError';\n        }\n        return false;\n    }\n\n    function featureTestFormatterRounding(formatter) {\n        return formatter(3.55, \"en\", {\n            useGrouping: false,\n            minimumIntegerDigits: 1,\n            minimumFractionDigits: 1,\n            maximumFractionDigits: 1\n        }) === \"3.6\";\n    }\n\n    function featureTestFormatter(formatter) {\n        var passed = true;\n\n        // Test minimumIntegerDigits.\n        passed = passed && formatter(1, \"en\", { minimumIntegerDigits: 1 }) === \"1\";\n        passed = passed && formatter(1, \"en\", { minimumIntegerDigits: 2 }) === \"01\";\n        passed = passed && formatter(1, \"en\", { minimumIntegerDigits: 3 }) === \"001\";\n        if (!passed) { return false; }\n\n        // Test maximumFractionDigits and minimumFractionDigits.\n        passed = passed && formatter(99.99, \"en\", { maximumFractionDigits: 0, minimumFractionDigits: 0 }) === \"100\";\n        passed = passed && formatter(99.99, \"en\", { maximumFractionDigits: 1, minimumFractionDigits: 1 }) === \"100.0\";\n        passed = passed && formatter(99.99, \"en\", { maximumFractionDigits: 2, minimumFractionDigits: 2 }) === \"99.99\";\n        passed = passed && formatter(99.99, \"en\", { maximumFractionDigits: 3, minimumFractionDigits: 3 }) === \"99.990\";\n        if (!passed) { return false; }\n\n        // Test maximumSignificantDigits.\n        passed = passed && formatter(99.99, \"en\", { maximumSignificantDigits: 1 }) === \"100\";\n        passed = passed && formatter(99.99, \"en\", { maximumSignificantDigits: 2 }) === \"100\";\n        passed = passed && formatter(99.99, \"en\", { maximumSignificantDigits: 3 }) === \"100\";\n        passed = passed && formatter(99.99, \"en\", { maximumSignificantDigits: 4 }) === \"99.99\";\n        passed = passed && formatter(99.99, \"en\", { maximumSignificantDigits: 5 }) === \"99.99\";\n        if (!passed) { return false; }\n\n        // Test grouping.\n        passed = passed && formatter(1000, \"en\", { useGrouping: true }) === \"1,000\";\n        passed = passed && formatter(1000, \"en\", { useGrouping: false }) === \"1000\";\n        if (!passed) { return false; }\n\n        return true;\n    }\n\n    // durationsFormat(durations [, template] [, precision] [, settings])\n    function durationsFormat() {\n        var args = [].slice.call(arguments);\n        var settings = {};\n        var durations;\n\n        // Parse arguments.\n        each(args, function (arg, index) {\n            if (!index) {\n                if (!isArray(arg)) {\n                    throw \"Expected array as the first argument to durationsFormat.\";\n                }\n\n                durations = arg;\n            }\n\n            if (typeof arg === \"string\" || typeof arg === \"function\") {\n                settings.template = arg;\n                return;\n            }\n\n            if (typeof arg === \"number\") {\n                settings.precision = arg;\n                return;\n            }\n\n            if (isObject(arg)) {\n                extend(settings, arg);\n            }\n        });\n\n        if (!durations || !durations.length) {\n            return [];\n        }\n\n        settings.returnMomentTypes = true;\n\n        var formattedDurations = map(durations, function (dur) {\n            return dur.format(settings);\n        });\n\n        // Merge token types from all durations.\n        var outputTypes = intersection(types, unique(pluck(flatten(formattedDurations), \"type\")));\n\n        var largest = settings.largest;\n\n        if (largest) {\n            outputTypes = outputTypes.slice(0, largest);\n        }\n\n        settings.returnMomentTypes = false;\n        settings.outputTypes = outputTypes;\n\n        return map(durations, function (dur) {\n            return dur.format(settings);\n        });\n    }\n\n    // durationFormat([template] [, precision] [, settings])\n    function durationFormat() {\n\n        var args = [].slice.call(arguments);\n        var settings = extend({}, this.format.defaults);\n\n        // Keep a shadow copy of this moment for calculating remainders.\n        // Perform all calculations on positive duration value, handle negative\n        // sign at the very end.\n        var asMilliseconds = this.asMilliseconds();\n        var asMonths = this.asMonths();\n\n        // Treat invalid durations as having a value of 0 milliseconds.\n        if (typeof this.isValid === \"function\" && this.isValid() === false) {\n            asMilliseconds = 0;\n            asMonths = 0;\n        }\n\n        var isNegative = asMilliseconds < 0;\n\n        // Two shadow copies are needed because of the way moment.js handles\n        // duration arithmetic for years/months and for weeks/days/hours/minutes/seconds.\n        var remainder = moment.duration(Math.abs(asMilliseconds), \"milliseconds\");\n        var remainderMonths = moment.duration(Math.abs(asMonths), \"months\");\n\n        // Parse arguments.\n        each(args, function (arg) {\n            if (typeof arg === \"string\" || typeof arg === \"function\") {\n                settings.template = arg;\n                return;\n            }\n\n            if (typeof arg === \"number\") {\n                settings.precision = arg;\n                return;\n            }\n\n            if (isObject(arg)) {\n                extend(settings, arg);\n            }\n        });\n\n        var momentTokens = {\n            years: \"y\",\n            months: \"M\",\n            weeks: \"w\",\n            days: \"d\",\n            hours: \"h\",\n            minutes: \"m\",\n            seconds: \"s\",\n            milliseconds: \"S\"\n        };\n\n        var tokenDefs = {\n            escape: /\\[(.+?)\\]/,\n            years: /\\*?[Yy]+/,\n            months: /\\*?M+/,\n            weeks: /\\*?[Ww]+/,\n            days: /\\*?[Dd]+/,\n            hours: /\\*?[Hh]+/,\n            minutes: /\\*?m+/,\n            seconds: /\\*?s+/,\n            milliseconds: /\\*?S+/,\n            general: /.+?/\n        };\n\n        // Types array is available in the template function.\n        settings.types = types;\n\n        var typeMap = function (token) {\n            return find(types, function (type) {\n                return tokenDefs[type].test(token);\n            });\n        };\n\n        var tokenizer = new RegExp(map(types, function (type) {\n            return tokenDefs[type].source;\n        }).join(\"|\"), \"g\");\n\n        // Current duration object is available in the template function.\n        settings.duration = this;\n\n        // Eval template function and cache template string.\n        var template = typeof settings.template === \"function\" ? settings.template.apply(settings) : settings.template;\n\n        // outputTypes and returnMomentTypes are settings to support durationsFormat().\n\n        // outputTypes is an array of moment token types that determines\n        // the tokens returned in formatted output. This option overrides\n        // trim, largest, stopTrim, etc.\n        var outputTypes = settings.outputTypes;\n\n        // returnMomentTypes is a boolean that sets durationFormat to return\n        // the processed momentTypes instead of formatted output.\n        var returnMomentTypes = settings.returnMomentTypes;\n\n        var largest = settings.largest;\n\n        // Setup stopTrim array of token types.\n        var stopTrim = [];\n\n        if (!outputTypes) {\n            if (isArray(settings.stopTrim)) {\n                settings.stopTrim = settings.stopTrim.join(\"\");\n            }\n\n            // Parse stopTrim string to create token types array.\n            if (settings.stopTrim) {\n                each(settings.stopTrim.match(tokenizer), function (token) {\n                    var type = typeMap(token);\n\n                    if (type === \"escape\" || type === \"general\") {\n                        return;\n                    }\n\n                    stopTrim.push(type);\n                });\n            }\n        }\n\n        // Cache moment's locale data.\n        var localeData = moment.localeData();\n\n        if (!localeData) {\n            localeData = {};\n        }\n\n        // Fall back to this plugin's `eng` extension.\n        each(keys(engLocale), function (key) {\n            if (typeof engLocale[key] === \"function\") {\n                if (!localeData[key]) {\n                    localeData[key] = engLocale[key];\n                }\n\n                return;\n            }\n\n            if (!localeData[\"_\" + key]) {\n                localeData[\"_\" + key] = engLocale[key];\n            }\n        });\n\n        // Replace Duration Time Template strings.\n        // For locale `eng`: `_HMS_`, `_HM_`, and `_MS_`.\n        each(keys(localeData._durationTimeTemplates), function (item) {\n            template = template.replace(\"_\" + item + \"_\", localeData._durationTimeTemplates[item]);\n        });\n\n        // Determine user's locale.\n        var userLocale = settings.userLocale || moment.locale();\n\n        var useLeftUnits = settings.useLeftUnits;\n        var usePlural = settings.usePlural;\n        var precision = settings.precision;\n        var forceLength = settings.forceLength;\n        var useGrouping = settings.useGrouping;\n        var trunc = settings.trunc;\n\n        // Use significant digits only when precision is greater than 0.\n        var useSignificantDigits = settings.useSignificantDigits && precision > 0;\n        var significantDigits = useSignificantDigits ? settings.precision : 0;\n        var significantDigitsCache = significantDigits;\n\n        var minValue = settings.minValue;\n        var isMinValue = false;\n\n        var maxValue = settings.maxValue;\n        var isMaxValue = false;\n\n        // formatNumber fallback options.\n        var useToLocaleString = settings.useToLocaleString;\n        var groupingSeparator = settings.groupingSeparator;\n        var decimalSeparator = settings.decimalSeparator;\n        var grouping = settings.grouping;\n\n        useToLocaleString = useToLocaleString && (toLocaleStringWorks || intlNumberFormatWorks);\n\n        // Trim options.\n        var trim = settings.trim;\n\n        if (isArray(trim)) {\n            trim = trim.join(\" \");\n        }\n\n        if (trim === null && (largest || maxValue || useSignificantDigits)) {\n            trim = \"all\";\n        }\n\n        if (trim === null || trim === true || trim === \"left\" || trim === \"right\") {\n            trim = \"large\";\n        }\n\n        if (trim === false) {\n            trim = \"\";\n        }\n\n        var trimIncludes = function (item) {\n            return item.test(trim);\n        };\n\n        var rLarge = /large/;\n        var rSmall = /small/;\n        var rBoth = /both/;\n        var rMid = /mid/;\n        var rAll = /^all|[^sm]all/;\n        var rFinal = /final/;\n\n        var trimLarge = largest > 0 || any([rLarge, rBoth, rAll], trimIncludes);\n        var trimSmall = any([rSmall, rBoth, rAll], trimIncludes);\n        var trimMid = any([rMid, rAll], trimIncludes);\n        var trimFinal = any([rFinal, rAll], trimIncludes);\n\n        // Parse format string to create raw tokens array.\n        var rawTokens = map(template.match(tokenizer), function (token, index) {\n            var type = typeMap(token);\n\n            if (token.slice(0, 1) === \"*\") {\n                token = token.slice(1);\n\n                if (type !== \"escape\" && type !== \"general\") {\n                    stopTrim.push(type);\n                }\n            }\n\n            return {\n                index: index,\n                length: token.length,\n                text: \"\",\n\n                // Replace escaped tokens with the non-escaped token text.\n                token: (type === \"escape\" ? token.replace(tokenDefs.escape, \"$1\") : token),\n\n                // Ignore type on non-moment tokens.\n                type: ((type === \"escape\" || type === \"general\") ? null : type)\n            };\n        });\n\n        // Associate text tokens with moment tokens.\n        var currentToken = {\n            index: 0,\n            length: 0,\n            token: \"\",\n            text: \"\",\n            type: null\n        };\n\n        var tokens = [];\n\n        if (useLeftUnits) {\n            rawTokens.reverse();\n        }\n\n        each(rawTokens, function (token) {\n            if (token.type) {\n                if (currentToken.type || currentToken.text) {\n                    tokens.push(currentToken);\n                }\n\n                currentToken = token;\n\n                return;\n            }\n\n            if (useLeftUnits) {\n                currentToken.text = token.token + currentToken.text;\n            } else {\n                currentToken.text += token.token;\n            }\n        });\n\n        if (currentToken.type || currentToken.text) {\n            tokens.push(currentToken);\n        }\n\n        if (useLeftUnits) {\n            tokens.reverse();\n        }\n\n        // Find unique moment token types in the template in order of\n        // descending magnitude.\n        var momentTypes = intersection(types, unique(compact(pluck(tokens, \"type\"))));\n\n        // Exit early if there are no moment token types.\n        if (!momentTypes.length) {\n            return pluck(tokens, \"text\").join(\"\");\n        }\n\n        // Calculate values for each moment type in the template.\n        // For processing the settings, values are associated with moment types.\n        // Values will be assigned to tokens at the last step in order to\n        // assume nothing about frequency or order of tokens in the template.\n        momentTypes = map(momentTypes, function (momentType, index) {\n            // Is this the least-magnitude moment token found?\n            var isSmallest = ((index + 1) === momentTypes.length);\n\n            // Is this the greatest-magnitude moment token found?\n            var isLargest = (!index);\n\n            // Get the raw value in the current units.\n            var rawValue;\n\n            if (momentType === \"years\" || momentType === \"months\") {\n                rawValue = remainderMonths.as(momentType);\n            } else {\n                rawValue = remainder.as(momentType);\n            }\n\n            var wholeValue = Math.floor(rawValue);\n            var decimalValue = rawValue - wholeValue;\n\n            var token = find(tokens, function (token) {\n                return momentType === token.type;\n            });\n\n            if (isLargest && maxValue && rawValue > maxValue) {\n                isMaxValue = true;\n            }\n\n            if (isSmallest && minValue && Math.abs(settings.duration.as(momentType)) < minValue) {\n                isMinValue = true;\n            }\n\n            // Note the length of the largest-magnitude moment token:\n            // if it is greater than one and forceLength is not set,\n            // then default forceLength to `true`.\n            //\n            // Rationale is this: If the template is \"h:mm:ss\" and the\n            // moment value is 5 minutes, the user-friendly output is\n            // \"5:00\", not \"05:00\". We shouldn't pad the `minutes` token\n            // even though it has length of two if the template is \"h:mm:ss\";\n            //\n            // If the minutes output should always include the leading zero\n            // even when the hour is trimmed then set `{ forceLength: true }`\n            // to output \"05:00\". If the template is \"hh:mm:ss\", the user\n            // clearly wanted everything padded so we should output \"05:00\";\n            //\n            // If the user wants the full padded output, they can use\n            // template \"hh:mm:ss\" and set `{ trim: false }` to output\n            // \"00:05:00\".\n            if (isLargest && forceLength === null && token.length > 1) {\n                forceLength = true;\n            }\n\n            // Update remainder.\n            remainder.subtract(wholeValue, momentType);\n            remainderMonths.subtract(wholeValue, momentType);\n\n            return {\n                rawValue: rawValue,\n                wholeValue: wholeValue,\n                // Decimal value is only retained for the least-magnitude\n                // moment type in the format template.\n                decimalValue: isSmallest ? decimalValue : 0,\n                isSmallest: isSmallest,\n                isLargest: isLargest,\n                type: momentType,\n                // Tokens can appear multiple times in a template string,\n                // but all instances must share the same length.\n                tokenLength: token.length\n            };\n        });\n\n        var truncMethod = trunc ? Math.floor : Math.round;\n        var truncate = function (value, places) {\n            var factor = Math.pow(10, places);\n            return truncMethod(value * factor) / factor;\n        };\n\n        var foundFirst = false;\n        var bubbled = false;\n\n        var formatValue = function (momentType, index) {\n            var formatOptions = {\n                useGrouping: useGrouping,\n                groupingSeparator: groupingSeparator,\n                decimalSeparator: decimalSeparator,\n                grouping: grouping,\n                useToLocaleString: useToLocaleString\n            };\n\n            if (useSignificantDigits) {\n                if (significantDigits <= 0) {\n                    momentType.rawValue = 0;\n                    momentType.wholeValue = 0;\n                    momentType.decimalValue = 0;\n                } else {\n                    formatOptions.maximumSignificantDigits = significantDigits;\n                    momentType.significantDigits = significantDigits;\n                }\n            }\n\n            if (isMaxValue && !bubbled) {\n                if (momentType.isLargest) {\n                    momentType.wholeValue = maxValue;\n                    momentType.decimalValue = 0;\n                } else {\n                    momentType.wholeValue = 0;\n                    momentType.decimalValue = 0;\n                }\n            }\n\n            if (isMinValue && !bubbled) {\n                if (momentType.isSmallest) {\n                    momentType.wholeValue = minValue;\n                    momentType.decimalValue = 0;\n                } else {\n                    momentType.wholeValue = 0;\n                    momentType.decimalValue = 0;\n                }\n            }\n\n            if (momentType.isSmallest || momentType.significantDigits && momentType.significantDigits - momentType.wholeValue.toString().length <= 0) {\n                // Apply precision to least significant token value.\n                if (precision < 0) {\n                    momentType.value = truncate(momentType.wholeValue, precision);\n                } else if (precision === 0) {\n                    momentType.value = truncMethod(momentType.wholeValue + momentType.decimalValue);\n                } else { // precision > 0\n                    if (useSignificantDigits) {\n                        if (trunc) {\n                            momentType.value = truncate(momentType.rawValue, significantDigits - momentType.wholeValue.toString().length);\n                        } else {\n                            momentType.value = momentType.rawValue;\n                        }\n\n                        if (momentType.wholeValue) {\n                            significantDigits -= momentType.wholeValue.toString().length;\n                        }\n                    } else {\n                        formatOptions.fractionDigits = precision;\n\n                        if (trunc) {\n                            momentType.value = momentType.wholeValue + truncate(momentType.decimalValue, precision);\n                        } else {\n                            momentType.value = momentType.wholeValue + momentType.decimalValue;\n                        }\n                    }\n                }\n            } else {\n                if (useSignificantDigits && momentType.wholeValue) {\n                    // Outer Math.round required here to handle floating point errors.\n                    momentType.value = Math.round(truncate(momentType.wholeValue, momentType.significantDigits - momentType.wholeValue.toString().length));\n\n                    significantDigits -= momentType.wholeValue.toString().length;\n                } else {\n                    momentType.value = momentType.wholeValue;\n                }\n            }\n\n            if (momentType.tokenLength > 1 && (forceLength || foundFirst)) {\n                formatOptions.minimumIntegerDigits = momentType.tokenLength;\n\n                if (bubbled && formatOptions.maximumSignificantDigits < momentType.tokenLength) {\n                    delete formatOptions.maximumSignificantDigits;\n                }\n            }\n\n            if (!foundFirst && (momentType.value > 0 || trim === \"\" /* trim: false */ || find(stopTrim, momentType.type) || find(outputTypes, momentType.type))) {\n                foundFirst = true;\n            }\n\n            momentType.formattedValue = formatNumber(momentType.value, formatOptions, userLocale);\n\n            formatOptions.useGrouping = false;\n            formatOptions.decimalSeparator = \".\";\n            momentType.formattedValueEn = formatNumber(momentType.value, formatOptions, \"en\");\n\n            if (momentType.tokenLength === 2 && momentType.type === \"milliseconds\") {\n                momentType.formattedValueMS = formatNumber(momentType.value, {\n                    minimumIntegerDigits: 3,\n                    useGrouping: false\n                }, \"en\").slice(0, 2);\n            }\n\n            return momentType;\n        };\n\n        // Calculate formatted values.\n        momentTypes = map(momentTypes, formatValue);\n        momentTypes = compact(momentTypes);\n\n        // Bubble rounded values.\n        if (momentTypes.length > 1) {\n            var findType = function (type) {\n                return find(momentTypes, function (momentType) {\n                    return momentType.type === type;\n                });\n            };\n\n            var bubbleTypes = function (bubble) {\n                var bubbleMomentType = findType(bubble.type);\n\n                if (!bubbleMomentType) {\n                    return;\n                }\n\n                each(bubble.targets, function (target) {\n                    var targetMomentType = findType(target.type);\n\n                    if (!targetMomentType) {\n                        return;\n                    }\n\n                    if (parseInt(bubbleMomentType.formattedValueEn, 10) === target.value) {\n                        bubbleMomentType.rawValue = 0;\n                        bubbleMomentType.wholeValue = 0;\n                        bubbleMomentType.decimalValue = 0;\n                        targetMomentType.rawValue += 1;\n                        targetMomentType.wholeValue += 1;\n                        targetMomentType.decimalValue = 0;\n                        targetMomentType.formattedValueEn = targetMomentType.wholeValue.toString();\n                        bubbled = true;\n                    }\n                });\n            };\n\n            each(bubbles, bubbleTypes);\n        }\n\n        // Recalculate formatted values.\n        if (bubbled) {\n            foundFirst = false;\n            significantDigits = significantDigitsCache;\n            momentTypes = map(momentTypes, formatValue);\n            momentTypes = compact(momentTypes);\n        }\n\n        if (outputTypes && !(isMaxValue && !settings.trim)) {\n            momentTypes = map(momentTypes, function (momentType) {\n                if (find(outputTypes, function (outputType) {\n                    return momentType.type === outputType;\n                })) {\n                    return momentType;\n                }\n\n                return null;\n            });\n\n            momentTypes = compact(momentTypes);\n        } else {\n            // Trim Large.\n            if (trimLarge) {\n                momentTypes = rest(momentTypes, function (momentType) {\n                    // Stop trimming on:\n                    // - the smallest moment type\n                    // - a type marked for stopTrim\n                    // - a type that has a whole value\n                    return !momentType.isSmallest && !momentType.wholeValue && !find(stopTrim, momentType.type);\n                });\n            }\n\n            // Largest.\n            if (largest && momentTypes.length) {\n                momentTypes = momentTypes.slice(0, largest);\n            }\n\n            // Trim Small.\n            if (trimSmall && momentTypes.length > 1) {\n                momentTypes = initial(momentTypes, function (momentType) {\n                    // Stop trimming on:\n                    // - a type marked for stopTrim\n                    // - a type that has a whole value\n                    // - the largest momentType\n                    return !momentType.wholeValue && !find(stopTrim, momentType.type) && !momentType.isLargest;\n                });\n            }\n\n            // Trim Mid.\n            if (trimMid) {\n                momentTypes = map(momentTypes, function (momentType, index) {\n                    if (index > 0 && index < momentTypes.length - 1 && !momentType.wholeValue) {\n                        return null;\n                    }\n\n                    return momentType;\n                });\n\n                momentTypes = compact(momentTypes);\n            }\n\n            // Trim Final.\n            if (trimFinal && momentTypes.length === 1 && !momentTypes[0].wholeValue && !(!trunc && momentTypes[0].isSmallest && momentTypes[0].rawValue < minValue)) {\n                momentTypes = [];\n            }\n        }\n\n        if (returnMomentTypes) {\n            return momentTypes;\n        }\n\n        // Localize and pluralize unit labels.\n        each(tokens, function (token) {\n            var key = momentTokens[token.type];\n\n            var momentType = find(momentTypes, function (momentType) {\n                return momentType.type === token.type;\n            });\n\n            if (!key || !momentType) {\n                return;\n            }\n\n            var values = momentType.formattedValueEn.split(\".\");\n\n            values[0] = parseInt(values[0], 10);\n\n            if (values[1]) {\n                values[1] = parseFloat(\"0.\" + values[1], 10);\n            } else {\n                values[1] = null;\n            }\n\n            var pluralKey = localeData.durationPluralKey(key, values[0], values[1]);\n\n            var labels = durationGetLabels(key, localeData);\n\n            var autoLocalized = false;\n\n            var pluralizedLabels = {};\n\n            // Auto-Localized unit labels.\n            each(localeData._durationLabelTypes, function (labelType) {\n                var label = find(labels, function (label) {\n                    return label.type === labelType.type && label.key === pluralKey;\n                });\n\n                if (label) {\n                    pluralizedLabels[label.type] = label.label;\n\n                    if (stringIncludes(token.text, labelType.string)) {\n                        token.text = token.text.replace(labelType.string, label.label);\n                        autoLocalized = true;\n                    }\n                }\n            });\n\n            // Auto-pluralized unit labels.\n            if (usePlural && !autoLocalized) {\n                labels.sort(durationLabelCompare);\n\n                each(labels, function (label) {\n                    if (pluralizedLabels[label.type] === label.label) {\n                        if (stringIncludes(token.text, label.label)) {\n                            // Stop checking this token if its label is already\n                            // correctly pluralized.\n                            return false;\n                        }\n\n                        // Skip this label if it is correct, but not present in\n                        // the token's text.\n                        return;\n                    }\n\n                    if (stringIncludes(token.text, label.label)) {\n                        // Replece this token's label and stop checking.\n                        token.text = token.text.replace(label.label, pluralizedLabels[label.type]);\n                        return false;\n                    }\n                });\n            }\n        });\n\n        // Build ouptut.\n        tokens = map(tokens, function (token) {\n            if (!token.type) {\n                return token.text;\n            }\n\n            var momentType = find(momentTypes, function (momentType) {\n                return momentType.type === token.type;\n            });\n\n            if (!momentType) {\n                return \"\";\n            }\n\n            var out = \"\";\n\n            if (useLeftUnits) {\n                out += token.text;\n            }\n\n            if (isNegative && isMaxValue || !isNegative && isMinValue) {\n                out += \"< \";\n                isMaxValue = false;\n                isMinValue = false;\n            }\n\n            if (isNegative && isMinValue || !isNegative && isMaxValue) {\n                out += \"> \";\n                isMaxValue = false;\n                isMinValue = false;\n            }\n\n            if (isNegative && (momentType.value > 0 || trim === \"\" || find(stopTrim, momentType.type) || find(outputTypes, momentType.type))) {\n                out += \"-\";\n                isNegative = false;\n            }\n\n            if (token.type === \"milliseconds\" && momentType.formattedValueMS) {\n                out += momentType.formattedValueMS;\n            } else {\n                out += momentType.formattedValue;\n            }\n\n            if (!useLeftUnits) {\n                out += token.text;\n            }\n\n            return out;\n        });\n\n        // Trim leading and trailing comma, space, colon, and dot.\n        return tokens.join(\"\").replace(/(,| |:|\\.)*$/, \"\").replace(/^(,| |:|\\.)*/, \"\");\n    }\n\n    // defaultFormatTemplate\n    function defaultFormatTemplate() {\n        var dur = this.duration;\n\n        var findType = function findType(type) {\n            return dur._data[type];\n        };\n\n        var firstType = find(this.types, findType);\n\n        var lastType = findLast(this.types, findType);\n\n        // Default template strings for each duration dimension type.\n        switch (firstType) {\n            case \"milliseconds\":\n                return \"S __\";\n            case \"seconds\": // Fallthrough.\n            case \"minutes\":\n                return \"*_MS_\";\n            case \"hours\":\n                return \"_HMS_\";\n            case \"days\": // Possible Fallthrough.\n                if (firstType === lastType) {\n                    return \"d __\";\n                }\n            case \"weeks\":\n                if (firstType === lastType) {\n                    return \"w __\";\n                }\n\n                if (this.trim === null) {\n                    this.trim = \"both\";\n                }\n\n                return \"w __, d __, h __\";\n            case \"months\": // Possible Fallthrough.\n                if (firstType === lastType) {\n                    return \"M __\";\n                }\n            case \"years\":\n                if (firstType === lastType) {\n                    return \"y __\";\n                }\n\n                if (this.trim === null) {\n                    this.trim = \"both\";\n                }\n\n                return \"y __, M __, d __\";\n            default:\n                if (this.trim === null) {\n                    this.trim = \"both\";\n                }\n\n                return \"y __, d __, h __, m __, s __\";\n        }\n    }\n\n    // init\n    function init(context) {\n        if (!context) {\n            throw \"Moment Duration Format init cannot find moment instance.\";\n        }\n\n        context.duration.format = durationsFormat;\n        context.duration.fn.format = durationFormat;\n\n        context.duration.fn.format.defaults = {\n            // Many options are defaulted to `null` to distinguish between\n            // 'not set' and 'set to `false`'\n\n            // trim\n            // Can be a string, a delimited list of strings, an array of strings,\n            // or a boolean.\n            // \"large\" - will trim largest-magnitude zero-value tokens until\n            // finding a token with a value, a token identified as 'stopTrim', or\n            // the final token of the format string.\n            // \"small\" - will trim smallest-magnitude zero-value tokens until\n            // finding a token with a value, a token identified as 'stopTrim', or\n            // the final token of the format string.\n            // \"both\" - will execute \"large\" trim then \"small\" trim.\n            // \"mid\" - will trim any zero-value tokens that are not the first or\n            // last tokens. Usually used in conjunction with \"large\" or \"both\".\n            // e.g. \"large mid\" or \"both mid\".\n            // \"final\" - will trim the final token if it is zero-value. Use this\n            // option with \"large\" or \"both\" to output an empty string when\n            // formatting a zero-value duration. e.g. \"large final\" or \"both final\".\n            // \"all\" - Will trim all zero-value tokens. Shorthand for \"both mid final\".\n            // \"left\" - maps to \"large\" to support plugin's version 1 API.\n            // \"right\" - maps to \"large\" to support plugin's version 1 API.\n            // `false` - template tokens are not trimmed.\n            // `true` - treated as \"large\".\n            // `null` - treated as \"large\".\n            trim: null,\n\n            // stopTrim\n            // A moment token string, a delimited set of moment token strings,\n            // or an array of moment token strings. Trimming will stop when a token\n            // listed in this option is reached. A \"*\" character in the format\n            // template string will also mark a moment token as stopTrim.\n            // e.g. \"d [days] *h:mm:ss\" will always stop trimming at the 'hours' token.\n            stopTrim: null,\n\n            // largest\n            // Set to a positive integer to output only the \"n\" largest-magnitude\n            // moment tokens that have a value. All lesser-magnitude moment tokens\n            // will be ignored. This option takes effect even if `trim` is set\n            // to `false`.\n            largest: null,\n\n            // maxValue\n            // Use `maxValue` to render generalized output for large duration values,\n            // e.g. `\"> 60 days\"`. `maxValue` must be a positive integer and is\n            /// applied to the greatest-magnitude moment token in the format template.\n            maxValue: null,\n\n            // minValue\n            // Use `minValue` to render generalized output for small duration values,\n            // e.g. `\"< 5 minutes\"`. `minValue` must be a positive integer and is\n            // applied to the least-magnitude moment token in the format template.\n            minValue: null,\n\n            // precision\n            // If a positive integer, number of decimal fraction digits to render.\n            // If a negative integer, number of integer place digits to truncate to 0.\n            // If `useSignificantDigits` is set to `true` and `precision` is a positive\n            // integer, sets the maximum number of significant digits used in the\n            // formatted output.\n            precision: 0,\n\n            // trunc\n            // Default behavior rounds final token value. Set to `true` to\n            // truncate final token value, which was the default behavior in\n            // version 1 of this plugin.\n            trunc: false,\n\n            // forceLength\n            // Force first moment token with a value to render at full length\n            // even when template is trimmed and first moment token has length of 1.\n            forceLength: null,\n\n            // userLocale\n            // Formatted numerical output is rendered using `toLocaleString`\n            // and the locale of the user's environment. Set this option to render\n            // numerical output using a different locale. Unit names are rendered\n            // and detected using the locale set in moment.js, which can be different\n            // from the locale of user's environment.\n            userLocale: null,\n\n            // usePlural\n            // Will automatically singularize or pluralize unit names when they\n            // appear in the text associated with each moment token. Standard and\n            // short unit labels are singularized and pluralized, based on locale.\n            // e.g. in english, \"1 second\" or \"1 sec\" would be rendered instead\n            // of \"1 seconds\" or \"1 secs\". The default pluralization function\n            // renders a plural label for a value with decimal precision.\n            // e.g. \"1.0 seconds\" is never rendered as \"1.0 second\".\n            // Label types and pluralization function are configurable in the\n            // localeData extensions.\n            usePlural: true,\n\n            // useLeftUnits\n            // The text to the right of each moment token in a format string\n            // is treated as that token's units for the purposes of trimming,\n            // singularizing, and auto-localizing.\n            // e.g. \"h [hours], m [minutes], s [seconds]\".\n            // To properly singularize or localize a format string such as\n            // \"[hours] h, [minutes] m, [seconds] s\", where the units appear\n            // to the left of each moment token, set useLeftUnits to `true`.\n            // This plugin is not tested in the context of rtl text.\n            useLeftUnits: false,\n\n            // useGrouping\n            // Enables locale-based digit grouping in the formatted output. See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\n            useGrouping: true,\n\n            // useSignificantDigits\n            // Treat the `precision` option as the maximum significant digits\n            // to be rendered. Precision must be a positive integer. Significant\n            // digits extend across unit types,\n            // e.g. \"6 hours 37.5 minutes\" represents 4 significant digits.\n            // Enabling this option causes token length to be ignored. See  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\n            useSignificantDigits: false,\n\n            // template\n            // The template string used to format the duration. May be a function\n            // or a string. Template functions are executed with the `this` binding\n            // of the settings object so that template strings may be dynamically\n            // generated based on the duration object (accessible via `this.duration`)\n            // or any of the other settings. Leading and trailing space, comma,\n            // period, and colon characters are trimmed from the resulting string.\n            template: defaultFormatTemplate,\n\n            // useToLocaleString\n            // Set this option to `false` to ignore the `toLocaleString` feature\n            // test and force the use of the `formatNumber` fallback function\n            // included in this plugin.\n            useToLocaleString: true,\n\n            // formatNumber fallback options.\n            // When `toLocaleString` is detected and passes the feature test, the\n            // following options will have no effect: `toLocaleString` will be used\n            // for formatting and the grouping separator, decimal separator, and\n            // integer digit grouping will be determined by the user locale.\n\n            // groupingSeparator\n            // The integer digit grouping separator used when using the fallback\n            // formatNumber function.\n            groupingSeparator: \",\",\n\n            // decimalSeparator\n            // The decimal separator used when using the fallback formatNumber\n            // function.\n            decimalSeparator: \".\",\n\n            // grouping\n            // The integer digit grouping used when using the fallback formatNumber\n            // function. Must be an array. The default value of `[3]` gives the\n            // standard 3-digit thousand/million/billion digit groupings for the\n            // \"en\" locale. Setting this option to `[3, 2]` would generate the\n            // thousand/lakh/crore digit groupings used in the \"en-IN\" locale.\n            grouping: [3]\n        };\n\n        context.updateLocale('en', engLocale);\n    }\n\n    // Run feature tests for `Number#toLocaleString`.\n    var toLocaleStringFormatter = function(number, locale, options) {\n        return number.toLocaleString(locale, options);\n    };\n\n    toLocaleStringWorks = toLocaleStringSupportsLocales() && featureTestFormatter(toLocaleStringFormatter);\n    toLocaleStringRoundingWorks = toLocaleStringWorks && featureTestFormatterRounding(toLocaleStringFormatter);\n\n    // Run feature tests for `Intl.NumberFormat#format`.\n    var intlNumberFormatFormatter = function(number, locale, options) {\n        if (typeof window !== 'undefined' && window && window.Intl && window.Intl.NumberFormat) {\n            return window.Intl.NumberFormat(locale, options).format(number);\n        }\n    };\n\n    intlNumberFormatWorks = featureTestFormatter(intlNumberFormatFormatter);\n    intlNumberFormatRoundingWorks = intlNumberFormatWorks && featureTestFormatterRounding(intlNumberFormatFormatter);\n\n    // Initialize duration format on the global moment instance.\n    init(moment);\n\n    // Return the init function so that duration format can be\n    // initialized on other moment instances.\n    return init;\n});\n","const { OPERATORS, AGGREGATE_FUNCTIONS } = require('./const');\r\nconst { NODE_TYPES } = require('../prepare/parser');\r\n\r\nconst {\r\n  getRowEvaluator,\r\n  rowSorter,\r\n  aggregateValues,\r\n} = require('./evaluate');\r\n\r\nmodule.exports = {\r\n  groupRows,\r\n  populateAggregates,\r\n};\r\n\r\n/**\r\n * @typedef {import('../..').QueryContext} QueryContext\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').ResultRow} ResultRow\r\n */\r\n\r\n/**\r\n *\r\n * @param {QueryContext} context\r\n * @param {Node[]} cols\r\n * @param {ResultRow[]} rows\r\n * @param {Node} groupBy\r\n */\r\nfunction populateAggregates(context, cols, rows, groupBy) {\r\n    if (cols.some(node => node && node.id in AGGREGATE_FUNCTIONS && !node.window)) {\r\n        if (rows.length === 0) {\r\n            // Special case for COUNT(*)\r\n            const index = cols.findIndex(n => n.id === \"COUNT\");\r\n            if (index >= 0) {\r\n                const row = [];\r\n                row[index] = 0;\r\n                rows = [row];\r\n            }\r\n        }\r\n        else {\r\n            if (!groupBy) {\r\n                // If we have aggregate functions but we're not grouping,\r\n                // then apply aggregate functions to whole set\r\n                const aggRow = rows[0];\r\n                aggRow['group'] = rows;\r\n                rows = [\r\n                    aggRow // Single row result set\r\n                ];\r\n            }\r\n            rows = rows.map(row => computeAggregates(context, cols, row['group']));\r\n        }\r\n    }\r\n    return rows;\r\n}\r\n\r\n/**\r\n * Turns a group of rows into one aggregate row\r\n * @param {QueryContext} context\r\n * @param {Node[]} cols\r\n * @param {any[][]} rows\r\n * @return {any[]}\r\n */\r\nfunction computeAggregates (context, cols, rows) {\r\n    // If there are no rows (i.e. due to filtering) then\r\n    // just return an empty row.\r\n    if (rows.length === 0) {\r\n        return [];\r\n    }\r\n\r\n    // Pick the first row from each group\r\n    const row = rows[0];\r\n\r\n    // Fill in aggregate values\r\n    cols.forEach((node, i) => {\r\n        // Ignore non-aggregate values\r\n        // i.e. the ones already filled in\r\n        if (typeof row[i] !== \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        if (node.type === NODE_TYPES.FUNCTION_CALL && !node.window) {\r\n            if (node.id in AGGREGATE_FUNCTIONS) {\r\n                const fn = AGGREGATE_FUNCTIONS[node.id];\r\n\r\n                if (node.children.length === 0) {\r\n                    throw new Error(`Function ${node.id} requires at least one paramater.`);\r\n                }\r\n\r\n                let filteredRows = rows;\r\n\r\n                if (node.filter) {\r\n                    filteredRows = filteredRows.filter(getRowEvaluator(context, node.filter));\r\n                }\r\n\r\n                if (node.order) {\r\n                    filteredRows.sort(rowSorter(context, node.order));\r\n                }\r\n\r\n                // Aggregate values get special treatment for things like '*' and DISTINCT\r\n                const args = node.children.map(n => aggregateValues(context, filteredRows, n, node.distinct));\r\n                row[i] = fn(...args);\r\n            } else {\r\n                throw new Error(\"Function not found: \" + node.id);\r\n            }\r\n        }\r\n    });\r\n\r\n    return row;\r\n}\r\n\r\n/**\r\n * Collapse multiple rows into a single row\r\n * @param {QueryContext} context\r\n * @param {any[][]} rows\r\n * @param {Node[]} groupBy\r\n * @returns {any[]}\r\n */\r\nfunction groupRows (context, rows, groupBy) {\r\n    const groupByMap = {};\r\n\r\n    for(const row of rows) {\r\n        const key = JSON.stringify(groupBy.map(g => context.evaluate(row, g, rows)));\r\n\r\n        if (!groupByMap[key]) {\r\n            groupByMap[key] = [];\r\n        }\r\n\r\n        groupByMap[key].push(row);\r\n    }\r\n\r\n    return Object.values(groupByMap).map(rows => {\r\n        // Just pick the first row from each group\r\n        const aggRow = rows[0];\r\n\r\n        // Save reference to original rows\r\n        aggRow['group'] = rows;\r\n\r\n        return aggRow;\r\n    });\r\n}\r\n","const { NODE_TYPES } = require('../types');\r\nconst { comparator } = require('../evaluate/evaluate');\r\n\r\nmodule.exports = {\r\n  sortRows,\r\n};\r\n\r\n/**\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').ResultRow} ResultRow\r\n */\r\n\r\n/**\r\n * Supposed to be an efficient sorter which aims to avoid evaluating\r\n * any more than necessary by caching results and bailing as soon as possible\r\n * @param {any} evaluate\r\n * @param {ResultRow[]} rows\r\n * @param {Node[]} orderBy\r\n */\r\nfunction sortRows(evaluate, rows, orderBy) {\r\n    // Pre-create ordering value array for each row\r\n    rows.forEach(row => {\r\n        row['orderBy'] = [];\r\n    });\r\n\r\n    rows = rows.sort((a, b) => {\r\n        for (let depth = 0; depth < orderBy.length; depth++) {\r\n            const orderNode = orderBy[depth];\r\n\r\n            const valA = getOrderingValue(evaluate, a, orderNode, depth);\r\n            const valB = getOrderingValue(evaluate, b, orderNode, depth);\r\n\r\n            const sort = comparator(valA, valB) * (orderNode.desc ? -1 : 1);\r\n\r\n            if (sort !== 0) {\r\n                return sort;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    });\r\n\r\n    return rows;\r\n}\r\n\r\n/**\r\n * @param {any} evaluate\r\n * @param {any[]} row\r\n * @param {Node} parsedOrder\r\n * @param {ResultRow[]} [rows]\r\n * @param {number} depth\r\n */\r\nfunction getOrderingValue (evaluate, row, parsedOrder, depth, rows=null) {\r\n    let va = row['orderBy'][depth];\r\n\r\n    // The first time this row is visited (at this depth) we'll\r\n    // calculate its ordering value.\r\n    if (typeof va === \"undefined\") {\r\n        let v;\r\n\r\n        // If we have a literal number it means we should\r\n        // sort by nth column\r\n        if (parsedOrder.type === NODE_TYPES.NUMBER) {\r\n            // If the column index is less than 0 then count from right.    Column numbers are 1-indexed\r\n            v = row[+parsedOrder.id < 0 ? (row.length + +parsedOrder.id) : (+parsedOrder.id - 1)];\r\n        }\r\n        else {\r\n            v = evaluate(row, parsedOrder, rows);\r\n        }\r\n\r\n        if (typeof v === \"undefined\") {\r\n            throw new Error(\"Order by unknown column: \" + parsedOrder.source);\r\n        }\r\n\r\n        // Set value to save resolution next time\r\n        row['orderBy'][depth] = v;\r\n        va = v;\r\n    }\r\n\r\n    return va;\r\n}\r\n","module.exports = {\r\n    getCTEsMap,\r\n}\r\n\r\nconst { NODE_TYPES } = require('./parser');\r\nconst evaluateCompound = require('../evaluate/evaluate-compound');\r\nconst { queryResultToObjectArray } = require('../util');\r\n\r\n/**\r\n * @typedef {import('../..')} Query\r\n * @typedef {import('../..').Node} Node\r\n */\r\n\r\n/**\r\n * @param {Query} query\r\n * @param {Node[]} nodes\r\n */\r\nasync function getCTEsMap (query, nodes) {\r\n    /** @type {{ [name: string]: any[] }} */\r\n    const out = {};\r\n\r\n    for (const node of nodes) {\r\n        if (node.type !== NODE_TYPES.SYMBOL) {\r\n            throw TypeError(`getCTEsMap: node isn't a symbol`);\r\n        }\r\n\r\n        out[node.id] = queryResultToObjectArray(await evaluateCompound(query, node.children[0]), node.headers);\r\n    }\r\n\r\n    return out;\r\n}","module.exports = {\r\n  nodeToQueryObject,\r\n  nodesToTables,\r\n  getWindowsMap\r\n};\r\n\r\n/**\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').ParsedTable} ParsedTable\r\n * @typedef {import('../..').WindowSpec} WindowSpec\r\n */\r\n\r\nconst { NODE_TYPES } = require('./parser');\r\n\r\n// One of these clauses must be present in the query\r\nconst REQUIRED_CLAUSES = ['FROM','SELECT','VALUES','INSERT INTO','UPDATE','DELETE FROM','CREATE TABLE','DROP TABLE'];\r\n\r\nfunction nodeToQueryObject (node) {\r\n    if (node.type !== NODE_TYPES.STATEMENT) {\r\n        throw TypeError(\"Not a statement node\")\r\n    }\r\n\r\n    const out = {};\r\n\r\n    for (const clause of node.children) {\r\n        const name = clause.id.toString().toLowerCase();\r\n\r\n        if (/WHERE|HAVING|LIMIT|OFFSET|EXPLAIN/.test(clause.id)) {\r\n            out[name] = clause.children[0];\r\n        } else {\r\n            // /FROM|SELECT|ORDER BY|GROUP BY|WINDOW|WITH|VALUES/\r\n            out[name] = clause.children;\r\n        }\r\n    }\r\n\r\n    if (!REQUIRED_CLAUSES.some(rq => typeof out[rq.toLowerCase()] !== \"undefined\")) {\r\n        throw new Error(\"You must specify FROM, SELECT or VALUES\");\r\n    }\r\n\r\n    if (out.values && (out.from || out.select)) {\r\n        throw Error(\"VALUES cannot be used with FROM or SELECT\");\r\n    }\r\n\r\n    if (!out.from) {\r\n        out.from = [];\r\n    }\r\n\r\n    if (!out.select) {\r\n        out.select = [];\r\n    }\r\n\r\n    if (out.select.length === 0) {\r\n        out.select.push({ type: NODE_TYPES.SYMBOL, id: \"*\" });\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n*\r\n* @param {Node[]} nodes\r\n* @returns {ParsedTable[]}\r\n*/\r\nfunction nodesToTables (nodes) {\r\n    return nodes.map((node,i) => {\r\n\r\n        if (node.type !== NODE_TYPES.STATEMENT &&\r\n            node.type !== NODE_TYPES.COMPOUND_QUERY &&\r\n            node.type !== NODE_TYPES.SYMBOL &&\r\n            node.type !== NODE_TYPES.FUNCTION_CALL)\r\n        {\r\n            throw new Error(`Node type ${node.type} cannot be a table`);\r\n        }\r\n\r\n        const name = (node.type === NODE_TYPES.STATEMENT || node.type === NODE_TYPES.COMPOUND_QUERY) ? \r\n            `SUBQUERY_${i}` : String(node.id);\r\n\r\n        return {\r\n            name,\r\n            alias: node.alias,\r\n            headers: node.headers,\r\n            join: node.using,\r\n            predicate: node.predicate,\r\n            inner: node.inner,\r\n            params: node.children,\r\n            explain: \"\",\r\n            rowCount: 0,\r\n            symbol: Symbol(`Table ${node.alias || name}`),\r\n            subquery: (node.type === NODE_TYPES.STATEMENT || node.type === NODE_TYPES.COMPOUND_QUERY) ? node : null,\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n*\r\n* @param {Node[]} nodes\r\n*/\r\nfunction getWindowsMap (nodes) {\r\n  /** @type {{ [name: string]: WindowSpec }} */\r\n  const out = {};\r\n\r\n  for (const node of nodes) {\r\n      if (node.type !== NODE_TYPES.SYMBOL) {\r\n          throw TypeError(`getWindowsMap: node isn't a symbol`);\r\n      }\r\n\r\n      if (!node.window || typeof node.window === \"string\") {\r\n          throw TypeError(`Window '${node.id}' doesn't have a definition`)\r\n      }\r\n\r\n      out[node.id] = node.window;\r\n  }\r\n\r\n  return out;\r\n}\r\n","module.exports = evaluateValues;\r\n\r\nconst { evaluateConstantExpression } = require('./evaluate');\r\n\r\n/** @typedef {import('../..').Node} Node */\r\n\r\n/**\r\n * Evaluate VALUES clause\r\n * @param {Node[]} values\r\n */\r\nfunction evaluateValues (values, params) {\r\n    const firstRow = values[0];\r\n\r\n    if (!firstRow) {\r\n        return [];\r\n    }\r\n\r\n    const width = firstRow.children.length;\r\n    const headers = Array(width).fill(0).map((_, i) => `Col ${i + 1}`);\r\n\r\n    const out = values.map(row => row.children.map(n => evaluateConstantExpression(n, params)));\r\n\r\n    out.unshift(headers);\r\n\r\n    return out;\r\n}","const { evaluateConstantExpression, isConstantExpression } = require('../evaluate/evaluate');\r\n\r\nmodule.exports = {\r\n    applyLimit,\r\n};\r\n\r\nfunction applyLimit(rows, limit, offset, params=null) {\r\n    if (typeof limit !== \"undefined\" && !isConstantExpression(limit)) {\r\n        throw new Error(`LIMIT must be a constant expression: ${limit.source}`);\r\n    }\r\n    if (typeof offset !== \"undefined\" && !isConstantExpression(offset)) {\r\n        throw new Error(`OFFSET must be a constant expression: ${offset.source}`);\r\n    }\r\n    const start = offset ? evaluateConstantExpression(offset, params) : 0;\r\n    const end = limit ? (start + evaluateConstantExpression(limit, params)) : rows.length;\r\n    return rows.slice(start, end);\r\n}\r\n","const { setJoin, setJoinPredicate, getRowData, setRowData } = require('./joins');\r\nconst { resolveConstant, resolvePath } = require('../evaluate/resolve');\r\nconst { resolveValue } = require('../evaluate/resolve');\r\nconst { evaluate } = require('../evaluate/evaluate');\r\nconst { traverseWhereTree } = require('../finalise/filter');\r\n\r\nmodule.exports = {\r\n  getQueryContext,\r\n};\r\n\r\n/**\r\n * @typedef {import('../..')} Query\r\n * @typedef {import('../..').Schema} Schema\r\n * @typedef {import('../..').Node} Node\r\n * @typedef {import('../..').ParsedTable} ParsedTable\r\n * @typedef {import('../..').WindowSpec} WindowSpec\r\n * @typedef {import('../..').ResultRow} ResultRow\r\n * @typedef {import('../..').QueryCallbacks} QueryCallbacks\r\n * @typedef {import('../..').QueryContext} QueryContext\r\n */\r\n\r\n\r\n/**\r\n * @param {Query} query\r\n * @param {*} options\r\n * @returns {QueryContext}\r\n */\r\nfunction getQueryContext(query, { tables, clauses, windows, subqueries, CTEs, schema, views, providers, outer, params }) {\r\n    /** @type {QueryContext} */\r\n    const context = {\r\n        query,\r\n\r\n        cols: [],\r\n        colHeaders: [],\r\n        colAlias: {},\r\n        tables,\r\n\r\n        where: clauses.where,\r\n        having: clauses.having,\r\n        orderBy: clauses['order by'],\r\n        groupBy: clauses['group by'],\r\n        windows,\r\n\r\n        evaluate: null,\r\n\r\n        resolveConstant,\r\n        resolvePath,\r\n        resolveValue: null,\r\n\r\n        findTable,\r\n        findWhere,\r\n\r\n        setJoin,\r\n        setJoinPredicate,\r\n        getRowData,\r\n        setRowData,\r\n\r\n        subqueries,\r\n        CTEs,\r\n        views,\r\n\r\n        schema,\r\n        providers,\r\n        userFunctions: schema.userFunctions || {},\r\n\r\n        outer,\r\n\r\n        params,\r\n    };\r\n\r\n    context.evaluate = evaluate.bind(context);\r\n    context.resolveValue = resolveValue.bind(context);\r\n    context.findTable = findTable.bind(context);\r\n    context.findWhere = findWhere.bind(context);\r\n\r\n    return context;\r\n}\r\n\r\nfunction findTable (name) {\r\n    return this.tables.find(t => t.name === name && t.join !== undefined);\r\n}\r\n\r\n  /**\r\n   * @param {string} symbol\r\n   * @param {string|string[]} [operator]\r\n   */\r\nfunction findWhere (symbol, operator=\"=\") {\r\n    if (!this.where) {\r\n        return; // undefined\r\n    }\r\n\r\n    return traverseWhereTree(this.where, symbol, operator, this.params);\r\n}","const VIEW_KEY = \"views\";\r\nconst persist = require('./persist');\r\nconst { queryResultToObjectArray, split } = require('./util');\r\n\r\nmodule.exports = { performDDL, VIEW_KEY };\r\n\r\n/**\r\n * Check if query is actually a Database Management query e.g. CREATE, INSERT, DELETE, DROP etc.\r\n * @param {string} query \r\n * @this {import('..')}\r\n */\r\nasync function performDDL (query) {\r\n\r\n    const viewMatch = /^CREATE VIEW ([a-zA-Z0-9_]+) AS\\s+/.exec(query);\r\n    if (viewMatch)\r\n    {\r\n        const name = viewMatch[1];\r\n        const view = query.substring(viewMatch[0].length);\r\n\r\n        this.views[name] = view;\r\n\r\n        persist.setItem(VIEW_KEY, this.views);\r\n\r\n        return true;\r\n    }\r\n\r\n    const dropViewMatch = /^DROP VIEW ([a-zA-Z0-9_]+)/.exec(query);\r\n    if (dropViewMatch)\r\n    {\r\n        const name = dropViewMatch[1];\r\n\r\n        delete this.views[name]\r\n\r\n        persist.setItem(VIEW_KEY, this.views);\r\n\r\n        return true;\r\n    }\r\n\r\n    const tableMatch = /^CREATE TABLE ([a-zA-Z0-9_\\.]+)(?: PRIMARY KEY ([a-zA-Z0-9_]+))?/.exec(query);\r\n    if (tableMatch)\r\n    {\r\n        const name = tableMatch[1];\r\n        const key = tableMatch[2];\r\n\r\n        let tableName = name;\r\n        let schemaName;\r\n\r\n        if (name.includes(\".\")) {\r\n            [ schemaName, tableName ] = split(name, \".\", 2);\r\n        }\r\n\r\n        const { callbacks } = this.providers[schemaName] || this.schema;\r\n\r\n        if (callbacks.createTable) {\r\n            await callbacks.createTable(tableName, key);\r\n            return true;\r\n        } else {\r\n            throw Error(\"Schema does not support creating tables\");\r\n        }\r\n    }\r\n\r\n    const insertMatch = /^INSERT INTO ([a-zA-Z0-9_\\.]+)(?: \\(([a-zA-Z0-9_, ]+)\\))?/.exec(query);\r\n    if (insertMatch)\r\n    {\r\n        const name = insertMatch[1];\r\n        const cols = insertMatch[2] ? insertMatch[2].split(\",\").map(c => c.trim()) : null;\r\n\r\n        let tableName = name;\r\n        let schemaName;\r\n\r\n        if (name.includes(\".\")) {\r\n            [ schemaName, tableName ] = split(name, \".\", 2);\r\n        }\r\n\r\n        const { callbacks } = this.providers[schemaName] || this.schema;\r\n        if (!callbacks.insertIntoTable) {\r\n            throw Error(\"Schema does not support insertion\");\r\n        }\r\n\r\n        let insertQuery = query.substring(insertMatch[0].length);\r\n        /** @type {\"error\"|\"ignore\"|\"update\"} */\r\n        let duplicate = \"error\";\r\n\r\n        if (query.endsWith(\"ON DUPLICATE KEY IGNORE\")) {\r\n            insertQuery = insertQuery.substr(0, insertQuery.length - \"ON DUPLICATE KEY IGNORE\".length);\r\n            duplicate = \"ignore\";\r\n        } else if (query.endsWith(\"ON DUPLICATE KEY UPDATE\")) {\r\n            insertQuery = insertQuery.substr(0, insertQuery.length - \"ON DUPLICATE KEY UPDATE\".length);\r\n            duplicate = \"update\";\r\n        }\r\n\r\n        let results = await this.runSelect(insertQuery);\r\n\r\n        const objArray = queryResultToObjectArray(results, cols);\r\n        await callbacks.insertIntoTable(tableName, objArray, duplicate);\r\n        return true;\r\n    }\r\n\r\n    const updateMatch = /^UPDATE ([a-zA-Z0-9_\\.]+)\\s+SET ([a-zA-Z0-9_]+)\\s*=\\s*(.*)\\s+WHERE ([a-zA-Z0-9_]+)\\s*=\\s*(.*)/.exec(query);\r\n    if (updateMatch)\r\n    {\r\n        const name = updateMatch[1];\r\n        const col = updateMatch[2];\r\n        const expr = updateMatch[3];\r\n        const whereCol = updateMatch[4];\r\n        const whereExpr = updateMatch[5];\r\n\r\n        let tableName = name;\r\n        let schemaName;\r\n\r\n        if (name.includes(\".\")) {\r\n            [ schemaName, tableName ] = split(name, \".\", 2);\r\n        }\r\n\r\n        // Simple constant expressions\r\n        let results = await this.runSelect(\"SELECT \" + expr);\r\n        const updateVal = results[1][0];\r\n\r\n        // Simple constant expressions\r\n        let whereResults = await this.runSelect(\"SELECT \" + whereExpr);\r\n        const whereVal = whereResults[1][0];\r\n\r\n        const { callbacks } = this.providers[schemaName] || this.schema;\r\n\r\n        if (callbacks.updateTable) {\r\n            await callbacks.updateTable(tableName, o => ({ ...o, [col]: updateVal }), o => o[whereCol] == whereVal);\r\n            return true;\r\n        } else {\r\n            throw Error(\"Schema does not support update\");\r\n        }\r\n    }\r\n\r\n    const deleteMatch = /^DELETE FROM ([a-zA-Z0-9_\\.]+)\\s+WHERE (?:\"([a-zA-Z0-9_ ]+)\"|([a-zA-Z0-9_]+))\\s*=\\s*(.*)/.exec(query);\r\n    if (deleteMatch)\r\n    {\r\n        const name = deleteMatch[1];\r\n        const whereCol = deleteMatch[2] || deleteMatch[3];\r\n        const whereExpr = deleteMatch[4];\r\n\r\n        let tableName = name;\r\n        let schemaName;\r\n\r\n        if (name.includes(\".\")) {\r\n            [ schemaName, tableName ] = split(name, \".\", 2);\r\n        }\r\n\r\n        // Simple constant expressions\r\n        let whereResults = await this.runSelect(\"SELECT \" + whereExpr);\r\n        const whereVal = whereResults[1][0];\r\n\r\n        const { callbacks } = this.providers[schemaName] || this.schema;\r\n\r\n        if (callbacks.deleteFromTable) {\r\n            await callbacks.deleteFromTable(tableName, o => o[whereCol] == whereVal);\r\n            return true;\r\n        } else {\r\n            throw Error(\"Schema does not support update\");\r\n        }\r\n    }\r\n\r\n    if (/^DELETE FROM/.test(query)) {\r\n        throw Error(\"Only able to perform simple deletes i.e. DELETE FROM table WHERE col = val\");\r\n    }\r\n\r\n    const dropMatch = /^DROP TABLE ([a-zA-Z0-9_\\.]+)/.exec(query);\r\n    if (dropMatch)\r\n    {\r\n        const name = dropMatch[1];\r\n\r\n        let tableName = name;\r\n        let schemaName;\r\n\r\n        if (name.includes(\".\")) {\r\n            [ schemaName, tableName ] = split(name, \".\", 2);\r\n        }\r\n\r\n        const { callbacks } = this.providers[schemaName] || this.schema;\r\n\r\n        if (callbacks.dropTable) {\r\n            await callbacks.dropTable(tableName);\r\n            return true;\r\n        } else {\r\n            throw Error(\"Schema does not support creating tables\");\r\n        }\r\n    }\r\n\r\n    return false;\r\n}"],"sourceRoot":""}